<HTML>   
     <HEAD>
<TITLE>August 1999/Editor's Forum</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<H2><A HREF="../tocaug.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Departments</FONT></H2>

<HR>

<H2 ALIGN="center"><FONT COLOR="#800000">Editor's Forum</FONT></H2>
<HR>
<BLOCKQUOTE>

<p>Attendance was down at the Software Development trade show, the traditionally premier event for software developers, which was held this past May in San Francisco. Fewer vendors were there as well, and it was all too easy to stumble past the curtain bounding the show floor, to stare up at the vast unused spaces of Moscone Convention Center. Columnist Bobby Schmidt takes a couple guesses on page 89 as to why this show was so small. My own take is that, for the first time in years, we are sorely lacking a Next Big Thing to get excited about. C++ has been standardized. Java is old hat. Windows 2000 is, as of this writing, still off in the murky distance. XML is a cool thing but falls short of being a Next Big Thing. Everything in software development is still evolving, but nothing is currently Exploding or Emerging. However, for a more upbeat view of the show, see Stan Kelly-Bootle's column at the back of this magazine. (That's one thing I like about Stan. As a person who's seen it all, he can remind us not to take life so seriously.)</p>
<p>In my tireless attempts to put ye proverbial thumb to the pulse of the industry, I attended a few panels and classes. One of them was a panel named "Java 2: Platform or Promise," a sort of state-of-the-Java forum held for serious and casual pulse checkers alike. The big guns of Java were well represented, by panelists from Sun, Borland (Inprise), Symantec, and Oracle. Frankly, panels like this one, in which everyone talks the party line, are usually big yawners. But sometimes I go anyway in case someone drops a tidbit of gossip.</p>
<p>Here's the official word from the panel: applets are dead; servlets are where it's at. Java-to-native compilation is near-dead as well, at least on business systems; but it may still catch on in the embedded world. I felt disappointed by this consensus, because I'm one of those people who appreciate Java more for its neatness as a language than its cross-platform capabilities. I acknowledge that compiling Java to executable/DLLs is problematic &#151; we're just not ready for the 10 MB "Hello, world" application. But I still hold the torch for an object-oriented language that's as fast as C++ yet not so darned complicated. (Is that Stan I hear whispering, <I>Eiffel?</I>) Call me a heretic if you will. I prefer the word "pragmatist."</p>
<p>The panel on "Teaching and Learning C++" was anything but a yawner, thanks to our own Dan Saks, who bravely challenged the party line held by fellow panelists Bjarne Stroustrup, Scott Meyers, and Jim Coplien. You can read Stroustup's view in the May issue of <I>CUJ.</I> See his article, "Learning Standard C++ as a New Language." Stroustrup advocates early use of high-level libraries in teaching C++, using the abstraction thus afforded to protect new programmers from a morass of low-level details. He reiterated this view on the panel. Dan had something of a tough row to hoe, being not so much a celebrity as Stroustrup or Meyers (sorry, Dan), and being the only panelist to ask questions like: "what happens when new programmers stumble past the curtain of abstraction &#151; which they inevitably will &#151; and are exposed to the gory details anyway?" I'm hoping Dan will write an article about the panel, so I won't elaborate on his viewpoint here. I'll just say that Dan, who has nearly a decade of experience teaching C++, is eminently qualified to raise such questions.</p>
<p>The last session I attended was a class on effective use of RTTI (Run-Time Type Information) taught by Steve Dewhurst. Dewhurst presented several examples that looked like good uses of RTTI, then showed why they really weren't. The gist of his talk was that if you think you need RTTI, you're probably doing something wrong. I can't say I disagree. In our own Call for Papers we've practically begged for articles showing effective use of RTTI; I'm still waiting for a credible example. However, I haven't given up. If you think you've got an example, send an email to <B>mbriand@mfi.com</B>. There may still be a few surprises left in this language called C++.</p>
<p>Marc Briand<br>
Editor-in-Chief</p>

</BLOCKQUOTE>
</BODY>
</HTML>

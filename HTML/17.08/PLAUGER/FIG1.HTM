<HTML><HEAD>
<TITLE>August 1999/Standard C/C++/Figure 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 1:	list::sort</A></h4>
<pre>
typedef list&lt;_Ty, _Ax&gt; _Myt;
typedef _List_val&lt;_Ty, _Ax&gt; _Mybase;

void sort()
    {if (2 &lt;= size())
        {const size_t _MAXN = 15;
        _Myt _X(_Mybase::_Alval), _Arr[_MAXN + 1];
        size_t _N = 0;
        while (!empty())
            {_X.splice(_X.begin(), *this, begin());
            size_t _I;
            for (_I = 0; _I &lt; _N &amp;&amp; !_Arr[_I].empty(); ++_I)
                {_Arr[_I].merge(_X);
                _Arr[_I].swap(_X); }
            if (_I == _MAXN)
//                _Arr[_I].merge(_X);        // not merged at end
                _Arr[_I - 1].merge(_X);
            else
                {_Arr[_I].swap(_X);
                if (_I == _N)
                    ++_N; }}
//        while (0 &lt; _N)        // merged from big to small
//            merge(_A[--_N]); }}
        for (size_t _I = 1; _I &lt; _N; ++_I)
            _Arr[_I].merge(_Arr[_I-1]),
        swap (_Arr[_N-1]);

</pre>
</BODY>
</HTML>

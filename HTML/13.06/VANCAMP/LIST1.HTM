<HTML><HEAD>
<TITLE>June 1995/Dynamic Inheritance Using Filter Classes/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1 TableData <I>class</I></A></h4>
<pre>// tbldata.hpp
#ifndef TBLDATA_HPP
#define TBLDATA_HPP
#include &lt;string.h&gt;
#include &lt;assert.h&gt;

template &lt;class cellType&gt; class TableData
{
public:
   TableData (TableData *const prev):
          PrevTD (prev)
   { }
   virtual ~TableData (void)
   { }

   virtual const cellType GetCell (const int row,
          const int col)
   {
      assert (PrevTD != 0); // Override in buffer
      return (PrevTD-&gt;GetCell (row, col));
   }

   virtual void PurCell (const int row, const int col,
          const cellType &amp;value)
   {
      assert (PrevTD != 0);
      PrevTD-&gt;PutCell (row, col, value);
   }

   virtual const int GetNumRows (void) const
   {
      assert (PrevTD != 0);
      return (PrevTD-&gt;GetNumRows ());
   }

   virtual const int GetNumCols (void) const
   {
      assert (PrevTD != 0);
      return (PrevTD-&gt;GetNumCols ());
   }

   virtual const char &amp;GetRowHeading (const int row)
   {
      assert (PrevTD != 0);
      return (PrevTD-&gt;GetRowHeading (row));
   }

   virtual const char &amp;GetColHeading (const int col)
   {
      assert (PrevTD != 0);
      return (PrevTD-&gt;GetColHeading (col));
   }

protected:
   TableData *PrevTD;  // ptr to prev link in chain
private:
   TableData (void);   // disable default methods
   TableData (const TableData &amp;tData);
   TableData&amp; operator= (const TableData&amp;);
};
#endif
// End of File
</pre>
</BODY>
</HTML>

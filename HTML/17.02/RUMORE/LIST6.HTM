<HTML><HEAD>
<TITLE>February 1999/LUP Matrix Decomposition Using Templates/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6: Example program</A></h4>
<pre>
// gaussian LUP header, matrix header,
// vector header, etc.
#include "gausslup.h"

double data[] = {
    33.0, 16.0, 72.0,
    -24.0, -10.0, -57.0,
    -8.0, -4.0, -17.0,
    -359.0, 281.0, 85.0
};
 
// test driver
main(int , char **)
{
    // output precision
    cout.precision(6);
    cout.setf(ios::showpoint);

    // define matrix and initialize elements
    int nrows = 3;
    int ncols = 3;
    int idata = 0;
    int ir = 0;
    Matrix&lt;double&gt; m(nrows, ncols);
    for ( ; ir &lt; nrows; ir++)
    {
        for (int ic = 0; ic &lt; ncols; ic++)
        {
            m(ir, ic) = data[idata++];
        }
    }
    cout &lt;&lt; "TEST MATRIX IS ... " &lt;&lt; endl;
    cout &lt;&lt; m &lt;&lt; endl;
    Matrix&lt;double&gt; msave(m);

    // initialize inhomogeneous part.
    Vector&lt;double&gt; y(nrows);
    for (ir = 0; ir &lt; nrows; ir++)
    {
        y[ir] = data[idata++];
    }
    cout &lt;&lt; "TEST Y-VECTOR IS ... " &lt;&lt; endl;
    cout &lt;&lt; y &lt;&lt; endl &lt;&lt; endl;

    // get LUP decomposition
    Vector&lt;int&gt; pv(nrows);
    double determinant;
    MustBeTrue(
        GaussianLUP_Pivot(
            m, pv, 0.0, determinant) == OK);

    // get solution using LUP results
    Vector&lt;double&gt; x(nrows);
    MustBeTrue(
        SolveUsingGaussianLUP_Pivot(
            m, x, y, pv, 0.0) == OK);
    cout &lt;&lt; "SOLUTION X IS ... " &lt;&lt; x
         &lt;&lt; endl &lt;&lt; endl;

    // get inverse using LUP results
    Matrix&lt;double&gt; minv(nrows, ncols);
    MustBeTrue(
        GetInverseUsingGaussianLUP_Pivot(
            m, minv, pv, 0.0) == OK)
    cout &lt;&lt; "INVERSE OF M IS ... "
         &lt;&lt; endl &lt;&lt; endl;
    cout &lt;&lt; minv &lt;&lt; endl;
    cout &lt;&lt; "M*MINV IS ... " &lt;&lt; endl;
    cout &lt;&lt; msave*minv &lt;&lt; endl &lt;&lt; endl;

    return(0);
}


//End of File
</pre>
</BODY>
</HTML>

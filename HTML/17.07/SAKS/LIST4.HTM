<HTML><HEAD>
<TITLE>July 1999/C++ Theory and Practice/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4:	A class template for deeply-const pointers, with constructors, conversion operators, -&gt; operators, and a non-copy assignment operator</A></h4>
<pre>
// deep.h

#ifndef DEEP_H_INCLUDED
#define DEEP_H_INCLUDED

template &lt;typename T&gt;
class deep_pointer
    {
public:
    deep_pointer();
    deep_pointer(T *p);
    deep_pointer &amp;operator=(T *p);
    operator T *&amp;();
    operator T const *const &amp;() const;
    T *operator-&gt;();
    T const *operator-&gt;() const;
private:
    T *actual_pointer;
    };

template &lt;typename T&gt;
inline
deep_pointer&lt;T&gt; &amp;deep_pointer&lt;T&gt;::operator=(T *p)
    {
    actual_pointer = p;
    return *this;
    }

// and all other inline member functions as
// in Listing 1

#endif


</pre>
</BODY>
</HTML>

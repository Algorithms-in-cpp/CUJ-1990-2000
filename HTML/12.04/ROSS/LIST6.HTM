<HTML><HEAD>
<TITLE>April 1994/Record-Oriented Data Compression/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6 <I>A program to illustrate the use of the data decompression function.</A></I></h4>
<pre>#include &lt;stdio.h&gt;
#define MAIN
#include "hufftree.h"

#define MAXBUF 1024

/*
---------------------- unfiler - main -------------------------
*/

main(int argc, char *argv[])
{
  FILE *ftree, *indx, *in, *out;
  char bufin[MAXBUF];
  char bufout[MAXBUF];
  long ofst, nrecs, start, end;
  int i, len, outlen;
  
  if (argc != 3)
  { fprintf(stderr,"Usage: %s input \n", argv[0]);
    exit(0);
  }
  
  if ((in = fopen(argv[1], "rb")) == NULL)
  { fprintf(stderr,"Unable to open input file %s\n", argv[1]);
    exit(l);
  }
  
  if ((out = fopen(argv[2], "wb")) == NULL)
  { fprintf(stderr,"Unable to open output file %s\n", argv[2]);
    exit(l);
  }
  
  if ((ftree = fopen("htree.dat","rb")) == NULL)
  { fprintf(stderr,"Unable to open htree.dat\n");
    exit(1);
  }
  else
  { fread(&amp;root, sizeof(root), 1, ftree);
    fread(ht, sizeof(ht), 1, ftree);
    fclose(ftree);
  }
  
  if ((indx = fopen("index", "rb")) == NULL)
  { fprintf(stderr,"Unable to open index file\n");
    exit(1);
  }
  else
  { fread(&amp;nrecs, sizeof(nrecs), 1, indx);
  }
  
  for (i=0; i&lt;nrecs; i++)
  {
    ofst: sizeof(nrecs) + sizeof(start) * i;
    fseek(indx, ofst, SEEK_SET);
    fread(&amp;start, sizeof(start), 1, indx);
    fread(&amp;end, sizeof(end), 1, indx);
    fseek(in, sizeof(char) * (start), SEEK_SET)
    len = end - start;
    fread(bufin, sizeof(char), len, in);
    decode(bufin, &amp;outlen, bufout);
    bufout[outlen] = '\O';
    fprintf(out,"%s",bufout);
  }

}

/* End of File */</pre>

</BODY>
</HTML>

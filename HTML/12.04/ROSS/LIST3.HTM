<HTML><HEAD>
<TITLE>April 1994/Record-Oriented Data Compression/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <I>functions that compress a data record using Huffman encoding.</I></A></h4>
<pre>#include "hufftree.h"

/*
------------------------ compress ----------------------------
/*

void compress(int inlen, char *bufin, int *outlen, char
*bufout)
{
  int c, i;
  
  bufout[(*outlen)++] = inlen;
  for (i=0; i&lt;inlen; i++)
  { c = bufin[i];
    encode((c &amp; 255), 0, outlen, bufout);
  }
  emit(-1, outlen, bufout);

}


/*
------------------------- encode -----------------------------
*/

void encode(short h, short child, int *outlen, char *bufout)
{
  if (ht[h].parent != 0)
    encode(ht[h].parent, h, outlen, bufout);
  if (child)
  { if (child == ht[h].right)
      emit(0, outlen, bufout);
    else if (child == ht[h].left)
      emit(1, outlen, bufout);
  }
}


static char byt;
static int cnt;

/*
------------------------- emit -------------------------------
*/

void emit(int bit, int *outlen, char *bufout)
{
  if (bit == -1)
  { while (cnt != 8)
    { byt = byt &lt;&lt; 1;
      cnt++;
    }
    bufout[(*outlen)++] = byt;
    byt = 0;
    cnt = 0;
    return;
  }
  if (cnt == 8)
  { bufout[(*outlen)++] = byt;
    byt = 0;
    cnt = 0;
  }
  byt = (byt &lt;&lt; 1) | bit;
  cnt++;
}

/* End of File */
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>April 1994/Stepping Up To C++/Listing 10</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 10 The Cheshire Cat implementation for lns using single pointer</A></h4>
<pre>//
// lns2a.cpp - line number sequence implementation
//
#include &lt;stdio.h&gt;

#include "lns.h"

class lns::details
   {
public:
   details(unsigned n);
   ~details();
   void add(unsigned n);
   void print();
private:
   class node;
   node *first;
   };

class lns::details::node
   {
public:
   node(unsigned n);
   unsigned number;
   node *next;
   };

inline lns::details::node::node(unsigned n)
   : number(n), next(0)
   {
   }

inline lns::details::details(unsigned n)
   {
   first = new node(n);
   }

lns::details::~details()
   {
   node *p;
   while ((p = first) != 0)
      {
      first = first-&gt;next;
      delete p;
      }
   }

void lns::details::add(unsigned n)
   {
   node *p = first;
   while (p-&gt;next != 0 &amp;&amp; p-&gt;number != n)
      p = p-&gt;next;
   if (p-&gt;number != n)
      p = p-&gt;next = new node(n);
   }

void lns::details::print()
   {
   node *p;
   for (p = first; p != 0; p = p-&gt;next)
      printf("%4d ", p-&gt;number);
   }

lns::lns(unsigned n)
   {
   dp = new details(n);
   }

lns::~lns()
   {
   delete dp;
   }

void lns::add(unsigned n)
   {
   dp-&gt;add(n);
   }

void lns::print()
   {
   dp-&gt;print();
   }

// End of File
</pre>
</BODY>
</HTML>

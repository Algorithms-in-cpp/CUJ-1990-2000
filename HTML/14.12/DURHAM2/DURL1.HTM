



<HTML><HEAD>

<TITLE>December 1996/A Test Jig Tool for Pentium Optimization/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 1:	RunTest example</h4>

<pre>

//////////////////////////////////////////// 
void CT_MemCpyInt::RunTest()
{
 // Allocate the buffers
 m_MBC1.Allocate(&amp;m_pucC1, m_dwCount); 
 m_MBC2.Allocate(&amp;m_pucC2, m_dwCount); 
 m_MBP1.Allocate(&amp;m_pucP1, m_dwCount); 
 m_MBP2.Allocate(&amp;m_pucP2, m_dwCount); 
 m_MBM1.Allocate(&amp;m_pucM1, m_dwCount); 
 m_MBM2.Allocate(&amp;m_pucM2, m_dwCount);
     
 // Initialize the buffers
 ZeroAllBuffers();
 for(DWORD i=0; i &lt; m_dwCount;i++)
 {
  m_pucC1[i] = m_pucP1[i] = m_pucM1[i] = 255;
 }
     
 //-----------------------------------------
 // Run Tests
 CTestObject::RunTest();
     
 //-----------------------------------------
 // Verify Outputs
//m_tPent.diff =
//  CompareBuffers(m_pfC2, m_pfP2, m_dwCount);
 m_tMMX.diff =
   CompareBuffers(m_pucC2,m_pucM2,m_dwCount);
     
 //----------------------------------------- 
 // Output the results
 m_tC.dwFlags = RESULT_TIME;//Show C-code Time
 //m_tPent.dwFlags = RESULT_TIME|RESULT_DIFF;
 m_tMMX.dwFlags = RESULT_TIME | RESULT_DIFF;
 ShowResults("MemCpyInt()");
}
//End of File
</pre>
</body></html>

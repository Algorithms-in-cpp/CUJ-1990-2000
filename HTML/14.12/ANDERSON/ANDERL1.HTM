



<HTML><HEAD>

<TITLE>December 1996/Cross-Platform/Embedded Thread Design/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 1:	AThread.h &#151; Thread interface abstract base class</h4>

<pre>
#ifndef _ATHREAD_
#define _ATHREAD_

class AThread {
public:
   AThread  () { mState = RUN; }
   virtual ~AThread ()
      { if (mState != DEAD) Kill(TRUE); }

   bool IsRunning() { return (mState == RUN); }
   bool IsDead()    { return (mState == DEAD); }

   virtual void Kill(bool force) = 0;

   virtual void Run() { CheckStatus(); }

protected:
   enum ThreadState { RUN, TERMINATE, DEAD };

   virtual void CheckStatus() = 0;
   virtual void LockHandle() = 0;
   virtual void UnlockHandle() = 0;
   volatile ThreadState mState;
};

#endif
// End of File
</pre>
</body></html>

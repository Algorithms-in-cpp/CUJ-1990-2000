



<HTML><HEAD>

<TITLE>December 1996/Cross-Platform/Embedded Thread Design/Listing 5</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 5:	UNIXThread.cpp &#151; UNIX multithreading implementation</h4>

<pre>

#include "UNIXThread.h"

void AUNIXThread::EntryPoint(void* param) {
   AUNIXThread* ptr = (AUNIXThread*) param;
   ptr-&gt;Run();
   ptr-&gt;SetDeadState();
}

AUNIXThread::AUNIXThread() {
   pthread_mutex_init(&amp;mHandleLock,
                      pthread_mutexattr_default);
   pthread_create(&amp;mThread, pthread_attr_default,
                  EntryPoint, (void*)this);
   pthread_detach(mThread);
}

AUNIXThread::~AUNIXThread() {
   if (mState != DEAD) Kill(true);
   pthread_mutex_destroy(&amp;mHandleLock);
}

void AUNIXThread::Kill(bool force) {
   LockHandle();
   mState = TERMINATE;
   UnlockHandle();
}

void AUNIXThread::CheckStatus() {
   LockHandle();
   if (mState == TERMINATE) {
      mState = DEAD;
      UnlockHandle();
      pthread_exit((void*) 0);
   }
   UnlockHandle();
}
//End of File
</pre>
</body></html>

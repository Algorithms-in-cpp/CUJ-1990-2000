<HTML><HEAD>
<TITLE>May 1999/Standard C/C++/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2:	Testing FSS-UTF converter</A></h4>
<pre>
const char *fname = "myfile";

bool write_file(wchar_t code = 0)
    {locale loc = _ADDFAC(locale::classic(), new Mycodecvt);
    wofstream myostr;
    myostr.imbue(loc);
    myostr.open(fname, ios_base::binary);
    if (!myostr.is_open())
        {cerr &lt;&lt; "can't write to " &lt;&lt; fname &lt;&lt; endl;
        return (false); }
    if (code != 0 &amp;&amp; !myostr.write(&amp;code, 1))
        {cerr &lt;&lt; "failed for code = " &lt;&lt; (int)code &lt;&lt; endl;
        return (false); }
    for (wchar_t i = 0; i &lt; 0xfff; ++i)
        if (!myostr.write(&amp;i, 1))
            {cerr &lt;&lt; "write failed for i = " &lt;&lt; (int)i &lt;&lt; endl;
            return (false); }
    return (true); }

bool read_file()
    {locale loc = _ADDFAC(locale::classic(), new Mycodecvt);
    wifstream myistr;
    myistr.imbue(loc);
    myistr.open(fname, ios_base::binary);
    if (!myistr.is_open())
        {cerr &lt;&lt; "can't read from " &lt;&lt; fname &lt;&lt; endl;
        return (false); }
    for (wchar_t i = 0; i &lt; 0xfff; ++i)
        {wchar_t n = 0;
        if (!myistr.read(&amp;n, 1) || n != i)
            {cerr &lt;&lt; "read failed for i = " &lt;&lt; (int)i &lt;&lt; endl;
            cerr &lt;&lt; "got " &lt;&lt; (int)n &lt;&lt; endl;
            return (false); }}
    return (true); }

int main(int argc, char **argv)
    {wchar_t arg = argc &lt; 2 ? 0
        : *argv[1] == 'b' ? 0xfeff : 0xfffe;
    return (write_file(arg) &amp;&amp; read_file()); }


</pre>
</BODY>
</HTML>

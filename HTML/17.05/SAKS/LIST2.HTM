<HTML><HEAD>
<TITLE>May 1999/C++ Theory and Practice/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2:	A class template for deeply-const pointers, with operator() for explicit conversions to true pointer types</A></h4>
<pre>
// deep.h

#ifndef DEEP_H_INCLUDED
#define DEEP_H_INCLUDED

template &lt;typename T&gt;
class deep_pointer
    {
public:
    T *&amp;operator()();
    T const *const &amp;operator()() const;
private:
    T *actual_pointer;
    };

template &lt;typename T&gt;
inline
T *&amp;deep_pointer&lt;T&gt;::operator()()
    {
    return actual_pointer;
    }

template &lt;typename T&gt;
inline
T const *const &amp;
deep_pointer&lt;T&gt;::operator()() const
    {
    return actual_pointer;
    }

#endif

</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>November 1998/Standard C/C++/Figure 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 3:	Template class _Hmap_traits</A></h4>
<pre>
        // TEMPLATE CLASS _Hmap_traits
template&lt;class _K, class _Ty, class _Pr, class _Ax, bool _Mfl&gt;
    class _Hmap_traits {
public:
    typedef _K key_type;
    typedef pair&lt;const _K, _Ty&gt; value_type;
    typedef _Pr key_compare;
    typedef _Ax::template&lt;&gt; rebind&lt;value_type&gt;::other
        allocator_type;
    enum {_Multi = _Mfl};
    _Hmap_traits()
        : comp()
        {}
    _Hmap_traits(_Pr _Parg)
        : comp(_Parg)
        {}
    class value_compare
        : public binary_function&lt;value_type, value_type, bool&gt; {
        friend class _Hmap_traits&lt;_K, _Ty, _Pr, _Ax, _Mfl&gt;;
    public:
        bool operator()(const value_type&amp; _X,
            const value_type&amp; _Y) const
            {return (comp(_X.first, _Y.first)); }
        value_compare(key_compare _Pred)
            : comp(_Pred) {}
    protected:
        key_compare comp;
        };
    struct _Kfn {
        const _K&amp; operator()(const value_type&amp; _X) const
            {return (_X.first); }
        };
    _Pr comp;
    };
//End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>April 1995/Stepping Up To C++/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5<I> A rudimentary class for complex numbers using a mutable member to implement "lazy" evaluation and caching for polar form</A></I></h4>
<pre>// z3.cpp

#include &lt;iostream.h&gt;
#include &lt;iomanip.h&gt;
#include &lt;math.h&gt;

class complex
   {
public:
   complex(double r, double i);
   complex(const complex &amp;z);
   complex &amp;operator=(const complex &amp;z);
   ~complex();
   double real() const;
   double imag() const;
   double rho() const;
   double theta() const;
private:
   double re, im;
   struct polar;
   mutable polar *p;
   };

// ... same as Listing 4 ...

double complex::rho() const
   {
   if (p == 0)
      p = new polar(sqrt(re*re + im*im), atan2(im, re));
   return p-&gt;rho;
   }

double complex::theta() const
   {
   if (p == 0)
      p = new polar(sqrt(re*re + im*im), atan2(im, re));
   return p-&gt;theta;
   }

complex operator+(const complex &amp;z1, const complex &amp;z2)
   {
   return complex
      (z1.real() + z2.real(), z1.imag() + z2.imag());
   }

int main()
   {
   // same as Listing 3 and Listing 4
   }
// End of File</pre>

</BODY>
</HTML>

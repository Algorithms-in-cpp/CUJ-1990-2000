<HTML><HEAD>
<TITLE>April 1995/Stepping Up To C++/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <I>A rudimentary class for complex numbers which recomputes the polar form on demand</A></I></h4>
<pre>// z1.cpp

#include &lt;iostream.h&gt;
#include &lt;iomanip.h&gt;
#include &lt;math.h&gt;

class complex
   {
public:
   complex(double r, double i);
   double real() const;
   double imag() const;
   double rho() const;
   double theta() const;
private:
   double re, im;
   };

inline complex::complex(double r, double i)
   : re(r), im(i)
   {
   }

inline double complex::real() const
   {
   return re;
   }

inline double complex::imag() const
   {
   return im;
   }

inline double complex::rho() const
   {
   return sqrt(re * re + im * im);
   }

inline double complex::theta() const
   {
   return atan2(im, re);
   }

complex operator+(const complex &amp;z1, const complex &amp;z2)
   {
   return complex
      (z1.real() + z2.real(), z1.imag() + z2.imag());
   }

int main()
   {
   complex z1(3, 4);
   cout &lt;&lt; '(' &lt;&lt; z1.real() &lt;&lt; ',' &lt;&lt; z1.imag() &lt;&lt; ')'
      &lt;&lt; endl;
   cout &lt;&lt; '(' &lt;&lt; z1.rho() &lt;&lt; ',' &lt;&lt; z1.theta() &lt;&lt; ')'
      &lt;&lt; endl;
   complex z2(1, 1);
   cout &lt;&lt; '(' &lt;&lt; z2.real() &lt;&lt; ',' &lt;&lt; z2.imag() &lt;&lt; ')'
      &lt;&lt; endl;
   cout &lt;&lt; '(' &lt;&lt; z2.rho() &lt;&lt; ',' &lt;&lt; z2.theta() &lt;&lt; ')'
      &lt;&lt; endl;
   z1 = z1 + z2;
   cout &lt;&lt; '(' &lt;&lt; z1.real() &lt;&lt; ',' &lt;&lt; z1.imag() &lt;&lt; ')'
      &lt;&lt; endl;
   cout &lt;&lt; '(' &lt;&lt; z1.rho() &lt;&lt; ',' &lt;&lt; z1.theta() &lt;&lt; ')'
      &lt;&lt; endl;
   return 0;
   }
// End of File
</pre>
</BODY>
</HTML>

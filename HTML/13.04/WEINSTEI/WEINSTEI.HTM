

<HTML>
<HEAD>

<TITLE>April 1995/On the Networks</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocapr.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">On the Networks<A name="0090_0056"><A name="0090_0056"></font></h2><P>
<h3 align="center"><A name="0090_0000"><A name="0090_0000">Relate Your Way Through the Storm</h3><P>
<h3 align="center"><font color="#800000">Sydney S.Weinstein</font></h3><hr><blockquote><P>
<P><i><A name="0090_0000"><A name="0090_0000">Sydney S. Weinstein, CDP, CCP is a consultant, columnist, lecturer, author, professor, and President of Myxa Corporation, an Open Systems Technology company specializing in helping companies move to and work with Open Systems. He can be contacted care of Myxa Corporation, 3837 Byron Road, Huntingdon Valley, PA 19006-2320, or via electronic mail using the lnternet/USENET mailbox<I></I> syd@Myxa .com.<I></I> (<I></I>dsinc!syd<I></I> for those that cannot do Internet addressing).</i></P><P>
One of the highlights the past few months has been <I>typhoon</I> from Thomas B. Pedersen <I>&lt;zeppelin@login.dknet.dk&gt;</I>. It's a complete, freely available relational database management system for the UNIX and OS/2 environments. He contributed it for posting in <I>comp.sources.misc</I> as Volume 44, Issues 57-65. <I>typhoon</I> was originally inspired by Raima's db_VISTA (today Raima Data Manager) but is relational rather than network based. <I>typhoon</I> lacks some of db_VISTA's features, but also contains a number of nice features not found in db_VISTA.<P>
All relations are defined in a Data Definition Language (dd1) file. You define the database relations like you would write a C structure with <I>chars, ints,</I> strings, multi-dimensional arrays, nested union, and structures, etc. Then you define primary, alternate, and foreign keys for each relation. The Data Definition Language Processor (ddlp) compiles the database definition into a binary file which constitutes the database description. The database relations are accessed via C subroutines which manipulate individual records within a table. <I>typhoon</I> supports the following features:<P>
<UL><li>multiple open databases</li>
<li>multi-field keys</li>
<li>nested structures in records</li>
<li>controlled unions</li>
<li>referential integrity</li>
<li>variable-length fields</li>
<li>null keys (optional keys in db_VISTA, but easier to use than db_VISTA's)</li>
<li>dynamic opening and closing of database files</li></UL>
At present the database has no locking mechanism but it's in the works. Currently the author is working on extending the library to support locking, logging, transactions, and paging (to improve performance).<P>
The library comes with three additional utilities:<P>
<I>dbdview</I>     displays the database definitions<P>
<I>tyexport</I>     exports tables from a database<P>
<I>tyimport</I>     imports tables into a database<P>
Additional tools awaiting release, but being held up due to documentation issues, include online backup, restore, and a replication server.<P>
Continuing on with highlights from <I>comp.sources.misc</I>, I report that an extension to Perl 4 to allow access to Sybase databases was re-released at version 1.011 as <I>sybperl</I> in Volume 43, Issues 46-47 by Michael Peppler <I>&lt;mpeppler@itf.ch&gt;</I>. Features added since the last release (1.009) include <I>dbfreebuf, dbsetopt</I>, support to set the language and character set on the fly via <I>DBSETLCHARSET</I> and <I>DBSETLNATLANG</I>, access to non-ASCII text, extensions to <I>eg/dbschema.pl</I> to extract stored procedures and views as well as tables, casts of data types now performed with <I>DBlibrary</I> typedefs instead of C datatypes, and some bug fixes. Note: This package does not work with the new Perl 5 version, just with the older Perl 4 versions.<P>
Brad Eacker <I>&lt;beacker@sgi.com&gt;</I> contributed a set of tools and library routines to manipulate xbase files for Volume 43, Issues 48-49. <I>dbf</I> includes tools to list all the records in the file, extract a specific record, add or mark as deleted a specific record and to removed marked deleted records from the file. It also includes a utility to create the template file and a basic grammar recognizer for xbase .<I>prg</I> files.<P>
A C++ class library to perform generic processing of gray-scale images was contributed for Volume 43, Issues 51-55 by Kiselyov Oleg <I>&lt;oleg@ponder.csci.unt.edu&gt;. grayimage</I> works on both images or rectangular areas within images, and can perform addition, scalar product, and modification of pixel values, based on equalization, histogram and filtration/convolution. The library implements morphological filtration as well. The package can read/write XWD, Group G TIFF, and PGM file formats selecting the appropriate method automatically.<P>
The latest version of <I>zsh</I>, an extended UNIX shell based on the Bourne shell syntax, was released for Volume 43, Issues 89-107 by Bas de Bakker <I>&lt;zsh-list@sterling.com&gt;. zsh</I> adds lots of features to the standard Bourne shell syntax, including command-line editing, complete with programmable command and file completion; multi-line commands; variable editing; command buffer stack; printing text into the editing buffer; menu completion and inline expansion of variables; and history commands. <I>zsh</I> also adds an enhanced globbing package for wildcard expansion, including recursive globbing (like the UNIX <I>find</I> command) and file attribute qualifiers. It supports an enhanced redirection syntax including tee-like features, named directories, internal integer arithmetic commands, manipulation of array variables, and even spelling correction. <I>zsh</I> runs on almost any UNIX system.<P>
The latest version of Project Info-ZIP's <I>&lt;zip-bugs@wkuvx1.wku.edu&gt;</I> portable <I>UnZip</I> utility was released as Volume 44, Issues 66-85. Version 5.12, is the first post of the 55.1 version and includes a self extraction stub, a rewrite of unshrink to avoid copyfight problems, <I>-C</I> option for case-insensitive filename matching, an added <I>-L</I> option to auto-convert filename case from upper to lower, wildcard support in <I>UnZip</I> itself, extraction to a specified directory other than the current directory, and performance tuning and bug fixes. While compatible with PKUNZIP, <I>UnZip</I> supports UNIX (many flavors), VMS, OS/2, MSDOS (+ Windows), NT, TOPS-20 (partly), AmigaDOS, Atari TOS, Macintosh, and Human68k. <I>UnZip</I> features not found in PKUNZIP include source code; default extraction of directory trees (with a switch to defeat this, rather than the reverse); VMS, Macintosh, and OS/2 extended file attributes; and, of course, the ability to run under most of your favorite operating systems.<P>
The latest version of the JPEG image compression software was contributed by the Independent JPEG Group <I>&lt;jpeg-info@uunet.uu.net&gt;</I> for Volume 44 Issues 98-124. This package contains C software to implement JPEG image compression and decompression. JPEG is a standardized compression method for full-color and gray-scale images. JPEG is intended for real-world scenes; cartoons and other non-realistic images are not its strong suit. JPEG is lossy, so the output image is not identical to the input image. The user can trade off output image quality against compressed file size by adjusting a compression parameter.<P>
Version 5 of the <I>jpeg</I> system includes a reusable JPEG compression/decompression library, plus sample applications <I>cjpeg</I> and <I>djpeg</I>, which perform conversion between JPEG JFIF format and image files in PPM/PGM (PBMPLUS), GIF, BMP, Utah RLE, and Targa formats. Two small applications, <I>wrjpgcom</I> and <I>rdjpgcom</I>, insert and extract textual comments in JFIF files. The package is highly portable; it has been used successfully on many machines ranging from Apple IIs to Crays. Version 5 includes user-level improvements over version 4:<P>
<UL><li>Automatic configuration, which simplifies installation for most UNIX systems</li>
<li>A range of speed vs. image quality tradeoffs including image resizing during decompression (scaling down by a factor of 1/2, 1/4, or 1/8 is handled very efficiently)</li>
<li>New programs <I>rdjpgcom</I> and <I>wrjpgcom</I> that allow insertion and extraction of text comments in a JPEG file</li>
<li>BMP file format support within programs <I>cjpeg/djpeg</I></li></UL>
The application programmer's interface to the library has changed completely. Some of the most notable improvements for the programmer are as follows:<P>
<UL><li>The need for callback routines for handling the uncompressed image data has been eliminated. The application now sees the library as a set of routines that it calls to read or write image data on a scanline-by-scanline basis.</li>
<li>The application image data is represented in a conventional interleaved-pixel format, rather than as a separate array for each color channel. This form of representation can save a copying step in many programs.</li>
<li>The handling of compressed data has been cleaned up: the application can supply routines to source or sink the compressed data.</li>
<li>All static state data has been eliminated from the library, so that multiple instances of compression or decompression can be active concurrently.</li>
<li>JPEG-abbreviated datastream formats are supported.</li>
<li>The documentation of the library has improved.</li></UL>
Version 4.0 of <I>dmake</I> from Dennis Vadura <I>&lt;dvadura@plg.uwaterloo.ca&gt;</I> was released in Volume 45 Issues 1-27. <I>dmake</I> supports significant enhancements over other versions of Make, including:<P>
<UL><li>support for portable makefiles</li>
<li>ability to run on many platforms (DOS, UNIX, Apollo, OS/2, Atari, MAC, and many others)</li>
<li>significantly enhanced macro facilities</li>
<li>sophisticated inference algorithm supporting transitive closure on the inference graph</li>
<li>support for traversing the file system both during making of targets and during inference</li>
<li>%-meta rules for specifying rules to be used for inferring prerequisites</li>
<li>conditional macros</li>
<li>proper support for libraries</li>
<li>parallel making of targets on architectures that support it</li>
<li>attributed targets</li>
<li>text diversions</li>
<li>group recipes</li>
<li>swapping of itself to disk under MSDOS</li>
<li>support for the MKS extended argument passing convention</li>
<li>highly configurable features</li></UL>
I am always asked for easy-to-use editors for use by novices with Electronic Mail packages. One that appeared this time was <I>ee</I> (<I>EasyEdit</I>) from Hugh F. Mahon <I>&lt;hugh@nsmdserv.cnd.hp.com&gt;</I>. Posted in Volume 45, Issues 29-33, <I>EasyEdit</I> is intended to be a simple, easy-to-use terminal-based screen-oriented editor that requires no instruction to use. It supports menus and a help window, eight-bit characters and localization, and simple paragraph formatting capabilities.<P>
<I>yorick</I>, a very fast interpreted language designed for scientific computing and numerical analysis, was contributed by David H. Munro <I>&lt;munro@icf.llnl.gov&gt;</I> for Volume 46, Issues 71-138. Its syntax is similar to C, but without declarative statements. <I>yorick</I> provides a very rich selection of multi-dimensional array indexing operations. It also features a binary I/O package that automatically translates floating-point and integer representations on the machine where it is running to and from the format of any other machine. Thus, you can easily share binary files between, for example, Cray YMPs and DEC Alphas, or "teach" <I>yorick</I> to read existing binary databases. <I>yorick</I> also offers an interactive graphics package based on X-Window. X-Y plots, quadrilateral meshes, filled meshes, cell arrays, and contours are supported. Finally, you can embed compiled routines in custom versions of <I>yorick</I> to solve problems for which the interpreter is too slow.<P>
With the rash of WWW servers on the net, checking the pages for proper syntax before publishing them is difficult. Several HTML authoring systems have been released, and now Henry Churchyard <I>&lt;churchh@uts.cc.utexas.edu&gt;</I> has contributed <I>htmlcheck</I> for Volume 47, Issues 48-54. Version 4.0. The program checks for quite a number of possible defects in the HTML (Hyper-Text Mark-up Language) version 2.0 SGML files used on the World-Wide Web. <I>htmlcheck</I> is easy to use, and gives lots of information including advice about many stylistically bad practices. It can do local cross-reference checking and generate rudimentary reference-dependency maps. <I>htmlcheck</I> will run on any platform for which an awk or perl language interpreter is available.<P>
This release of <I>htmlchek</I> also includes a number of supplemental utilities, including <I>htmlsrpl.pl</I>, the HTML-aware search-and-replace program. This utility uses either literal strings or regular expressions; acts either only outside HTML/SGML tags, or only within tags; can he restricted to operate only within and/or only outside specified elements; and can also uppercase tag names. Other utilities are as follows:<P>
<pre><I>makemenu     </I>Makes simple menu for HTML files, based on each
             file's <I>&lt;TITLE&gt;</I>; this utility can also make a simple
             table of contents based on <I>&lt;H1&gt;-&lt;H6&gt;</I> headings
<I>xtraclnk.pl  </I>Extracts links/anchors from HTML files; isolates
             text contained in <I>&lt;A&gt;</I> and <I>&lt;TITLE&gt;</I> elements
<I>dehtml       </I>Removes all HTML markup, preliminary to spell
             check
<I>entify       </I>Replaces high Latin-1 alphabetic characters with
             ampersand entities for safe 7-bit transport
<I>metachar     </I>Protects HTML/SGML meta-characters <I>"&amp;&lt;&gt;"</I> in
             plain text that is to be included in an HTML file.</pre>
<I>htmlcheck </I>is a must for checking out your web pages before releasing them to the world.<P>
Another HTML tool posted recently was <I>m2h</I> from Lawrence A. Coon <I>&lt;lac@cs.rit.edu&gt;</I>. Contributed for Volume 47, Issues 3-7, it's a conversion tool for translating documents written using <I>troff/me</I> macros into HTML. All standard <I>me</I> macros and many <I>troff</I> requests are handled, including paragraphs, sections, displays, indexes, delayed text, footnotes, and font specifications. <I>m2h</I> also provides support for user and predefined strings, and equations and tables, but not for user-defined macros. A local extension to <I>me</I> (<I>.FI</I>) allows inclusion of <I>xfig</I> figures that <I>m2h</I> converts to inline GIFs. The special HTML characters <I>'&lt;','&gt;',</I> and <I>'&amp;'</I> are escaped and can be used in the <I>me</I> document without problems.<P>
If you want to be able to perform FIP transfers with a C program, then <I>libftp</I> from Oleg Orel <I>&lt;orel@oea.ihep.su&gt;</I> is what you need. Posted in Volume 47, Issues 29-36, <I>libftp</I> is a simple C interface to the FTP protocol. The library contains <I>FtpConnect(host), FtpLogin(user, passw, acct), FtpGet(File), FtpDir(filespec), FtpDebug(handler), FtpFullOpen(remote or local, read or write), FtpError(handler)</I> and many other functions. Also included is <I>uftp</I> (universal file transfer program), which is a user-interactive and non-interactive program to the ARPANET File Transfer Protocol (RFC959).The <I>uftp</I> client allows the user to transfer files, and groups of files in foreground and background modes.<P>
On the patch front, <I>dist-3.0</I>, the Perlbased configuration script generator and related toolset received several patches over the past few months. As usual these patches added modules to the configuration library, fixed some bugs, and extended the portability of other modules. It also added support for the use of Perl 5.0 to the <I>dist</I> toolset. The six patch sets covering patches #27-48 appeared in the following: Volume 43 Issues 9-11, 42-43, 46-49, Volume 45 Issues 41-48, 55 and Volume 47 Issues 20-23.<P>
<I>mailagent</I>, the Perl-based mail thrower, received several patches during this interval. Included are Patch 12-16: Volume 44, Issues 66-69, Patch 17-19: Volume 44 Issues 135-137, and Patch 19-22: Volume 45 Issues 49-53, Patch 23: Volume 45, Issue 56, Patch 24-26: Volume 47 Issues 9-11, Patch 27-29: Volume 47 Issues 55-57. The list of new features and bug fixes is too long to mention in the space I have available but the biggest are the switch to Dist 3.0 and Perl 5 support.<P>
<h4><FONT COLOR="#000080"><A name="0090_0057">Shell Menus Revisited<A name="0090_0057"></FONT></h4></P>
A commonly recurring theme in UNIX utilities is a menuing system to make tasks easier for users. Mike Howard <I>&lt;how%milhow1@uunet.uu.net&gt;</I> contributed <I>simple_menu-3.1</I> to <I>comp.sources.unix</I> for Volume 28, Issues 125-133 with patches in Issues 202-204. <I>simple_menu</I> makes it easier to create, maintain, modify, and extend menus of common operating system tasks for users. Typically users need to run fairly complex pipelines and/or shell scripts. Command-line execution is not a viable option, especially for clerical personnel and even more so for executive personnel. (This is especially true for infrequently executed tasks.)<P>
Writing menus in shell script is problematic for a variety of reasons. For example, writing the prompt-request-response-execute/error loop for the zillionth time is a drag. Modifying a shell script menu often breaks the code, and the shell menus become excessively large, so it's difficult to even read and understand the old code in order to make modifications.<P>
This program greatly alleviates such problems by introducing the following modifications/additions:<P>
<UL><li>It implements the prompt-request-response-execute loop in a relatively clean manner.</li>
<li>It embeds the shell script that does the work in a higher level language. This keeps the individual shell scripts small, isolates individual tasks from each other, makes them easier to find, and allows each shell script to execute in its own isolated environment, so that modifying one script does not break another.</li>
<li>Each settable shell variable has a user displayed prompt associated with it and may have a default value, so that <I>users</I> never have to deal with the shell or options in any cryptic way.</li>
<li>It supports sub-menus.</li>
<li>It supports a minimal set of menu cosmetics.</li></UL>
One new concept in computer communications is messenger-based systems. Messengers are protocol-unspecific instruction sequences that replace the protocol-specific messages on which ordinary computer communication protocols are based. Christian Tschudin <I>&lt;tschudin@cui.unige.ch&gt;</I> has contributed <I>m0</I> for Volume 28, Issues 51-62. <I>m0</I> (<I>M-Zero)</I> is a new high-level prograrmming language and execution environment designed for the messenger-based provision of computer communication services. As a language, it's very much analogous to PostScript. This experimental package contains a complete m0 interpreter and a 30-page report on <I>m0,</I> providing a brief introduction to the concept of messenger-based computer communications, and containing the <I>m0</I> language manual and format definition.<P>
If you need to perform syslog like functions, but you are not running TCP/IP, Arnold D. Robbins's <I>&lt;arnold@skeeve.atl.ga.us&gt; simple-syslog</I> is for you. It's a complete BSD-4.4 compatible <I>syslog</I>, but instead of using IP, it writes to <I>stderr.</I> This new update uses ANSI C and <I>stdarg.h</I>, and appears in Volume 28, Issue 63.<P>
The UNIX utility <I>from</I> is very limited. Johnson Michael Earls <I>&lt;darkfox@netcom.com&gt; </I>has contributed a new version of his <I>frowmho</I> utility for Volume 28, Issues 92-93. Instead of just listing who your mail is from, <I>fromwho</I> tells you the total number of messages received; how many are new; and for each person who sent you mail, how many messages they sent, how many of those are new, and the subjects of the messages. <I>fromwho</I> supports both <I>sendmail</I> and MMDF-style mailboxes.<P>
TCP/IP networks introduced a BOOTP server to allow diskless nodes to download their configuration and boot images. Over the years many extensions to the original BOOTP server have been written by various OS vendors. Gordon W. Ross <I>&lt;gwr@mc.com&gt;</I> has combined all of the extensions and bug fixes into a single server and contributed that server, <I>bootp-2.4.0</I> for Volume 28, Issues 115-118 with a patch in Issue 119. It combines BOOTP, a <I>bootp</I> gateway program, NetBSD, Columbia, Solaris, SVR4, and HP extensions along with full support for names as well as IP numbers.<P>
X has <I>xlock</I> to lock the screen from unauthorized use and to provide a screen saver. Now standard terminals can have <I>slock-1.1</I> from Wes Bachman <I>&lt;wbachman@chop.isca.uiowa.edu&gt;.</I> Contributed for Volume 28, Issue 154, <I>slock</I> locks a user's terminal on a UNIX system, using the curses capabilities as an interface. Unlike the standard <I>lock</I> command, this package includes a number of enhancements, including incorrect password entry logging and a screen saver to enhance security when the user is away from his/her computer.<P>
The output of <I>ls -lR</I> is not very useful when searching for files. It only provides the file name on the detail lines with directory lines preceding each new directory. This format is hard to use with grep. Dennis O'Neill <I>&lt;denio@scubed.scubed.com&gt;</I> solves this problem with <I>fullpath-1.1.0</I> in Volume 28, Issue 146. <I>full path-1.1.0</I> converts the standard <I>ls-lR</I> output format<P>
<pre>/home/denio/fullpath-1.1.0:
-rw-r--r-- 1 denio         5945 Jun 23 11:08 fullpath.c</pre>
to<P>
<pre>1992/06/23     5945  /home/denio/fullpath-1.1.0/fullpath.c</pre>
allowing grep once again to find the files. This is especially useful with the <I>ls -lR</I> files retrieved from ftp sites.<P>
<h4><FONT COLOR="#000080"><A name="0090_0058">Out of Space<A name="0090_0058"></FONT></h4></P>
I am out of space for this month, but I've caught up on a large part of the backlog. Next time I'll highlight what's new and catch up on the backlog in the X sources group.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

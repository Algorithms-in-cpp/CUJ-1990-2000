<HTML><HEAD>
<TITLE>April 1995/An Error Manager With Message Text Replacement/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2 <I>Definition of class</I> failure_handler</A></h4>
<pre>/* message handler: fail() is for fatal errors, */
/* error() is for serious errors, warn() is for */
/* warning messages to stderr, and post() is for */
/* ordinary messages to stdout. */

class failure_handler {
   public:
      failure_handler(void) {}
      virtual void fail(const char *fmt,va_list ap);
      virtual void error(const char *fmt,va_list ap);
      virtual void warn(const char *fmt,va_list ap);
      virtual void post(const char *fmt,va_list ap);
   private:
      /* unimplemented: */
      failure_handler(const failure_handler &amp;other);
      failure_handler
          &amp;operator =(const failure_handler &amp;other);
};
// End of File
</pre>
</BODY>
</HTML>








<HTML>
     
     <HEAD>


          
          <TITLE>October 1996/C++ Source to HTML Converter/Listing 2</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          
          <h4>Listing 2: Filter program converted to HTML</h4>
          

<PRE>
&lt;pre&gt;&lt;b&gt;
&lt;/b&gt;&lt;i&gt;/**** C/C++ to HTML Converter Filter ******/&lt;/i&gt;&lt;b&gt;

#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;

&lt;/b&gt;&lt;i&gt;/* Output chars and convert various
   HTML-specific characters */&lt;/i&gt;&lt;b&gt;
void outchar (char ch)
{ switch (ch) {
    case '&amp;lt;'  : printf (&amp;quot;&amp;amp;lt;&amp;quot;); break;
    case '&amp;gt;'  : printf (&amp;quot;&amp;amp;gt;&amp;quot;); break;
    case '&amp;amp;'  : printf (&amp;quot;&amp;amp;amp;&amp;quot;); break;
    case '\&amp;quot;' : printf (&amp;quot;&amp;amp;quot;&amp;quot;); break;
    default   : putchar (ch);
    }
} &lt;/b&gt;&lt;i&gt;/* outchar */&lt;/i&gt;&lt;b&gt;

void main (void)
{ char line[255+1];
  int i, &lt;/b&gt;&lt;i&gt;/* counter for each char in line */&lt;/i&gt;&lt;b&gt;
      inEOLcomment=0, &lt;/b&gt;&lt;i&gt;/* flag to indicate in C++
                         &amp;quot;to EOL&amp;quot; comment */&lt;/i&gt;&lt;b&gt;
      incomment=0, &lt;/b&gt;&lt;i&gt;/* flag to indicate if
                      currently in comment */&lt;/i&gt;&lt;b&gt;
      inquote=0; &lt;/b&gt;&lt;i&gt;/* flag to indicate if currently
                    in quoted text */&lt;/i&gt;&lt;b&gt;

  &lt;/b&gt;&lt;i&gt;/* start HTML output; indicate text is
     preformatted and will begin in bold */&lt;/i&gt;&lt;b&gt;
  printf (&amp;quot;&amp;lt;pre&amp;gt;&amp;lt;b&amp;gt;&amp;quot;);

  &lt;/b&gt;&lt;i&gt;/* process each line from stdin */&lt;/i&gt;&lt;b&gt;
  while (gets(line) != NULL) {

    i = inEOLcomment = 0;
    &lt;/b&gt;&lt;i&gt;/* look at each char on line */&lt;/i&gt;&lt;b&gt;
    while (line[i]) {
      if (!inEOLcomment) {
        if (!incomment &amp;amp;&amp;amp;
             (line[i] == '\'' || line[i] == '\&amp;quot;'))
          if (line[i-1] != '\\' ||
             (line[i-1] == '\\' &amp;amp;&amp;amp; line[i-2] == '\\'))
            inquote = !inquote; &lt;/b&gt;&lt;i&gt;/* toggle quote status */&lt;/i&gt;&lt;b&gt;
        if (!inquote)
      if (!incomment &amp;amp;&amp;amp; strncmp(line+i,&amp;quot;//&amp;quot;,2) == 0) {
            &lt;/b&gt;&lt;i&gt;/* beginning of C++ line comment */&lt;/i&gt;&lt;b&gt;
            inEOLcomment = 1;
            printf (&amp;quot;&amp;lt;/b&amp;gt;&amp;lt;i&amp;gt;//&amp;quot;);  i += 2;
            }
          else if (strncmp(line+i,&amp;quot;/*&amp;quot;,2) == 0) {
            &lt;/b&gt;&lt;i&gt;/* beginning of comment.. */&lt;/i&gt;&lt;b&gt;
            if (!incomment) printf (&amp;quot;&amp;lt;/b&amp;gt;&amp;lt;i&amp;gt;&amp;quot;);
            incomment++;
            }
          else if (incomment &amp;amp;&amp;amp; strncmp(line+i,&amp;quot;*/&amp;quot;,2) == 0) {
            &lt;/b&gt;&lt;i&gt;/* end of comment... */&lt;/i&gt;&lt;b&gt;
            printf (&amp;quot;*/&amp;quot;);
            incomment--;  i += 2;
            if (!incomment) printf (&amp;quot;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;&amp;quot;);
            continue;
            }
        }

      outchar (line[i++]);

      } &lt;/b&gt;&lt;i&gt;/* end of line */&lt;/i&gt;&lt;b&gt;
    if (inEOLcomment) printf (&amp;quot;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;&amp;quot;);
    putchar ('\n');
    } &lt;/b&gt;&lt;i&gt;/* end of input */&lt;/i&gt;&lt;b&gt;

  &lt;/b&gt;&lt;i&gt;/* finish up HTML output */&lt;/i&gt;&lt;b&gt;
  printf (&amp;quot;&amp;lt;/b&amp;gt;&amp;lt;/pre&amp;gt;\n&amp;quot;);
}

&lt;/b&gt;&lt;/pre&gt;
</PRE>
     </BODY>
</HTML>

<HTML><HEAD>
<TITLE>October 2000/An Improved Variant Type Based on Member Templates/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: Definition of class variant1_t</A></h4>
<pre>
// This variant copies the original
// value into its own data to
// preserve the value when the
// original variable goes out of scope.
struct variant1_t
{
   variant1_t():data(NULL){}
  ~variant1_t(){ free(data); }

  template&lt;typename T&gt; variant1_t ( T v )
    :data(malloc(sizeof(T)))
    { memcpy ( data , &amp;v , sizeof(T)); }

  template&lt;typename T&gt; operator T () const
    { return * reinterpret_cast&lt;T*&gt;(data); }

  void* data ;
} ;

// usage:
variant1_t _int ( 2 ) ;
variant1_t _dbl ( 3.14 ) ;
cout &lt;&lt; (int)   _int &lt;&lt; endl ;
cout &lt;&lt; (double)_dbl &lt;&lt; endl ;

</pre></pre></body></html>

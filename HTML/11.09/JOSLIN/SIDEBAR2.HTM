<HTML><HEAD><TITLE>September 1993/Using the Windows DIB Color Table/Sidebar</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h3 align="center"><FONT FACE="Garamond" COLOR="#000080">Simple Image Processing</FONT></h3><hr>
<BLOCKQUOTE>
A typical gray-scale image consists of 8-bits-per-pixel data (one byte for each pixel) with values which range over the entire eight bit range (0x00 through 0xFF). These values, as shown in <A href="fig2.htm">Figure 2</a>,
 are used as indices into the color table of the DIB and provide a smooth range of 256 shades of gray. <A href="fig3.htm">Figure 3</a>
shows a typical gray-scale image.<P>
<h4>Contrast Enhancement</FONT></h4></P>
<A href="fig4.htm">Figure 4</a>
is a gray-scale histogram of the image. As the sample histogram shows, this particular image follows a bell-shaped curve in most of its data distribution. To enhance the contrast of this image, the data peak must be spread across a greater number of actual displayed gray-scale values. You can spread the peak by compressing the palette index mapping. <A href="fig9.htm">Figure 9</a>
shows the mapping done by the <I>BuildMapping</I> function of <A href="list5.htm">Listing 5</a>.
 In the resulting higher contrast image, the pixel values in the range of 96 through 160 are spread out across the palette indices of 32 through 224, increasing the shading differences between image pixels. (<A href="fig5.htm">Figure 5</a>
is the high contrast version of the gray-scale image.) To lower the contrast of the sample image, the program maps the pixel values of most of the image to a narrower range of palette indices representing the data peak. This mapping produces the opposite contrast effect by decreasing the shading differences between image pixels (see <A href="fig6.htm">Figure 6</a>)
.<P>
Obviously, not all image data peaks follow a bell curve. However, as a default or starting point, using the mappings described will allow some minimal image enhancements to be performed from image to image.<P>
The main advantage of these techniques is that the processing is done on the color table of the DIB (which contains only 256 integer entries) not the bitmap (which may well contain megabytes of data).<P>
<h4>Making an Image<B></B> <B></B>Darker or Lighter</FONT></h4></P>
<A href="fig7.htm">Figure 7</a>
and <A href="fig8.htm">Figure 8</a>
show the effects of shifting the palette indices to opposite ends of the gray scale. To lighten an image, the pixel values are mapped to the upper half of the palette indices, and to darken the image, the pixel values are mapped to the lower half of the palette indices (see <A href="list5.htm">Listing 5</a>
and <A href="fig9.htm">Figure 9</a>)
. As in the process of contrast manipulations, some palette indices are unused, resulting in the loss of some image resolution.<P>
You can also perform other operations on the bitmap color table. For example, you can invert the image shading by reversing the order of the palette indices in the color table (see <A href="fig12.htm">Figure 12</a>)
. You could look for specific data peak groups in the histogram, or selectively leave certain pixel values out, setting them to all white or black (see <A href="fig10.htm">Figure 10</a>
and <A href="fig11.htm">Figure 11</a>)
. Finally, though I have dealt solely with gray scale, you could use a color palette and highlight pixel value differences using color gradations. What can be done on the DIB color table is up to the needs and imagination of the programmer.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

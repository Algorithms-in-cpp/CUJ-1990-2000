<HTML><HEAD>
<TITLE>August 1994/Standard C/C++/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7 <I>member function</I> _Getifld(char *)</A></h4>
<pre>// isgetifl -- istream::_Getifld(char *)
#include &lt;string.h&gt;
#include &lt;istream&gt;

int istream::_Getifld(char ac[_MAX_INT_DIG])
   {    // extract an integer field
   char *p, seen;
   int base, ch, dlen;
   char *const pe = &amp;ac[_MAX_INT_DIG<I>-</I>1];
   const ios::fmtflags bfl = flags() &amp; basefield;
   static const char digits[] = "0123456789abcdefABCDEF";
   p = ac, ch = rdbuf()<I>-</I>&gt;sbumpc();
   if (ch == '+' || ch == '<I>-</I>')
      *p++ = ch, ch = rdbuf()<I>-</I>&gt;sbumpc();
   seen = 0;
   base = bfl == oct ? 8: bfl == hex ? 16
      : bfl == _Fmtzero ? 0 : 10;
   if (ch == '0')
      {    // match possible prefix and strip it
      seen = 1;
      ch = rdbuf()<I>-</I>&gt;sbumpc();
      if ((ch == 'x' || ch == 'X')
         &amp;&amp; (base == 0 || base == 16))
         base = 16, ch = rdbuf()<I>-</I>&gt;sbumpc(), seen = 0;
      else if (base == 0)
         base = 8;
      }
   dlen = base == 0 || base == 10 ? 10 : base == 8 ? 8: 16+6;
   for (; ch == '0'; seen = 1)
      ch = rdbuf()<I>-</I>&gt;sbumpc();
   if (seen)
      *p++ = '0';
   for (; ch != EOF &amp;&amp; memchr(digits, ch, dlen);
      ch = rdbuf()<I>-</I>&gt;sbumpc(), seen = 1)
      if (p &lt; pe)
         *p++ = ch;
   if (ch != EOF)
      rdbuf()<I>-</I>&gt;sputbackc(ch);
   if (!seen)
      p = ac;
   *p = '\0';
   return (base);
   }
// End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>February 1995/Simulating C++ Templates in C and C++/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <I>Using a class template to parameterize the </I>stack<I> class</A></I></h4>
<pre>template &lt;class TYPE&gt;
inline TYPE max(TYPE x, TYPE y)
{ return (x &gt; y) ? x : y; }

template &lt;class ITEM, unsigned MAX_ITEMS = 5&gt;
class stack {
   ITEM * itemPtrs[MAX_ITEMS];
   unsigned items;
  public:
   stack()  ( items = 0U; }
   int full() { return !(MAX_ITEMS - items); }
   unsigned depth() { return items; }
   int push(ITEM * itemPtr);
   ITEM * top()
      { return (items? itemPtrs[items-1] : 0); }
   ITEM * pop()
      { return (items? itemPtrs[--items] : 0); }
};

template &lt;class ITEM, unsigned MAX_ITEMS&gt;
int stack&lt;ITEM,MAX_ITEMS&gt;::push(ITEM * itemPtr)
{
   if (!full() &amp;&amp; itemPtr) {
      itemPtrs[items++] = itemPtr;
      return 1;
   }
   return 0;
}

#include &lt;iostream.h&gt;
#include &lt;iomanip.h&gt;

main()
{
   stack&lt;char&gt; ToDo;

   ToDo.push("wash car");
   ToDo.push("cut grass");
   ToDo.push("buy groceries");
   ToDo.push("cash paycheck");
   while (ToDo.top())
      cout &lt;&lt; ToDo.pop() &lt;&lt; endl;

   stack&lt;int,10U&gt; CountDown;

   for (int i = 1; CountDown.push(new int(i)); i++);
   while (CountDown.top())  {
      cout &lt;&lt; *CountDown.top() &lt;&lt; " ";
      delete CountDown.pop();
   }
   cout &lt;&lt; "Blast Off!" &lt;&lt; endl;
   return 0;
}
/* End of File */
</pre>
</BODY>
</HTML>

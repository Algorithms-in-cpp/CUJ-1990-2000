<HTML><HEAD>
<TITLE>February 1995/Questions and Answers/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2<I> using</I> qsort <I>in C++ made possible via</I> static<I> member function</A></I></h4>
<pre>#include &lt;stdlib.h&gt;
#include &lt;iostream.h&gt;

class A
   {
private:
   struct DataType
     {
      double x,y;
      static int compare_function(const void * a,
                             const void * b)
          {
           const DataType *first = (DataType*) a;
           const DataType *second: (DataType*) b;
           if (first-&gt;x &gt; second-&gt;x)
             return 1;
           else if (first-&gt;x &lt; second-&gt;x)
             return -1;
           else

             return 0;
           }
   } * data;
   int size;
public:
   A(int n, double * x, double * y);
  ~A();
  void sort();
  void list();
  };

A::A(int n, double * x, double * y)
    {
    size: n;
    data = new DataType[size];
    for (int i = 0; i &lt; size; i++)
      {
       data[i].x = x[i];
       data[i].y = y[i];
     }
    };
    

A::~A()
   {
   delete [] data;
   }

void A::sort()
   {
   qsort (data, size, sizeof(DataType),
         DataType::compare_function);
   }

void A::list()
   {
   for (int i = 0; i &lt; size; i++)
     {
      cout &lt;&lt; data[i].x &lt;&lt; " " &lt;&lt; data[i].y &lt;&lt; endl;
     }
   }

main()
  {
  double xarray[5] = {4.0, 2.0, 3.0, 5.0, 1.0};
  double yarray[5] = {0.1, 0.2, 0.3, 0.4, 0.5}:
  A AInst (3, xarray, yarray);
  cout &lt;&lt; "Original list" &lt;&lt; endl;
  AInst.list();
  AInst.sort();
  cout &lt;&lt; endl &lt;&lt; "Sorted list" &lt;&lt; endl;
  AInst.list();
  return 0;
  }
/* End of File */</pre>

</BODY>
</HTML>

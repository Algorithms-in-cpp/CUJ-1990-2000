<HTML><HEAD>
<TITLE>May 1995/Code Capsules/Listing 20</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 20 <I>The implementation for <a href="list19.htm">Listing 19</a>, which is missing an assignment operator and copy constructor</A></I></h4>
<pre>// person2.cpp
#include &lt;iostream.h&gt;
#include &lt;string.h&gt;
#include &lt;new.h&gt;
#include "person2.h"

static char * clone(const char *s)
{
   // return a copy of a string on the heap
   char * p = new char[strlen(s) + 1];
   return strcpy(p,s);
}

Person::Person() : birth(Date(0,0,0))
{
   last = clone("");
   first = clone("");
   ssn = clone("");
}

Person::Person(const char * l, const char * f,
             const Date&amp; b, const char * s)
  : birth(b)
{
   last = clone(l);
   first = clone(f);
   ssn =  clone(s);
}

Person::~Person()
{
   delete [] last;
   delete [] first;
   delete [] ssn;
}

ostream&amp; operator&lt;&lt;(ostream&amp; os, const Person&amp; p)

{
   os &lt;&lt; '{'
      &lt;&lt; p.last &lt;&lt; ','
      &lt;&lt; p.first &lt;&lt; ','
      &lt;&lt; '[' &lt;&lt; p.birth &lt;&lt; ']' &lt;&lt; ','
      &lt;&lt; p.ssn
      &lt;&lt; '}';
   return os;
}

bool Person::operator==(const Person &amp; p) const
{
   return strcmp(last,p.last) == 0 &amp;&amp;
         strcmp(first,p.first) == 0 &amp;&amp;
         birth == p.birth &amp;&amp;
         strcmp(ssn,p.ssn) == 0;
}

// End of File
</pre>
</BODY>
</HTML>

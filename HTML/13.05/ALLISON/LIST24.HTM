<HTML><HEAD>
<TITLE>May 1995/Code Capsules/Listing 24</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 24 SetOfInt <I>implementation</A></I></h4>
<pre>// set.cpp
#include &lt;iostream.h&gt;
#include &lt;algo.h&gt;
#include "set.h"

SetOfInt::SetOfInt()
{
   nelems = 0;
}

bool SetOfInt::contains(int x) const
{
   const int *begin = elems;
   const int *end = elems + nelems;
   return find(begin,end,x) != end;
}

void SetOfInt::insert(int x)
{
   if (nelems &lt; LIMIT &amp;&amp; !contains(x))
      elems[nelems++] = x;
}

void SetOfInt::remove(int x)
{
   const int *begin = elems;
   const int *end = begin + nelems;
   const int *p T = find(begin,end,x);

   if (p != end)
   {
      // Shuffle elements up to cover x
      for (int *q = (int *)p; q &lt; end-1;
          ++q)
         *q = *(q+1);
      --nelems;
   }
}

void SetOfInt::print(ostream &amp; os) const
{
   os &lt;&lt; '{';
   for (int i = 0; i &lt; nelems; ++i)
   {
      if (i &gt; 0)
         os &lt;&lt; ' ,';
      os &lt;&lt; elems[i];
   }
   os &lt;&lt; '}';
}

// End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>May 1995/Dynamic Client/Server-Based Image Processing/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6<I> X-Window Dump (XWD) image format loader</A></I></h4>
<pre>/*
 * Listing 6 - xwd.c (loader)
 */

#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
#include &lt;X11/XWDFile.h&gt;
#include "ips_image.h"

void            read_ximage();

int
main(argc, argv)
int argc;
char **argv;
{
       ips_header header;
       ips_image image;
       
       if (argc &lt; 3) {
              printf("Usage: %s infile outfile\n", argv[0]);
              exit(1);
       }
       
       read_ximage(&amp;header, &amp;image, argv[1]);
       
       img_to_ips(&amp;header, &amp;image, argv[2]);
       
       exit(0);
}


void
read_ximage(header, image, filename)
ips_header      *header;
ips_image       *image;
char            *filename;
{
       int            i, pad, rightpad;
       char           buf[1024];
       FILE           *fp;
       unsigned char  *p;
       XWDColor       xcmap[256];
       XWDFileHeader  xheader;
       
       if((fp = fopen(filename, "r")) == NULL) {
              perror("read_ximage");
              exit(1);
       }
       
       fread(&amp;xheader, 1, sizeof(XWDFileHeader), fp);
       fread(buf, 1, (xheader.header_size - sizeof(XWDFileHeader)), fp);
       fread(xcmap, 1, sizeof(XWDColor) * xheader.ncolors, fp);
       
       p = image-&gt;data = (unsigned char *)
                     malloc(xheader.pixmap_width * header.pixmap_height);
       
       rightpad = xheader.bytes_per_line - xheader.pixmap_width;
       
       for (i=0; i&lt;xheader.pixmap_height; i++) {
              fread((p + (i * xheader.pixmap_width)), 1,
                     xheader.pixmap_width, fp);
              
              for (pad=0; pad &lt; rightpad; pad++)
                     fgetc(fp);
       }
       
       header-&gt;bpp            = 8;
       header-&gt;cmap_count     = xheader.ncolors;
       header-&gt;width          = xheader.pixmap_width;
       header-&gt;height         = xheader.pixmap_height;
       
       for(i=0; i &lt; header-&gt;cmap_count; i++) {
              image-&gt;cmap[i].pixel = i;
              image-&gt;cmap[i].red       = xcmap[i].red &gt;&gt; 8;
              image-&gt;cmap[i].green = xcmap[i].green &gt;&gt; 8;
              image-&gt;cmap[i].blue      = xcmap[i].blue &gt;&gt; 8;
       }
       
       fclose(fp);
}
/* End of File */
</pre>
</BODY>
</HTML>

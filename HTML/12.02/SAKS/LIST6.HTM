<HTML><HEAD>
<TITLE>February 1994/Stepping Up To C++/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6 <I>A test program for the hierarchy in <a href="list5.htm">Listing 5</a>.</I></A></h4>
<pre>int main()
   {
   C c;
   D d;
   
   B *pb = &amp;c;            // ok, &amp;c is a C * which is a B*
   pb-&gt;f(1);              // calls C::f(int)
   pb-&gt;f(2L);             // calls B::f(long)
   pb-&gt;f("hello");        // calls B::f(char *)
   
   d.f(1);                // calls D::f(long)
                      // C::f(int) is hidden
                      // but 1 promotes to long
   d.C::f(1);             // calls C::f(int)
   d.B::f(1);             // calls B::f(int)
   d.f(1L);               // calls D::f(long)
   d.C::f(1L);            // calls C::f(int)
                      // B::f(long) is hidden
                      // but 1L converts to int
   d.B::f(1L);            // calls B::f(long)
   
   C *pc = &amp;d;            // ok, &amp;d is a D * which is a C*
   pc-&gt;f(1);              // calls C::f(int)
   pc-&gt;f(1L)              // calls C::f(int)
                      // B::f(long)is hidden
                      // but 1L converts to int
   pc-&gt;B::f(1L);          // calls B::f(long)
   pc-&gt;f("hello");        // error! f(char *) is hidden
   pc-&gt;B::f("hello");     // calls B::f(char *)
   
   B &amp;rb = *pc;           // ok, *pc is a C which is a B
   rb.f(1);               // calls C::f(int)
   rb.f(2L);              // calls D::f(long)
   rb.B::f(2L);           // calls B::f(long)
   rb.f("hello");         // calls B::f(char *)
   
   return 0;
   }

// End of File</pre>

</BODY>
</HTML>

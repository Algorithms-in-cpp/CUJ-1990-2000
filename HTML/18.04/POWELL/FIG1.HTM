<HTML><HEAD>
<TITLE>April 2000/Views, A New Form of Container Adaptors/Figure 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 1: The transform_view template</A></h4>
<pre>
// transform_view
// This code has been simplified here for the sake 
// of illustration. For the real code, see:
// http://www.zib.de/weiser/vtl, or
// http://www.cuj.com

template &lt;class Container, class Operation&gt;
class transform_view {
   Container *pCont;
   Operation  op;

public:
   transform_view(Container &amp;c, Operation o) 
      : pCont(&amp;c), op(0) {}
   
  typedef typename
     transform_iterator&lt;Conatiner::iterator, Operation&gt; iterator;
   
  iterator begin() {
     return iterator(pCont-&gt;begin(), op); }
  iterator end() {
     return iterator(pCont-&gt;end(), op); }
  
   // ... More member functions and operators
};

template&lt;class Container_Iterator, class Operation&gt;
class transform_iterator {
   Containter_Iterator iter;
   Operation           op;
public:
   transform_iterator(Conatiner_Iterator &amp;i, Operation o)
      : iter(i), op(o) {}
    
  typedef typename
     Operation::result_type result_type;
    
  result_type operator*() {
     return op(*iter); }
    
  // ... More member functions and operators
};
</pre></body></html>





<HTML><HEAD>

<TITLE>May 1996/Standard C/C++/Listing 4</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 4: &lt;iterator&gt;, part 8</A></h4>


<pre>

        // TEMPLATE CLASS istream_iterator
template&lt;class T, class Dist = ptrdiff_t&gt;
    class istream_iterator : public input_iterator&lt;T, Dist&gt; {
public:
    istream_iterator()
        : Istr(0) {}
    istream_iterator(istream&amp; is)
        : Istr(&amp;is) {_Getval(); }
    const T&amp; operator*() const
        {return (Val); }
    const T *operator-&gt;() const
        {return (&amp;**this); }
    istream_iterator&lt;T, Dist&gt;&amp; operator++()
        {_Getval();
        return (*this); }
    istream_iterator&lt;T, Dist&gt; operator++(int)
        {istream_iterator&lt;T, Dist&gt; tmp = *this;
        _Getval();
        return (tmp); }
    bool Equal(const istream_iterator&lt;T, Dist&gt;&amp; x) const
        {return (Istr == x.Istr); }
protected:
    void _Getval()
        {if (Istr != 0 &amp;&amp; !(*Istr &gt;&gt; Val))
            Istr = 0; }
    istream *Istr;
    T Val;
    };

         // istream_iterator OPERATORS
template&lt;class T, class Dist&gt; inline
    bool operator==(const istream_iterator&lt;T, Dist&gt;&amp; x,
        const istream_iterator&lt;T, Dist&gt;&amp; y)
    {return (x.Equal(y)); }

        // TEMPLATE CLASS ostream_iterator
template&lt;class T&gt;
    class ostream_iterator : public output_iterator {
public:
    ostream_iterator(ostream&amp; os, const char *Dist = 0)
        : Ostr(&amp;os), Delim(Dist) {}
    ostream_iterator&lt;T&gt;&amp; operator=(const T&amp; x)
        {*Ostr &lt;&lt; x;
        if (Delim != 0)
            *Ostr &lt;&lt; Delim;
        return (*this); }
    ostream_iterator&lt;T&gt;&amp; operator*()
        {return (*this); }
    ostream_iterator&lt;T&gt;&amp; operator++()
        {return (*this); }
    ostream_iterator&lt;T&gt; operator++(int)
        {return (*this); }
protected:
    const char *Delim;
    ostream *Ostr;
    };
/* End of File */
</pre>
</body></html>

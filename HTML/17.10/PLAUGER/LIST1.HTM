<HTML><HEAD>
<TITLE>October 1999/Standard C/C++/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: Template function sort</A></h4>
<pre>
        // COMMON SORT PARAMETERS
const int _CHUNK_SIZE = 7;
const int _SORT_MAX = 32;

        // TEMPLATE FUNCTION sort
template&lt;class _RI&gt; inline
    void sort(_RI _F, _RI _L)
    {_Sort(_F, _L, _L - _F); }

template&lt;class _RI, class _Pd&gt; inline
    void _Sort(_RI _F, _RI _L, _Pd _Ideal)
    {_Pd _N;

    for (; 0 &lt; _Ideal &amp;&amp; _SORT_MAX &lt; (_N = _L - _F); )
        {pair&lt;_RI, _RI&gt; _M = _Unguarded_partition(_F, _L);
        _Ideal /= 2, _Ideal += _Ideal / 2;
        if (_M.first - _F &lt; _L - _M.second)
            _Sort(_F, _M.first, _Ideal), _F = _M.second;
        else
            _Sort(_M.second, _L, _Ideal), _L = _M.first; }

    if (_SORT_MAX &lt;= _N)
        {make_heap(_F, _L);
        sort_heap(_F, _L); }
    else if (1 &lt; _N)
        _Insertion_sort(_F, _L); }

template&lt;class _RI&gt; inline
    pair&lt;_RI, _RI&gt; _Unguarded_partition(_RI _F, _RI _L)
    {_RI _M = _F + (_L - _F) / 2;
    if (*_M &lt; *_F)
        iter_swap(_F, _M);
    if (*(_L - 1) &lt; *_M)
        iter_swap(_M, _L - 1);
    if (*_M &lt; *_F)
        iter_swap(_F, _M);

    for (; ; ++_F)
        {_RI _F0 = _F;
        for (; _F &lt; _L &amp;&amp; !(*_M &lt; *_F); ++_F)
            ;
        for (; _F0 &lt; _L &amp;&amp; !(*--_L &lt; *_M); )
            ;
        if (_L &lt;= _F)
            return (pair&lt;_RI, _RI&gt;(_L + 1, _F));

        iter_swap(_F, _L);
        if (_M == _F)
            _M = _L;
        else if (_M == _L)
            _M = _F; }}

template&lt;class _BI&gt; inline
    void _Insertion_sort(_BI _F, _BI _L)
    {if (_F != _L)
        for (_BI _M = _F; ++_M != _L; )
            if (*_M &lt; *_F)
                {_BI _Mp1 = _M;
                rotate(_F, _M, ++_Mp1); }
            else
                {_BI _X = _M;
                for (_BI _X0 = _X; *_M &lt; *--_X0; _X = _X0)
                    ;
                if (_X != _M)
                    {_BI _Mp1 = _M;
                    rotate(_X, _M, ++_Mp1); }}}


</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>October 1999/An Interactive Drawing Surface Component for C++ Builder/Figure 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 5: Part of drawing memory header file</A></h4>
<pre>
//-------------------------------------------
// DrawList.h - sicherer@sichemsoft.nl
// Complete commented code available on line
//-------------------------------------------
// ... #includes and typedefs omitted
//-------------------------------------------
class TDrawItem : public TObject
{
public:
   static TDrawItem *Load(ifstream &amp;ifp);
   virtual void Save(ofstream &amp;ofp) = 0;
   virtual void Draw(TDrawBox *drawBox) = 0;
// ... other functions

protected:
   TDrawItem(double x1, double y1,
             double x2, double y2,
             TColor lineColor,
             TColor fillColor);
   TDrawItem(ifstream &amp;ifp);
   void 
   Save(ofstream &amp;ofp, TDrawItemType type);
// ... other functions

   double X1, Y1, X2, Y2;
   TColor LineColor, FillColor;
};
//-------------------------------------------
class TLineItem : public TDrawItem
{
public:
   TLineItem(double x1, double y1,
      double x2, double y2, TColor lineColor);
   TLineItem(ifstream &amp;ifp);
   virtual void Save(ofstream &amp;ofp);
   virtual void Draw(TDrawBox *drawBox);

private:
   double LX1, LY1, LX2, LY2;
};
//-------------------------------------------
// other shape classes omitted
//-------------------------------------------
class TDrawList
{
public:
   TDrawList();
   ~TDrawList();
   bool Load(const AnsiString &amp;filename);
   void Save(const AnsiString &amp;filename);
   void Draw(TDrawBox *drawBox);
// ... other functions omitted

private:
   typedef list&lt;TDrawItem *&gt; TInternalDrawList;
   TInternalDrawList List;
   TInternalDrawList::iterator Current;
};


</pre>
</BODY>
</HTML>

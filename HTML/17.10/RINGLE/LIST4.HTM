<HTML><HEAD>
<TITLE>October 1999/Singleton Creation the Thread-safe Way/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4:	The critical section class </A></h4>
<pre>
// sync.h
class Critical_Section
{
public:
   Critical_Section() { InitializeCriticalSection(&amp;mutex); }
   ~Critical_Section() { DeleteCriticalSection(&amp;mutex); }

   void acquire() { EnterCriticalSection(&amp;mutex); }
   void release() { LeaveCriticalSection(&amp;mutex); }

private:
   CRITICAL_SECTION mutex;
};

template&lt;class Key&gt; class Lock_Guard
{
public:
   Lock_Guard(Key&amp; a_key) : _key(a_key) { lock(); }
   ~Lock_Guard() { unlock(); }

   void lock() { _key.acquire(); }
   void unlock() { _key.release(); }

private:
   Key&amp; _key;
};


</pre>
</BODY>
</HTML>

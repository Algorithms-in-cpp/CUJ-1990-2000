<HTML><HEAD>
<TITLE>October 1999/Singleton Creation the Thread-safe Way/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6:	The final solution &#151; a singleton that uses the Double-Checked Locking Pattern</A></h4>
<pre>
// solution.h
#include "sync.h"

class Singleton
{
public:
   static Singleton&amp; instance();
   void show_state();

protected:
   Singleton();

private:
   static Singleton* _instance;
   static Critical_Section _key;
   int state;
};

Singleton* Singleton::_instance = NULL;
Critical_Section Singleton::_key;

Singleton&amp; Singleton::instance()
{
   if(!_instance) // Lock-hint check (Race condition here)
   {
      Lock_Guard&lt;Critical_Section&gt; gate(_key);

      if(!_instance) // Double-check (Race condition resolved)
         _instance = new Singleton;
   }

   return *_instance;
}


</pre>
</BODY>
</HTML>

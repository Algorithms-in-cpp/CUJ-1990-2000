<HTML><HEAD>
<TITLE>November 1999/C++ Theory and Practice/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: A version of the cross-reference program using streams, strings, maps, and vectors</A></h4>
<pre>
#include &lt;ctype.h&gt;
#include &lt;iomanip&gt;
#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;

using namespace std;

istream &amp;get_token(istream &amp;is, string &amp;s)
    {
    char c;
    while (is.get(c) &amp;&amp; isspace(c))
        ;
    if (is)
        {
        s = c;
        if (isalpha(c) || c == '_')
            while (is.peek() != EOF &amp;&amp; is.get(c))
                if (isalnum(c) || c == '_')
                    s += c;
                else
                    {
                    is.putback(c);
                    break;
                    }
        }
    return is;
    }

int main()
    {
    unsigned ln = 0;
    typedef vector&lt;unsigned&gt; sequence;
    typedef map&lt;string, sequence&gt; container;
    container table;
    string id, line;
    while (getline(cin, line))
        {
        ++ln;
        istringstream iss(line);
        while (get_token(iss, id))
            if (isalpha(id[0]) || id[0] == '_')
                {
                sequence &amp; s = table [id];
                if (s.empty() || s.back() ! = ln)
                    s.push_back (ln);
                }
        }
    container::iterator i = table.begin();
    for (; i != table.end(); ++i)
        {
        cout &lt;&lt; left &lt;&lt; setw(12) &lt;&lt; i-&gt;first &lt;&lt; ": ";
        sequence::iterator j = i-&gt;second.begin();
        for (; j != i-&gt;second.end(); ++j)
            cout &lt;&lt; setw(5) &lt;&lt; *j;
        cout &lt;&lt; '\n';
        }
    return 0;
    }
    
</pre>
</BODY>
</HTML>

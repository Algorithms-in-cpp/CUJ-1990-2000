<HTML><HEAD>
<TITLE>September 2000/The Simplest Automated Unit Test Framework That Could Possibly Work/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: The test class implementation</A></h4>
<pre>
// test.cpp

#include "test.h"
#include &lt;iostream&gt;
#include &lt;typeinfo&gt;     // Visual Studio requires /GR""

#ifdef _MSC_VER
// Allow return-less mains:
#pragma warning(disable: 4541)
#endif

using namespace std;

void Test::do_test(bool cond, const std::string&amp; lbl,
                   const char* fname, long lineno)
{
    if (!cond)
        do_fail(lbl, fname, lineno);
    else
        _succeed();
}

void Test::do_fail(const std::string&amp; lbl,
                   const char* fname, long lineno)
{
    ++m_nFail;
    if (m_osptr)
    {
        *m_osptr &lt;&lt; typeid(*this).name()
                             &lt;&lt; "failure: (" &lt;&lt; lbl &lt;&lt; ") , "
                                 &lt;&lt; fname
                 &lt;&lt; " (line " &lt;&lt; lineno &lt;&lt; ")\n";
    }
}

long Test::report() const
{
    if (m_osptr)
        {
            *m_osptr &lt;&lt; "Test \"" 
                         &lt;&lt; typeid(*this).name() &lt;&lt; "\":\n"
                     &lt;&lt; "\tPassed: " &lt;&lt; m_nPass
                     &lt;&lt; "\tFailed: " &lt;&lt; m_nFail
                     &lt;&lt; endl;
        }
    return m_nFail;
}
</pre></body></html>

<HTML><HEAD>
<TITLE>September 2000/The Simplest Automated Unit Test Framework That Could Possibly Work/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5: The file Suite.h</A></h4>
<pre>
// suite.h

#ifndef SUITE_H
#define SUITE_H

#include "test.h"   // includes &lt;string&gt;, &lt;iosfwd&gt;
#include &lt;vector&gt;
using std::string;
using std::ostream;
using std::vector;

class TestSuiteError;

class Suite
{
public:
    Suite(const string&amp; name, ostream* osptr = 0);

    string getName() const;
    long getNumPassed() const;
    long getNumFailed() const;
    const ostream* getStream() const;
    void setStream(ostream* osptr);
    
    void addTest(Test* t) throw (TestSuiteError);
    void addSuite(const Suite&amp;) throw(TestSuiteError);
    void run();     // Calls Test::run() repeatedly
    long report() const;
    void free();    // deletes tests

private:
    string m_name;
    ostream* m_osptr;
    vector&lt;Test*&gt; m_tests;
    void reset();

    // Disallowed ops:
    Suite(const Suite&amp;);
    Suite&amp; operator=(const Suite&amp;);
};

inline
Suite::Suite(const string&amp; name, ostream* osptr)
     : m_name(name)
{
    m_osptr = osptr;
}

inline
string Suite::getName() const
{
    return m_name;
}

inline
const ostream* Suite::getStream() const
{
    return m_osptr;
}

inline
void Suite::setStream(ostream* osptr)
{
    m_osptr = osptr;
}

#endif
</pre></body></html>

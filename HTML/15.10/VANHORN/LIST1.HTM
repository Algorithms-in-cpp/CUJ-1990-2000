



<HTML><HEAD>

<TITLE>October 1997/Compile-Time Assertions in C++/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 1:	Header file sized_types.h</h4>

<pre>
#ifndef SIZED_TYPES_H
#define SIZED_TYPES_H
     
#include &lt;limits&gt;
#include "ctassert.h"
     
//BEGIN MACHINE-DEPENDENT PART
     
typedef unsigned char uint8;
typedef signed char int8;
typedef unsigned short uint16;
typedef short int16;
typedef unsigned uint32;
typedef int int32;
     
//END MACHINE-DEPENDENT PART
     
//Force compile-time error if the typedefs are inappropriate for 
//this platform.
     
namespace sized_integer_tests {
  using namespace std;
     
  ctassert&lt;numeric_limits&lt;int8&gt;::is_integer&gt; t1; 
  ctassert&lt;numeric_limits&lt;uint8&gt;::is_integer&gt; t2; 
  ctassert&lt;numeric_limits&lt;int16&gt;::is_integer&gt; t3; 
  ctassert&lt;numeric_limits&lt;uint16&gt;::is_integer&gt; t4; 
  ctassert&lt;numeric_limits&lt;int32&gt;::is_integer&gt; t5; 
  ctassert&lt;numeric_limits&lt;uint32&gt;::is_integer&gt; t6;
     
  ctassert&lt;numeric_limits&lt;int8&gt;::is_signed&gt; t7; 
  ctassert&lt;numeric_limits&lt;int16&gt;::is_signed&gt; t8; 
  ctassert&lt;numeric_limits&lt;int32&gt;::is_signed&gt; t9;
     
  ctassert&lt;!numeric_limits&lt;uint8&gt;::is_signed&gt; t10; 
  ctassert&lt;!numeric_limits&lt;uint16&gt;::is_signed&gt; t11; 
  ctassert&lt;!numeric_limits&lt;uint32&gt;::is_signed&gt; t12;
     
  ctassert&lt;numeric_limits&lt;int8&gt;::radix == 2&gt; t13; 
  ctassert&lt;numeric_limits&lt;uint8&gt;::radix == 2&gt; t14; 
  ctassert&lt;numeric_limits&lt;int16&gt;::radix == 2&gt; t15; 
  ctassert&lt;numeric_limits&lt;uint16&gt;::radix == 2&gt; t16; 
  ctassert&lt;numeric_limits&lt;int32&gt;::radix == 2&gt; t17; 
  ctassert&lt;numeric_limits&lt;uint32&gt;::radix == 2&gt; t18;
     
  ctassert&lt;numeric_limits&lt;int8&gt;::digits == 7&gt; t19; 
  ctassert&lt;numeric_limits&lt;uint8&gt;::digits == 8&gt; t20; 
  ctassert&lt;numeric_limits&lt;int16&gt;::digits == 15&gt; t21; 
  ctassert&lt;numeric_limits&lt;uint16&gt;::digits == 16&gt; t22; 
  ctassert&lt;numeric_limits&lt;int32&gt;::digits == 31&gt; t23; 
  ctassert&lt;numeric_limits&lt;uint32&gt;::digits == 32&gt; t24;
}
     
#endif
     
//End of File
</pre>
</body></html>

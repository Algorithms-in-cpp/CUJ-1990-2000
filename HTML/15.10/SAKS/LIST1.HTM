



<HTML><HEAD>

<TITLE>October 1997/C++ Theory and Practice/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 1:	A class template for base and member subobjects.</h4>

<pre>
#include &lt;iostream&gt;
using namespace std;

template &lt;char c&gt;
class T
    {
public:
    T();
    T(T const &amp;);
    T &amp;operator=(T const &amp;);
    };

template &lt;char c&gt;
T&lt;c&gt;::T()
    {
    cout &lt;&lt; c &lt;&lt; "'s default constructor\n";
    }

template &lt;char c&gt;
T&lt;c&gt;::T(T const &amp;)
    {
    cout &lt;&lt; c &lt;&lt; "'s copy constructor\n";
    }

template &lt;char c&gt;
T&lt;c&gt; &amp;T&lt;c&gt;::operator=(T const &amp;)
    {
    cout &lt;&lt; c &lt;&lt; "'s copy assignment\n";
    return *this;
    }
//End of File
</pre>
</body></html>

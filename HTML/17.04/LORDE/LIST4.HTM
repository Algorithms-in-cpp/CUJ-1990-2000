<HTML><HEAD>
<TITLE>April 1999/A Generic Iterator for Strings/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: Test stub for generic TokenIter class and WordIter</A></h4>
<pre>
#include &lt;TokenIter.h&gt;
#include &lt;WordIter.h&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;

using std::string;
using std::vector;
using std::copy;
using std::sort;
using std::for_each;
using std::count;
using std::min_element;
using std::cout;
using std::cin;
using std::endl;

void PrintString(const string&amp; str)
{
    cout &lt;&lt; '\"' &lt;&lt; str &lt;&lt; '\"' &lt;&lt; endl;
}

void TokenIterTest()
{
    cout &lt;&lt; "Testing the Token Iterator:" &lt;&lt; endl &lt;&lt; endl;

    string test1 = "A test#@of the#@token iterator#@"
      "template class.#@This#@token iterator#@test "
      "should use#@a token#@several times#@for the#@token count";
    
    // Explicit use.

    typedef TokenIter&lt;TokenFinder&gt; TkIter;

    TkIter ti(test1, TokenFinder("#@"));
    while (ti != TkIter())
    {
        PrintString(*ti);
        ++ti;
    }

    cin.get();
    cout &lt;&lt; endl &lt;&lt; "Using STL algorithms:" &lt;&lt; endl;

    ti = test1;
    for_each(ti, TkIter(), PrintString);

    cin.get();

    cout &lt;&lt; endl &lt;&lt; "Minimum element:" &lt;&lt; endl;
    TkIter pMinToken = min_element(ti, TkIter());
    PrintString(*pMinToken);

    string cntStr("token iterator");
    cout &lt;&lt; endl &lt;&lt; "There are " 
         &lt;&lt; count(ti, TkIter::EOS, string("token iterator")) 
         &lt;&lt; " occurrences of \"" &lt;&lt; cntStr &lt;&lt; '\"' &lt;&lt; endl;


    cin.get();

    cout &lt;&lt; endl
         &lt;&lt; "Caching to a vector for better access:"
         &lt;&lt; endl;
    ti = test1;
    vector&lt;string&gt; tokens;
    copy(ti, TkIter(test1.end()), std::back_inserter(tokens));

    for_each(tokens.begin(), tokens.end(), PrintString);

    cout &lt;&lt; endl &lt;&lt; endl;
}

void WordIterTest()
{
    cout &lt;&lt; "Testing the Word Iterator" &lt;&lt; endl;

    string test1 = "This is a test of the word iterator."
        "It should use a word several times  for the word count";
    
    // Explicit use.

    WordIter wi(test1);

    while (wi != WordIter())
    {
        PrintString(*wi);
        ++wi;
    }

    cin.get();
    cout &lt;&lt; endl &lt;&lt; "Using STL algorithms:" &lt;&lt; endl;

    wi = test1;
    for_each(wi, WordIter(), PrintString);

    cin.get();

    cout &lt;&lt; endl &lt;&lt; "Minimum element:" &lt;&lt; endl;

    WordIter pMinToken = min_element(wi, WordIter());
    PrintString(*pMinToken);

    string cntStr("word");
    cout &lt;&lt; endl &lt;&lt; "There are " 
         &lt;&lt; count(wi, WordIter::EOS, cntStr)
         &lt;&lt; " occurrences of \"" &lt;&lt; cntStr &lt;&lt; '\"' &lt;&lt; endl;

    cin.get();

    cout &lt;&lt; endl
         &lt;&lt; "Caching to a vector for better access:"
         &lt;&lt; endl;

    wi = test1;
    vector&lt;string&gt; sentence;
    copy(wi, WordIter(test1.end()), std::back_inserter(sentence));

    for_each(sentence.begin(), sentence.end(), PrintString);

    cout &lt;&lt; endl &lt;&lt; endl;
}

int main(int argc, char* argv[])
{
    TokenIterTest();
    WordIterTest();
    cin.get();
    return(0);
}


</pre>
</BODY>
</HTML>

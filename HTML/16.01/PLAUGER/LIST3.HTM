


<HTML><HEAD>

<TITLE>January 1998/Standard C/C++/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 3: Template class numpunct and friends</A></h4>


<pre>
        // TEMPLATE CLASS numpunct
template&lt;class _E&gt;
    class numpunct : public locale::facet {
public:
    typedef basic_string&lt;_E, char_traits&lt;_E&gt;, allocator&lt;_E&gt; &gt;
        string_type;
    typedef _E char_type;
    static locale::id id;
    _E decimal_point() const
        {return (do_decimal_point()); }
    _E thousands_sep() const
        {return (do_thousands_sep()); }
    string grouping() const
        {return (do_grouping()); }
    string_type falsename() const
        {return (do_falsename()); }
    string_type truename() const
        {return (do_truename()); }
    explicit numpunct(size_t _R = 0);
protected:
    virtual ~numpunct();
    virtual _E do_decimal_point() const;
    virtual _E do_thousands_sep() const;
    virtual string do_grouping() const;
    virtual string_type do_falsename() const;
    virtual string_type do_truename() const;
    };

template&lt;class _E&gt;
    locale::id numpunct&lt;_E&gt;::id;

        // TEMPLATE CLASS numpunct_byname
template&lt;class _E&gt;
    class numpunct_byname : public numpunct&lt;_E&gt; {
public:
    explicit numpunct_byname(const char *_S, size_t _R = 0);
protected:
    virtual ~numpunct_byname()
        {}
    };
//End of File
</pre>
</body></html>

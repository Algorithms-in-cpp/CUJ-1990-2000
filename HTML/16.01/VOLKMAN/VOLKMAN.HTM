


<HTML><HEAD>




<HTML>
     
     <HEAD>

<TITLE>January 1998/C/C++ Sources</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<H2><A href="../tocjan.htm"><IMG src="../../toc.gif" ALT="Back to TOC" WIDTH="54" HEIGHT="54"></A>
<FONT COLOR="#FF0000">Columns</FONT></H2>

<HR>

<H2 ALIGN="center"><FONT COLOR="#800000">C/C++ Sources: Best of Reader Requests: Part III</FONT></H2>
<H2 ALIGN="center"><FONT COLOR="#800000">Victor R. Volkman</FONT></H3>
<blockquote>
<p>Last chance to catch some really neat URLs in CUJ, as Victor moves his software bird
dog service to our website.</p></blockquote><hr>
<blockquote>
<p>This final installment represents the bottom of the mailbag. I've enjoyed
interacting with CUJ readers about where to find the best C/C++ freeware and
shareware sources. However, providing great links to software in a paper-based
publication is difficult to do. Typing in lots of URLs is a less than enjoyable
way to read a magazine. Also, the swift change of software revisions and
websites makes it hard to guarantee that you'll be able to find the link by the
time it makes its way to you in print. That's why you'll find C/C++ Sources has
moved to the CUJ website as CUJ Favorite Links (http://www.cuj.com) in order to
bring you better, faster, and more reliable information. From now on, you'll
see only twice-yearly updates designed to "remind" you of what you might be
missing.<p>
Scott McKellar &lt;mck9@swbell.net&gt; writes:<p>
In your July 1997 column in CUJ, you mentioned two packages for finite state
machines: FIRE Lite and Grail. From your description, both packages are
apparently oriented toward parsing text, such as regular expressions.<p>
Your readers may also be interested in Libero, a code generator from iMatix,
especially if they need a finite state machine for purposes other than
parsing.<p>
Libero reads a text file specifying the states, events, and actions. Then it
generates source code in any of (at last count) fourteen different languages,
including C, C++, and Cobol. Libero is written in C, and runs under Unix,
MS-DOS, Windows NT, OS/2, and VMS.<p>
You can freely download Libero (and several other packages) from:</p>

<pre>
http://www.imatix.com
</pre>
<p>which also provides some fairly entertaining, if somewhat eccentric,
documentation.</p>
<p></p>
<p><i>Victor writes:<p>
Thanks, Scott, I'm always interested in sharing great links with
readers!</i></p><hr>
<p><p>
baparicio@usa.net writes:<p>
A portable SQL DBMS would be great!</p>
<p><i>Victor writes:<p>
The Beagle Freeware Database home page, maintained by software author Robert
Klein &lt;robk@pulse-sys.com&gt; organizes source code, documentation, and
support for this new relational DBMS. Beagle's features are accessible
primarily through its C-callable API. Currently, Beagle supports a wide variety
of Unix platforms including: Linux 1.2.13, SCO Openserver, FreeBSD 2.1R, SGI
IRIX v5.3, Solaris v2.x, and HP/UX. Porting projects are underway for Windows
95, NT, and other platforms. A support mailing list is available too. For code
and docs, see:</i></p>

<pre>
http://tiny.iapnet.com/rob/beagle.html
</pre>
<hr>
<p>mask@sanet.com.br
writes:<p>
Please send me frequenty asked questions of the C/C++ questions. I like very
much of this Home.</p>
<p><i>Victor writes:<p>
There are plain-text and HTML versions available. First the HTML
version</i></p>

<pre>
http://www.faqs.org/faqs/by-newsgroup/comp/comp.lang.c++.html
</pre>
<p><i>And now the plain text version where it must be downloaded in seven
parts:</i></p>

<pre>
ftp://rtfm.mit.edu/pub/usenet/comp.lang.c++/
</pre>
<p><i>There is also a book which contains the FAQ plus "about 500% more stuff" called C++
Faqs : Frequently Asked Questions, by Marshall P. Cline, Greg A. Lomow. 224
pages, Addison-Wesley, September 1994. ISBN: 0201589583.</i></p><hr>
<p><p>
bfairl@iol.ie writes:<p>
Hi C/C++ Answer Man,<p>
I am trying to implement a set of class libraries that insulate the user from
changes such as the addition or reordering of virtual functions or the addition
of data members in a Visual C++ 4.2/5.0 environment. I want to allow all of the
following cases :</p>
<p><p>
MyClass not derived from anything<br>
MyClass derived from an MFC class<br>
MyClass derived from MyClass1 in same library<br>
MyClass derived from MyClass2 across libraries and all combinations of these</p>
<p>I was wondering whether you have any suggestions as to the approach to take.
I have looked at the suggestion by Bjarne Stroustrup in The Design and
Evolution of C++, which involves using namespaces.</p>
<p><i>Victor writes:</p>
<p>I've had excellent success using the OLE Control model (also known as OCX or
ActiveX). You get all the benefits of easy encapsulation, plus transparent
versioning of interfaces which allows you to add or subtract functions and data
members at any time. For a light-weight version, you can use the ActiveX
Template Library, which combines an STL-like system with the power of
inheritance to produce powerful yet small objects. ATL produces COM objects,
which are a subset of the overall OLE Control model.<p>
I hope this is of sufficient use; if needed, I can give pointers to articles on
specific articles about this topics. Most of them would be through
http://www.microsoft.com/msdn. See also Adam Denning's book ActiveX Controls
Inside Out, 2nd Ed.</i></p><hr>
<p><p>
dhg@goodco.com writes:<p>
Anybody know where the object-oriented bison parser (binson++ ?) distribution
is on the net?</p>
<p><i>Victor writes:<p>
Once again, for those who may have missed it:</i></p>
<pre>BISON	ftp://prep.ai.mit.edu/pub/gnu/bison-1.25.tar.gz
BISON++	ftp://ftp.th-darmstadt.de/pub/programming/languages/C++/tools/flex++bison++/</pre>
<hr>
Stephane Chevrier &lt;chevrier@esker.fr&gt; writes:<p>
I'm desperately looking for the source code (in C/C++) of a driver that would
generate the FAX G3 format.</p>
<p><i>Victor writes:<p>
In saying that you need "G3," keep in mind that this is supported by TIFF file
formats. Here's a pointer to the "Unofficial Tiff Page"</i></p>

<pre>
http://home.earthlink.net/~ritter/tiff/
</pre>

<p><i>Section 18 of the comp.compression FAQ appears below:</i></p>
<p><blockquote>Subject: [18] I need specs and source for TIFF and CCITT
group 4 Fax<p>
Specs for Group 3 and 4 image coding (group 3 is very similar to group 4). The
specs are in CCITT (1988) volume VII fascicle VII.3. They are recommendations
T.4 and T.6 respectively. There is also an updated spec contained in 1992
recommendations T.1 to T.6.<p>
CCITT (now ITU-T) specs are available by anonymous ftp ... The T.4 and T.6
specs are on ftp://src.doc.ic.ac.uk in directory
/computing/ccitt/ccitt-standards/ccitt/1988/ascii, files 7_3_01.txt.Z
and 7_3_02.txt.Z respectively.<p>
Source code can be obtained as part of a TIFF toolkit   TIFF image compression
techniques for binary images include CCITT T.4 and T.6:<p>
ftp://ftp.sgi.com/graphics/tiff/tiff-v3.4beta035-tar.gz<p>
Contact: sam@engr.sgi.com<p>
There is also a companion compressed tar file (v3.0pics.tar.Z) that has sample
TIFF image files. A draft of TIFF 6.0 is in TIFF6.ps.Z. Concerning JPEG
compression in TIFF 6.0, Tom Lane &lt;tgl@sss.pgh.pa.us&gt; adds:<p>
TIFF 6.0's scheme for incorporating JPEG compression (spec section 22) has a
bunch of serious deficiencies. Don't use it. A revised design is given by TIFF
Technical Note #2,<p>
ftp://ftp.sgi.com/graphics/tiff/TTN2.draft.txt<p>
The revised design will replace section 22 in TIFF 7.0, and is implemented in
Sam Leffler's libtiff. See also item 75 of this FAQ for more JPEG info.<p>
Software for reading and writing CCITT Group 3 and 4 images is also available
in directory<p>
ftp://merry.cs.monash.edu.au/pub/alanf/TIFF_FAX<p>
Contact: Alan Finlay &lt;alanf@bruce.cs.monash.edu.au&gt;.</blockquote></p>
<p><i>Read the rest of the comp.compression FAQ at</i></p>

<pre>
ftp://ftp.faqs.org/faqs/compression-faq/part1
</pre><hr>
<p>sasakit@yamato.ibm.co.jp writes:<p>
[I would like to see] multi-platform class libraries.</p>
<p><i>Victor writes:<p>
The R2M Software company maintains the "Cross-Platform Development Internet
Resources" pointers page, which is a small subset of their mammoth "Internet
Resources for Windows Developers Index." The cross-platform page bridges both
freeware and commercial libraries, including several that have been mentioned
previously in this magazine: wxWindows, V, WINE, YACL, and more:</i></p>

<pre>
http://www.r2m.com/windev/cross-platform.html
</pre><hr>
<p>&lt;josevela@jet.es&gt; Jose Vela writes:<p>
I'm writing a ray tracing program in C and I'm looking for a freeware or very
cheap library &#151; I'm a student &#151; that allows me to put pixels in up to 16.7
millions of colors and to save images in TGA, BMP, or something like that. I
know MGL but it is too much expensive for me. Any suggestion? Thanks.</p>
<p><i>Victor writes:<p>
Ray tracing is the most visually exciting and computationally expensive method
of photorealistic rendering.<p>
Since you are a student, your instructor can apply for a free license for MIT
ERL's powerful "Raytrace 2.0" library.</i></p>

<pre>
http://www-erl.mit.edu/matarese/raytrace/raytrace.html
</pre>
<p><i>The oldest and most established of freeware ray tracers is the "Persistence of
Vision" tool. You can even buy a CD-ROM containing images and raw scene files.
Executable versions are available for MS-DOS, Win32, Windows 3.1, Linux, SunOS,
Macintosh, and other platforms. Source code to build POVRAY is only available
for some of the platforms.</i></p>

<pre>
ftp://wcarchive.cdrom.com/pub/povray/official-3.0/
</pre>
<p><i>Also, check out the Raytrace News:</i></p>

<pre>
http://www.povray.org
</pre>
<p><i>Ian Grimstead's "mother of all ray tracing pages" has links to all the major
freeware packages, including a half dozen which I haven't even
mentioned.</i></p>

<pre>
http://www.cm.cf.ac.uk/Ray.Tracing/
</pre>
<p><i>The C++ source code for HELIOS, which uses radiosity rather than ray tracing for
photorealistic rendering can be downloaded from</i></p>

<pre>
http://www.ledalite.com/software/software.htm
</pre><hr>

<p>dpp@cray.com writes:<p>
I'd like to see game development information, preferably on the Win95
platform.<p>
kathy.john.collyer@mcione.com writes:<p>
[I would like to see] video games using DirectX.</p>
<p><i>You can't do better than Microsoft's own site for information about the
eccentricities of game development for Windows 95. You'll also find a case
study of porting a game from MS-DOS to Windows 95.</i></p>

<pre>
http://www.microsoft.com/mediadev/icont.htm
</pre>
<p><i>See also the code from "Implementing Games for Windows Using the WinG API and the
WaveMix DLL" (Microsoft Systems Journal, January 1995) and "Get World-Class
Noise and Total Joy from Your Games with DirectSound and DirectInput." (MSJ,
February 1996).</i></p>

<pre>
ftp://ftp.microsoft.com/softlib/mslfiles/games.exe
</pre>
<p><i>and</i></p>

<pre>
ftp://ftp.microsoft.com/softlib/mslfiles/gamespt2.exe
</pre>
<p><i>respectively.</i></p><hr>
<p>david@uslab.se writes:<p>
[I would like to see] Windows NT device driver samples and info.<p>
Stef Chevrier&lt;chevrier@esker.fr&gt; writes:<p>
Hi, I'm currently trying to make a "printer" driver for Windows NT that would
only generate DIB files of the document (one DIB for each page) without
printing it. Microsoft sells a DDK with this example (called bitmap/cbitmap)
for Windows 3.1 but not for Windows NT. (Printer drivers under NT are working
on a totally different principle.) I'm desperately looking for examples of
"full" (not mini) printer drivers for Windows NT (in C), and especially one
that would generate the DIB images of the printed page. Any kind (public or
commercial) would be greatly appreciated.</p>
<p><i>Victor writes:<p>
You are correct in that the Windows DDK was sold only for Win 3.0 and 3.1.
However, the Windows NT DDKs are included free of charge with the Microsoft
Developer's Network CD-ROM subscription. Check http://www.microsoft.com/msdn
for details. Other than that, I would recommend The Windows NT Device Driver
Book: A Guide for Programmers, by Art Baker. Prentice Hall, 1997. ISBN:
0131844741.<p>
Available from http://www.amazon.com.</i></p><hr>
<p><p>
corbinbs@wofford.edu writes:<p>
Great Site! Keep up the good work! (I'm also in search of C sources for
VAX/VMS. Have any good places to look?)</p>
<p><i><p>
Victor writes:<p>
Try the DECUS "Languages and Tools SIG"</i></p>

<pre>
http://WWW.Decus.Org:80/decus/sigs/
</pre><hr>
<p>bbogard@ibm.net writes:<p>
[I would like information on] network communication using C/C++.<p>
csj@kew.dk writes:<p>
[I would like to see] TCP/IP programming lib's for C++.</p>

<p><i>For Unix, I would recommend Socket++ by Gnanasekaran Swaminathan, an
iostream-like class for Unix and inet sockets, pipes, and socketpairs. Socket++
classes can be used more effectively than directly calling the underlying
low-level system functions. Since Socket++ has the same interface as the LibG++
iostream (i.e. like cout and cin), it automatically performs type-safe input
and output. Even though Socket++ is very easy to use, it still supports a full
complement of socket options including: error reporting, debug mode,
keepalives, routing, broadcast datagrams, out-of-band data, and buffer
resizing. Socket++ includes a mechanism for handling timeouts gracefully as
well. Socket++ runs on many Unix platforms, including Sun Sparc, IBM RS/6000,
DECstation, and SGI Indigo boxes.</i></p>

<pre>
ftp://ftp.virginia.edu/pub/socket++-1.11.tar.gz
</pre><hr>
<p>&lt;juanqui@bo.net&gt; Juan Carlos Claros writes:<p>
I'm in the university and I need a "class Matrix." I have searched on the net,
but not found anything. You could indicate me please where I could find (on the
net) or buy a source code in reasonable price.</p>
<p><i>Victor writes:<p>
There are a few really good matrix class libraries out there. I recommend
trying MatClass and Newmat.<p>
MatClass, by Chris Birchenhall, is a C++ library for numerical computation with
a general-purpose dense, real-matrix class. MatClass has a family of
decomposition classes based on LU, Cholesky, Householder QR, and SVD.
Additionally, it has a family of OLS regression classes based on above
decompositions and a random number class.</i></p>

<pre>
ftp://ftp.mcc.ac.uk/pub/matclass/pc/
</pre>
<p><i>OR</i></p>

<pre>
ftp://ftp.mcc.ac.uk/pub/matclass/unix/
</pre>
<p><i>Newmat, by Robert Davies, is a very thorough matrix class that supports classes Matrix,
UpperTriangularMatrix, LowerTriangularMatrix, DiagonalMatrix, SymmetricMatrix,
BandMatrix, UpperBandMatrix, LowerBandMatrix, SymmetricBandMatrix, RowVector,
and ColumnVector. Only one element type is supported. It includes the
operations *, +, -, concatenation, element-wise product, inverse, transpose,
conversion between types, submatrix, determinant, Cholesky decomposition, QR
triangularization, singular value decomposition, symmetric eigenvalue analysis,
fast Fourier transform, sort, print, an interface to  "Numerical Recipes in C"
programs, and an emulation of  exceptions. It works with Borland, Watcom,
Microsoft  and Gnu C++ compilers.</i></p>

<pre>
ftp://ftp.agt.net/pub/coast/msdos/cpluspls/newmat08.zip
</pre>
  
<p><i>Victor R. Volkman received a BS in Computer Science from Michigan Tech
University. He has been a frequent contributor to the C/C++ Users Journal since
1987. His most recent book is entitled Windows Programming with Shareware
Tools. He can be reached on the web at http://www.HAL9K.com, or email to
sysop@HAL9K.com. 
</i></p></blockquote>
</body></html>




<HTML><HEAD>

<TITLE>January 1998/An Introduction to COM/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 3: The client implementation</A></h4>


<pre>
//
// Client.cpp - client implementation
//
#include &lt;iostream.h&gt;
#include &lt;objbase.h&gt;

#include "Iclient.h"

void trace(const char* msg) {cout &lt;&lt; "Client: \t\t" &lt;&lt; msg &lt;&lt; endl;}

//  All these GUIDS where generated using GUIDGEN.EXE and are 
//  globally unique for each interface.  

// {59FA0200-13FF-11d1-883A-3C8B00C10000}
extern "C" const IID IID_IAddSub = 
  {0x59fa0200, 0x13ff, 0x11d1, 
    {0x88, 0x3a, 0x3c, 0x8b, 0x0, 0xc1, 0x0, 0x0}};

// {59FA0201-13FF-11d1-883A-3C8B00C10000}
extern "C" const IID IID_IMulDiv = 
  {0x59fa0201, 0x13ff, 0x11d1,
    { 0x88, 0x3a, 0x3c, 0x8b, 0x0, 0xc1, 0x0, 0x0}};

// {59FA0202-13FF-11d1-883A-3C8B00C10000}
extern "C" const IID IID_ITrigonometry = 
  {0x59fa0202, 0x13ff, 0x11d1,
    { 0x88, 0x3a, 0x3c, 0x8b, 0x0, 0xc1, 0x0, 0x0}};

// {59FA0203-13FF-11d1-883A-3C8B00C10000}
extern "C" const CLSID CLSID_ClassFactory =
  { 0x59fa0203, 0x13ff, 0x11d1, 
    { 0x88, 0x3a, 0x3c, 0x8b, 0x0, 0xc1, 0x0, 0x0 } };

class client_out
{
public:
  void operator&lt;&lt;(char*c)
  {
     cout&lt;&lt;"COMCalc Client:\t\t"&lt;&lt;c;
  }
};

client_out out;

int main()
{
  // Initialize COM Library
  CoInitialize(NULL) ;

  cout &lt;&lt; "The client calls CoCreateInstance to create "
       &lt;&lt; "a COMCalc object\n" &lt;&lt; endl;
  cout &lt;&lt; "  and get interface IAddSub.\n" &lt;&lt; endl;
  
  IAddSub* pIAddSub = NULL ; 
  HRESULT hr = ::CoCreateInstance(CLSID_ClassFactory,
          NULL,  
          CLSCTX_INPROC_SERVER,
          IID_IAddSub, 
          (void**)&amp;pIAddSub) ;
  if (SUCCEEDED(hr))
  {
    out &lt;&lt; "Succeeded getting IAddSub. Now we can reference "
        &lt;&lt; "its member functions\n" ;
  
    // Use interface IAddSub.
    cout &lt;&lt; "3+3=" &lt;&lt; pIAddSub-&gt;Add(3,3) &lt;&lt; endl;
    cout &lt;&lt; "3-3=" &lt;&lt; pIAddSub-&gt;Subtract(3,3) &lt;&lt;endl;
    
    out &lt;&lt; "Ask for interface IMulDiv.\n" ;
    IMulDiv* pIMulDiv = NULL ;
  
    hr = pIAddSub-&gt;QueryInterface(IID_IMulDiv, (void**)&amp;pIMulDiv) ;
    
    if (SUCCEEDED(hr))
    {
      out&lt;&lt;"Got IMulDiv.\n" ;
      // Use interface IMulDiv.
      cout &lt;&lt; "3*3=" &lt;&lt; pIMulDiv-&gt;Multiply(3,3) &lt;&lt; endl;
      cout &lt;&lt; "3/3=" &lt;&lt; pIMulDiv-&gt;Divide(3,3) &lt;&lt; endl;

      pIMulDiv-&gt;Release() ;
      out&lt;&lt;"Release IMulDiv interface.\n" ;
    }
    else
    {
      out&lt;&lt;"Could not get interface IMulDiv.\n" ;
    }

    out &lt;&lt; "Ask for interface ITrigonometry.\n" ;

    ITrigonometry* pITrigonometry = NULL ;

    hr = pIAddSub-&gt;QueryInterface(IID_ITrigonometry, 
                                     (void**)&amp;pITrigonometry) ;
    if (SUCCEEDED(hr))
    {
      out &lt;&lt; "Got interface ITrigonometry.\n" ;

      pITrigonometry-&gt;Release() ;
      out &lt;&lt; "Release ITrigonometry interface.\n" ;
    }
    else
    {
      out &lt;&lt; "Could not get interface ITrigonometry.\n" ;
      out &lt;&lt; "Perhaps a later version of comCalc will support it.\n";
    }

    out &lt;&lt; "Release IAddSub interface.\n" ;
    pIAddSub-&gt;Release() ;
  }
  else
  {
    cout &lt;&lt; "Could not create component. hr = "
         &lt;&lt; hex &lt;&lt; hr &lt;&lt; endl ;    
  }

  // Uninitialize COM Library
  CoUninitialize() ;

  return 0 ;
}
//End of File
</pre>
</body></html>





<HTML><HEAD>

<TITLE>August 1997/A Portable Multithreading Framework/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 3:	POSIX reference count implementation</h4>

<pre>
////////////////////////////////////////////
// Copyright (c) Panos Kougiouris 1997
////////////////////////////////////////////


#include &lt;kfReferenceCount.h&gt;
#include &lt;assert.h&gt;


CKFReferenceCount::CKFReferenceCount()
{
    m_count = 1;
    pthread_mutex_init(&amp;m_mutex, NULL);
}

//------------------------------------------

CKFReferenceCount::~CKFReferenceCount()
{
    assert(m_count == 0);
    pthread_mutex_destroy(&amp;m_mutex);
}

//------------------------------------------

void 
CKFReferenceCount::increment()
{
    pthread_mutex_lock(&amp;m_mutex);
    m_count++;
    pthread_mutex_unlock(&amp;m_mutex);
}

//------------------------------------------

void 
CKFReferenceCount::decrement()
{
    pthread_mutex_lock(&amp;m_mutex);
    m_count--;
    if (m_count == 0) {
        delete this;
    } else {
        pthread_mutex_unlock(&amp;m_mutex);
    }
}

//------------------------------------------

int 
CKFReferenceCount::count()
{
    int ret;

    pthread_mutex_lock(&amp;m_mutex);
    ret = m_count;
    pthread_mutex_unlock(&amp;m_mutex);

    return ret;
}

//End of File
</pre>
</body></html>

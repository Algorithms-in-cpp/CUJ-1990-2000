



<HTML><HEAD>

<TITLE>August 1997/A Portable Multithreading Framework/Listing 4</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 4:	NTreference count implementation</h4>

<pre>
////////////////////////////////////////////
// Copyright (c) Panos Kougiouris 1997
////////////////////////////////////////////

#include &lt;kfReferenceCount.h&gt;

CKFReferenceCount::CKFReferenceCount()
{
    m_count = 1;
}

CKFReferenceCount::~CKFReferenceCount()
{
    assert(m_count == 0);
}

//------------------------------------------

void 
CKFReferenceCount::increment()
{
    InterlockedIncrement((LPLONG)&amp;m_count);
}

//------------------------------------------

void 
CKFReferenceCount::decrement()
{
    LONG ret =

      InterlockedDecrement((LPLONG)&amp;m_count);
    assert(ret &gt;= 0);  // less than 0 means
                       // too many decrements
    if (m_count == 0) {
        delete this;
    }
}

//------------------------------------------

int 
CKFReferenceCount::count()
{
    return m_count;   
}

//End of File
</pre>
</body></html>





<HTML><HEAD>

<TITLE>August 1997/Portable I/O Drivers/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 3:	Example of how to implement and use SG functions with a
processor architecture which only have a single linear address space</h4>


<pre>
// Defined in iohw.h
#define access8 volatile unsigned char *
#define iowr8( PADDR, PVAL ) (* ( PADDR ) = ( PVAL ))
#define iowrbuf8( PADDR, PINDEX, PVAL ) \
   (( PADDR )[( PINDEX )] = ( PVAL ))
#include &lt;iohw_ta.h&gt;

// Defined in iohw_ta.h
#define PORT1 ((access8) (0xfff0)) // I/O register definition

// Portable driver function module
#include &lt;iohw.h&gt;

void nibblewr1 ( unsigned char data ) 
   {
   iowr8( PORT1, data &amp; 0xf);
   iowr8( PORT1, data &gt;&gt; 4);
   }

void nibblewr2 ( access8 adr, unsigned char data ) 
   {
   iowr8( adr, data &amp; 0xf);
   iowr8( adr, data &gt;&gt; 4);
   }

void nibblewr3 ( unsigned int index, unsigned char data ) 
   {
   iowrbuf8( PORT1, index, data &amp; 0xf);
   iowrbuf8( PORT1, index, data &gt;&gt; 4);
   }

void nibblewr4 ( access8 adr, unsigned int index, 
                 unsigned char data )
   {
   iowrbuf8( adr, index, data &amp; 0xf);
   iowrbuf8( adr, index, data &gt;&gt; 4);
   }

void iotest(void)
   {
   nibblewr1( 0x12 );
   nibblewr2( PORT1, 0x34 );
   nibblewr3( 10, 0x56);
   nibblewr4( PORT1, 3, 0x78 );
   }
/* End of File */
</pre>
</body></html>





<HTML><HEAD>

<TITLE>August 1997/Standard C/C++/Listing 8</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 8:	Template class indirect_array</h4>

<pre>
        // MACROS
#define IOP(RHS) \
    size_t L = Totlen(); \
    for (size_t I = 0; I &lt; L; ++I) \
        Ptr[Indir(I)] RHS;
#define IOP2(RHS) \
    size_t N = L.Totlen(); \
    for (size_t I = 0; I &lt; N; ++I) \
        L.Data(L.Indir(I)) RHS;

        // TEMPLATE CLASS indirect_array
template&lt;class Ty&gt;
    class indirect_array {
public:
    typedef Ty value_type;
    void operator=(const valarray&lt;Ty&gt;&amp; R) const
        {IOP(= R[I]); }
    void operator=(const Ty&amp; R)
        {IOP(= R); }
    Ty&amp; Data(size_t I) const
        {return (Ptr[I]); }
    size_t Indir(size_t I) const
        {return (Iarr[I]); }
    size_t Totlen() const
        {return (Iarr.size()); }
private:
    friend class valarray&lt;Ty&gt;;
    indirect_array(const Sizarray&amp; Ia, Ty *Pd)
        : Iarr(Ia), Ptr(Pd) {}
    Sizarray Iarr;
    Ty *Ptr;
    };

        // indirect_array MEMBER TEMPLATE OPERATORS
template&lt;class Ty&gt; inline
    void operator*=(const indirect_array&lt;Ty&gt;&amp; L,
        const valarray&lt;Ty&gt;&amp; R)
    {IOP2(*= R[I]); }
// etc.
//End of File
</pre>
</body></html>





<HTML><HEAD>

<TITLE>August 1997/Standard C/C++/Listing 2</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 2:	Sample valarray operators</h4>

<pre>
        // operator* AND FRIENDS
template&lt;class Ty&gt; inline
    valarray&lt;Ty&gt;&amp; operator*=(valarray&lt;Ty&gt;&amp; L, const Ty&amp; R)
    {VALGOP2(*= R); }
template&lt;class Ty&gt; inline
    valarray&lt;Ty&gt;&amp; operator*=(valarray&lt;Ty&gt;&amp; L,
        const valarray&lt;Ty&gt;&amp; R)
    {VALGOP2(*= R[I]); }
template&lt;class Ty&gt; inline
    valarray&lt;Ty&gt; operator*(const valarray&lt;Ty&gt;&amp; L,
        const Ty&amp; R)
    {VALOP(Ty, L.size(), L[I] * R); }
template&lt;class Ty&gt; inline
    valarray&lt;Ty&gt; operator*(const Ty&amp; L,
        const valarray&lt;Ty&gt;&amp; R)
    {VALOP(Ty, R.size(), L * R[I]); }
template&lt;class Ty&gt; inline
    valarray&lt;Ty&gt; operator*(const valarray&lt;Ty&gt;&amp; L,
        const valarray&lt;Ty&gt;&amp; R)
    {VALOP(Ty, L.size(), L[I] * R[I]); }
// etc.

        // SAMPLE MATH FUNCTION OVERLOAD
template&lt;class _Ty&gt; inline
    valarray&lt;_Ty&gt; acos(const valarray&lt;_Ty&gt;&amp; _X)
    {_VALOP(_Ty, _X.size(), _CSTD acos(_X[_I])); }
// etc.
//End of File
</pre>
</body></html>

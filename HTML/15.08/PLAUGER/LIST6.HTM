



<HTML><HEAD>

<TITLE>August 1997/Standard C/C++/Listing 6</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 6:	Template class gslice_array</h4>

<pre>
        // MACROS
#define GSLOP(RHS) \
    Sizarray Idx((size_t)0, Nslice()); \
    size_t N = Totlen(); \
    for (size_t I = 0; I &lt; N; ++I) \
        Ptr[Off(Idx)] RHS;
#define GSLOP2(RHS) \
    Sizarray Idx((size_t)0, L.Nslice()); \
    size_t N = L.Totlen(); \
    for (size_t I = 0; I &lt; N; ++I) \
        L.Data(L.Off(Idx)) RHS;

        // TEMPLATE CLASS gslice_array
template&lt;class Ty&gt;
    class gslice_array : public gslice {
public:
    typedef Ty value_type;
    void operator=(const valarray&lt;Ty&gt;&amp; R) const
        {GSLOP(= R[I]); }
    void operator=(const Ty&amp; R)
        {GSLOP(= R); }
    Ty&amp; Data(size_t I) const
        {return (Ptr[I]); }
private:
    friend class valarray&lt;Ty&gt;;
    gslice_array(const gslice&amp; Gs, Ty *Pd)
        : gslice(Gs), Ptr(Pd) {}
    Ty *Ptr;
    };

        // gslice_array MEMBER TEMPLATE OPERATORS
template&lt;class Ty&gt; inline
    void operator*=(const gslice_array&lt;Ty&gt;&amp; L,
        const valarray&lt;Ty&gt;&amp; R)
    {GSLOP2(*= R[I]); }
// etc.
//End of File
</pre>
</body></html>

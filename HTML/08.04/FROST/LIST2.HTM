<HTML><HEAD><TITLE>April 1990/Using Files As Semaphores/Listing 2</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4><A name="00D1_0075"><A name="00D1_0075">Listing 2<A name="00D1_0075"></h4><P>
<pre>/* semaphore.c */

/* Supported operating systems:  UNIX, MS-DOS */
#define UNIX    (1)
#define MSDOS   (2)
#define HOST    UNIX

#include &lt;errno.h&gt;
#include &lt;limits.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#if HOST == UNIX
#define PATHDLM ('/')   /* path name delimiter */
#include &lt;fcntl.h&gt;  /* open() macro definitions */
#include "syscalkr.h"   /* system call declarations */
#include &lt;sys/stat.h&gt;   /* file mode macros */
#elif HOST == MSDOS
#define PATHDLM ('\\')  /* path name delimiter */
#include &lt;fcntl.h&gt;  /* open() macro definitions */
#include &lt;io.h&gt;     /* close(), open() declarations */
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;   /* file mode macros */
#endif
#include "semaphor.h"

/* semaphore set table definition */
static semset_t sst[SEMOPEN_MAX];

/* semlower:  lower semaphore */
int semlower(semset_t *ssp, int semno)
{
    char path[PATH_MAX + 1];

    /* remove semaphore file */
    sprintf(path, "%s%cs%d", ssp-&gt;semdir, (int)PATHDLM, semno);
    if (unlink(path) == -1) {
        if (errno == ENOENT) errno = EAGAIN;
        return -1;
    }

    errno = 0;
    return 0;
}

/* semraise:  raise semaphore */
int semraise(semset_t *ssp, in, semno)
{
    char path[PATH_MAX + 1];
    int fd = 0;

    /* create semaphore file */
    sprintf(path, "%s%cs%d", ssp-&gt;semdir, (int)PATHDLM, semno);
#if HOST == UNIX
    fd = open(path, O_WRONLY | O_CREAT, O);
#elif HOST == MSDOS
    fd = open(path, O_WRONLY | O_CREAT, S_IREAD | S_IWRITE);
#endif
    if (fd == -1) {
        return -1;
    }
    if (close(fd) == -1) {
        return -1;
    }

    errno = 0;
    return 0;
}
</pre>
</BODY>
</HTML>

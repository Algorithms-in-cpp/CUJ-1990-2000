<HTML><HEAD><TITLE>April 1990/Fast Memory Allocation Scheme/Listing 2</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4><A name="00D8_0078"><A name="00D8_0078">Listing 2<A name="00D8_0078"></h4><P>
<pre>/* Borrow Memory */

/* Returns a pointer to the allocated memory, or NULL */

char *borrow(id,need)
register MemBlock *id;        /* Pointer to first block */
register int need;            /* Requested memory size */
{
   register MemBlock *p=id-&gt;mb_pres;  /* Present block pointer */
   register int oldoffs;              /* Old offset */

   /* Round need up to word multiple */
   need+=need&amp;1;

   /* Deal with more memory required */
   if(id-&gt;mb_offs+need&gt;id-&gt;mb_size) {    /* Too large to fit ? */
      register MemBlock *q;            /* Get another */
      if((q=(MemBlock *)allocate(id-&gt;mb_size))==0)
         return(NULL);
      p-&gt;mb_next=q;                    /* Link to new block */
      q-&gt;mb_next=NULL;                 /* Mark end of list */
      id-&gt;mb_pres=q;                   /* New block is present one */
      id-&gt;mb_offs=sizeof(MemBlock *);  /* Reset offset */
      p=q;                             /* Present block */
   }
   oldoffs=id-&gt;mb_offs;                 /* Record present offset */
   id-&gt;mb_offs+=need;                   /* Move offset */
   return((char *)((int)p+oldoffs));    /* Return address of memory */
}
</pre>
</BODY>
</HTML>

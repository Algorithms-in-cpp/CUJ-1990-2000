<HTML><HEAD>
<TITLE>November 1995/A Synchronization Class Using Critical-Sections/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4 <I>Test the </I>semaphore<I> class</A></I></h4>
<pre>//**************************************************
//  Listing 4
//
//  FILE NAME   : tsema.cpp
//  AUTHOR      : Matt Weisfeld
//
//  DESCRIPTION : test the semaphore class
//**************************************************
#include &lt;iostream.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include "sema.h"

const PROC_NUM=3;   // this can be passed as a parameter

//
// Simple test program for using the semaphore class.
// To initialize the synchronization file, execute:
//
// % test i
//
// To synchronize a process, execute:
//
// % test n (where n is the process number)
//

main(int argc, char **argv)
{

   fprintf (stderr,"SEMAPHORE(1.0)\n");

   // must be 2 args
   if (argc != 2) {
      printf ("Error: bad number of args.\n");
      exit(0);
   }

   // can't have a proc number greater than PROC_NUM
   if (atoi(argv[1]) &gt;= PROC_NUM) {
      printf ("
         Invalid processor number: must be less than %d.\n", PROC_NUM);
      exit(0);
   }
   
   semaphore S(PROC_NUM);    // instatiate the semaphore object
   
   S.synchronize(argv[1]);   // perform the synchronization
   
   return(0);
}
//End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>December 1993/Code Capsules/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6 <I>Illustrates the Bitstring Class</I></A></h4>
<pre>// tbitstr.cpp - Test the bitstring class
#include &lt;iostream.h&gt;
#(include "bitstr.h"
#include "string.hpp"

main()
{
    bitstring x(21537,4), y(string("10110"));

    cout &lt;&lt; "Initial x: " &lt;&lt; x &lt;&lt; endl;
    cout &lt;&lt; "Initial y: " &lt;&lt; y &lt;&lt; endl;

    for (int i = 0; i &lt;= 5; ++i)
        x.set(i);
    cout &lt;&lt; "x: "&lt;&lt; x &lt;&lt; " (" &lt;&lt; x.count()
        &lt;&lt;" bits set)" &lt;&lt; endl;
    cout &lt;&lt; "x == 21567?"
        &lt;&lt; (x == bitstring(21567,x.length())) &lt;&lt; endl;
    cout &lt;&lt; "x &gt;&gt;= 6 = " &lt;&lt; (x &gt;&gt;= 6) &lt;&lt; endl;
    cout &lt;&lt; "x &lt;&lt;= 6 = " &lt;&lt; (x &lt;&lt;= 6) &lt;&lt; endl;
    cout &lt;&lt; "x ^ 3 = " &lt;&lt; (x ^ bitstring(3,2)) &lt;&lt; endl;
    cout &lt;&lt; "x | 3 = " &lt;&lt; (x | bitstring(3,2)) &lt;&lt; endl;
    cout &lt;&lt; "x &amp; 3 = " &lt;&lt; (x &amp; bitstring(3,2)) &lt;&lt; endl;
    cout &lt;&lt; "3 &amp; x = " &lt;&lt; (bitstring(3,2) &amp; x) &lt;&lt; endl;
    cout &lt;&lt; "~x = " &lt;&lt; (~x) &lt;&lt; endl;

    cout &lt;&lt; "y &amp;= x = " &lt;&lt; (y &amp;= x) &lt;&lt; endl;
    cout &lt;&lt; "y ^= x = " &lt;&lt; (y ^= x) &lt;&lt; endl;
    cout &lt;&lt; "y |= x = " &lt;&lt; (y |= x) &lt;&lt; endl;

    y.length(20);
    y.reset();
    for (i = 4; i &lt;= 12; ++i)
        y.set(i);
    cout &lt;&lt; "y: "&lt;&lt; y &lt;&lt; " (" &lt;&lt; y.count()
        &lt;&lt;" bits set)" &lt;&lt; endl;
    cout &lt;&lt; "x &amp; y = " &lt;&lt; (x &amp; y) &lt;&lt; endl;
    cout &lt;&lt; "x | y = " &lt;&lt; (x | y) &lt;&lt; endl;
    cout &lt;&lt; "x ^ y = " &lt;&lt; (x ^ y) &lt;&lt; endl;
    cout &lt;&lt; "x != y? " &lt;&lt; (x != y) &lt;&lt; endl;
    cout &lt;&lt;"x + y = " &lt;&lt; x+y &lt;&lt; endl;
    x += y;
    cout &lt;&lt; "after x+= y: "&lt;&lt; x &lt;&lt; endl;
    x.trim();
    cout &lt;&lt; "after x.trim(): "&lt;&lt; x &lt;&lt; endl;

    return 0;
}

/* OUTPUT:
Initial x: 100001000010101
Initial y: 10110
x: 111111000010101 (9 bits set)
x == 21567? 1
x &gt;&gt;= 6 = 000000111111000
x &lt;&lt;= 6 = 111111000000000
x ^ 3 = 001111000000000
x | 3 = 111111000000000
x &amp; 3 = 110000000000000
3 &amp; x = 110000000000000
~x = 000000111111111
y &amp;= x = 101100000000000
y ^= x = 010011000000000
y |= x = 111111000000000
y: 00001111111110000000 (9 bits set)
x &amp; y = 00001100000000000000
x | y = 11111111111110000000
x ^ y = 11110011111110000000
x != y? 1
x + y = 11111100000000000001111111110000000
after x += y: 11111100000000000001111111110000000
after x.trim(): 1111110000000000000111111111
*/

// End of File</pre>

</BODY>
</HTML>

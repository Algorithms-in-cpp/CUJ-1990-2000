


<HTML>
<HEAD>

<TITLE>May 1990/New Releases</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocmay.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Departments</FONT></H2>

<hr><h2 align="center"><font color="#800000">New Releases<A name="0125_00A6"><A name="0125_00A6"></font></h2><hr>
<BLOCKQUOTE>
<h4><FONT COLOR="#000080"><A name="0125_00A7"><A name="0125_00A7"><A name="0125_00A7">CUG310 Little Smalltalk for MS-DOS<A name="0125_00A7"></FONT></h4></P>
This Little Smalltalk, submitted by Henri de Feraudy (France) is part of Smalltalk Express Ltd.'s (England) effort to bring the object-oriented paradigm to the general public. They ported Professor Timothy Budd's Little Smalltalk to three different, low-cost platforms: the IBM-PC, the Atari ST, and a British machine, the Acorn Archimedes. This particular volume is for MS-DOS.<P>
The disk includes the source code and executable files but no documentation. In order to learn the language, you can purchase Timothy Budd's book <I>A Little Smalltalk</I> from Addison-Wesley Publishing Company. The program was compiled under Microsoft C v4.0. The original UNIX version of Little Smalltalk is also available from our library (CUG229 and CUG230).<P>
<h4><FONT COLOR="#000080"><A name="0125_00A8">CUG311 DB package<A name="0125_00A8"></FONT></h4></P>
Ken Harris (WI) has contributed his database routines, DB package v1.3. The DB package consists of a library of file handling routines that may be linked with user applications. The routines support the four file organizations: sequential (data records of fixed length are stored sequentially), index (data records are stored in an ISAM type organization), random (data records are stored using a hashed method), and variable (data records of variable length are stored sequentially). The routines include not only basic database manupilation routines such as addition, deletion, and search, but also sort. The DB package also lets you develop a data object dictionary to create a relation between two data records. The disk includes all C source code and test files, and a users guide that describes each routine. The program has been compiled and tested under Ultrix on a VAX station-2000 with gcc, using Microsoft C v5.1 and Turbo C v2.0 under MS-DOS, and cc under UNIX on 3B1.<P>
<h4><FONT COLOR="#000080"><A name="0125_00A9">CUG312 Make-Maker<A name="0125_00A9"></FONT></h4></P>
Contributed by Jim Yehle R. (CO), Make-Maker automates the process of creating a makefile. Make-Maker is a series of awk programs that first scans C source code for <I>#include</I> files to build a dependency list (a makefile component, called a Dependency Generator), then scans a linker configuration file to build a primary target dependency list (Object file Extractor), and finally builds a full makefile. Since the linker configuration file is unique for each linker, you must create your own object file extractor. The disk includes object file extractors for the Turbo Link Response file and the Intel Linker (binder) configuration file. The disk also includes Intel 80x86 assembly and PL/M dependency generators, as well as a C dependency generator. All the awk code takes advantage of the 1985 enhancements to the original, 1977 awk.<P>
<h4><FONT COLOR="#000080"><A name="0125_00AA">CUG313 STEVIE<A name="0125_00AA"></FONT></h4></P>
Written by Tony Andrews (CO) and submitted by Michael Yokoyama (HI), STEVIE v3.71 is an editor designed to mimic the interface of the UNIX text editor 'vi'. The editor was first written for the Atari ST, hence the name (ST Editor for VI Enthusiasts). The current version of the program also supports UNIX, Minix (ST), MS-DOS, and OS/2. The disk includes all C source code and documentation.<P>
<h4><FONT COLOR="#000080"><A name="0125_00AB">UPDATES<A name="0125_00AB"></FONT></h4></P>
<h4><FONT COLOR="#000080"><A name="0125_00AC">CUG209 Simplex Curve Fitting<A name="0125_00AC"></FONT></h4></P>
Some text files in the distribution disk included some strange characters. If you have trouble compiling the program, strip the eighth bit of those characters.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

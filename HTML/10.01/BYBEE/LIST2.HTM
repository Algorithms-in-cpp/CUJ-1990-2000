<HTML><HEAD>
<TITLE>January 1992/A Portable VMS-Style Input Line Routine/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2</A></h4>
<pre>/*
 * Listing 2: main() routine and test code for get_str().
 * Includes the OS-dependent routines sys_getchar()
 * and sys putchar().
 */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;bios.h&gt;
#include &lt;string.h&gt;

#define INBUFSIZ 70
char inbuf[INBUFSIZ + 1];

void get_str( char *str, int len );

void main( void )
      {

      while (1)
             {
             printf("\ntype 'quit' to quit.\nprompt&gt; ");
             get_str(inbuf, INBUFSIZ);

             if (stricmp(inbuf, "quit") == 0)
                    break;

             printf(" Got: \"%s\"\n", inbuf);
             }
      }


/*********************************************************
 * The following two routines will need to be changed,
 * in order to use get_str() in a different environment.
 ********************************************************/

/*
 * Put a character to the output device.
 * Expand \n to \r\n.
 */
void sys_putchar( char ch )
      {

      putchar(ch);
      if (ch == "\n")
             putchar("\r");
      }


/*
 * Get a character from the input device.
 * Use the BIOS call so we can detect arrow keys.
 */
int sys_getchar( void )
      {
      int ch;

      ch=bioskey(0);           /* wait and get a key */

      if ((ch &amp; 0xff) != 0)    /* if not an extended key, */
             ch &amp;= 0xff;                      /* use only the
ASCII part */
      return (ch);
      }
/* End of File */</pre>

</BODY>
</HTML>

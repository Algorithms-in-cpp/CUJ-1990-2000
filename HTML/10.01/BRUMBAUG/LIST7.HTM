<HTML><HEAD>
<TITLE>January 1992/Porting C Libraries To C++/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7 (paylist. h) Concrete List Class for a Payroll List</A></h4>
<pre>//////////////////////////////////////////////////
//  By David Brumbaugh
//////////////////////////////////////////////////

#ifndef PAYLIST_H
#define PAYLIST_H
#include "pinclas.h"

struct employee
{
   char last[21], first[11];
   double pay_rate;  // Dollars per day
   long days_worked;
   // Days worked in this pay period.
};

class PayList: public Pfm_List {
protected:
   employee empBuffer;

public:
// Constructors
  PayList():Pfm_List("payroll.db","Employees")
  {default_key = DB_Column(table,"LastFirst"); }
  PayList(DB &amp;open_db):PfmList(open_db, "Employees")
  {default_key = DB_Column(table,"LastFirst");}
  PayList(DB &amp;open_db, DBTAB &amp;db_table):
  Pfm_List(open_db, db_table)
  {default_key = DB_Column(table,"LastFirst");}

// List Navigation
   virtual Boolean find (char *last),
                find(char *last, char *first);
   virtual Boolean find(void *key)
   {return (find( (char *) key));}

// List Interface
   virtual void add(employee &amp;emp);
   virtual void replace(employee &amp;emp);
   virtual void get(employee &amp;emp);
   virtual void *current()
   { get(empBuffer); return (void *) &amp;empBuffer;}

};
#endif
</pre>
</BODY>
</HTML>

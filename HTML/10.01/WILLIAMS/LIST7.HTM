<HTML><HEAD>
<TITLE>January 1992/A Console Stream Class For Borland C++/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7 (window. cpp)</A></h4>
<pre>#include "window.h"
#include "vstream.h"  // console stream header

// TC++ 1.0 didn't define _wscroll in conio.h
#ifndef__BORLANDC__
extern int_wscroll;
#endif

// Initialize class variable. Note you can't do this in the
// Definition itself.
win * win::topwin=NULL;
win * win::lastwin=NULL;

win::win(int x0,int y0,int x1,int y1,unsigned int clr,int mar):
      region(x0,y0,x1,y1,0)
   {
   if (!topwin)  // first window
      {
      textattr(7); // reset screen
      clrscr();
      lastwin=this;
      }
   else
      {
// save window contents  &amp; cursor
      topwin-&gt;reinit();
      topwin-&gt;oldx=wherex();
      topwin-&gt;oldy=wherey();
      }
   margin=mar;
   color=clr;
   prev=NULL;
   if (topwin) topwin-&gt;prev=this;
   next=topwin;
   topwin=this;
   window(x0,y0,x1,y1);
   gotoxy(1,1);
   textattr(clr);
   clrscr();
   }

void win::maketop(void)
   {
   win *gpw;
 // return if already at top
   if (this==topwin) return;
// force top window to save
   topwin-&gt;reinit();
   topwin-&gt;oldx=wherex();
   topwin-&gt;oldy=wherey();
// patch link list
   if (lastwin==this) lastwin=prev;
   if (prev) prev-&gt;next=next;
   if (next) next-&gt;prev=prev;
   prev=NULL;
   topwin-&gt;prev=this;
   next=topwin;
   topwin=this;
   settop();
   restore(); // Draw our screen contents
   }

void win::settop(void)
   {
   window(
      topwin-&gt;left+topwin-&gt;margin,
      topwin-&gt;top+topwin-&gt;margin,
      topwin-&gt;right-topwin-&gt;margin,
      topwin-&gt;bot-topwin-&gt;margin);
   textattr(topwin-&gt;color);
   gotoxy(topwin-&gt;oldx,topwin-&gt;oldy);
   }



win::~win()
   {
   this-&gt;maketop(); // force us on top
// just in case there is a margin
   window(left,top,right,bot);
   textattr(7);
   clrscr();
   destroy();

   if (next) next-&gt;prev=NULL;
   topwin=next;
   if (!topwin)
      {
      window(1,1,80,25);
      clrscr();
      }
   else
      {
      for (win *i=lastwin;i;i=i-&gt;prev)
         {
         i-&gt;restore();
         if (i!=topwin) i-&gt;reinit();
         }
      settop();
      }
   }

// boxwin methods
boxwin::boxwin(int x0,int y0,int x1,int y1,unsigned int clr, int boxt) :
         win(x0-1,y0-1,x1+1,y1+1,clr,1)
   {
   draw_box(boxt,1,1,x1-x0+3,y1-y0+3);
   window(x0,y0,x1,y1);
   }

// General purpose box drawing function
// Type  0: single line box
// Type  1: double line box
// Other types are easily added
void draw_box(int type,int x0,int y0,int x1,int y1)
   {
   int oldscroll; // old value for _wscroll
   int i;
   int hline;
   int vline;
   int cl,c2,c3,c4;
   int xlen;
   int ylen;
   if (type&lt;0||type&gt;1) return; // change value to add more types
   xlen=x1-x0;
   ylen=y1-y0;
   if (type==0)
      {

// Constants for a "normal" box
     hline=196;
     vline=179;
     c1=218;
     c2=191;
     c3=192;
     c4=217;
     }
   else if (type==1)
     {
     hline=205;
     vline=186;
     c1=201;
     c2=187;
     c3=200;
     c4=188;
     }
   oldscroll= _wscroll;
   _wscroll=0;
   gotoxy(x0+1,y0);
   for (i=1;i&lt;xlen;i++) putch(hline);
   gotoxy(x0+1,y0+ylen);
   for (i=1;i&lt;xlen;i++) putch(hline);
   gotoxy(x0,y0);
   putch(cl);
   gotoxy(x0+xlen,y0);
   putch(c2);
   gotoxy(x0,ylen+y0);
   putch(c3);
   gotoxy(xlen+x0,ylen+y0);
   putch(c4);
   for (i=y0;i&lt;ylen;i++)
      {
      gotoxy(x0,i+1);
      putch(vline);
      gotoxy(xlen+x0,i+1);
      putch(vline);
      }
   _wscroll=oldscroll;
   }

// End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>October 1998/An SQL Client Class/Figure 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 5: Handles the SQLDA structure</A></h4>
<pre>
class DbSQLDA {
public :
    Bool hasRecord;
    Dump sqlda;
    DbRecord record;
    DbSQLDA() { hasRecord = TRUE; }

    SQLDA* getSQLDA() { return (SQLDA*)sqlda.data; }
    operator SQLDA*() { return (SQLDA*)sqlda.data; }
    SQLVAR&amp; operator[](int i) { return getSQLDA()-&gt;sqlvar[i]; }
    void create(SQLDA* s, Bool withData = FALSE);

    // Creates copy of SQLDA &lt;s&gt; with record buffer if desired
    DbSQLDA&amp; operator&lt;&lt;(SQLVAR* var);

    // Adds SQLVAR &lt;var&gt; (and data in record buffer too)
    void synchronize();
    void clear();
    void extend(int delta);
};

void DbSQLDA::extend(int delta) {
    int used;
    if (sqlda.size &gt; 0)
        used = SQLDA_LENGTH(getSQLDA()-&gt;sqld) + 
               delta*sizeof(SQLVAR);
    else
        used = SQLDA_LENGTH(delta);
    if (used &gt; sqlda.size)
        if (sqlda.size &gt; 0) {
            Dump swap(sqlda);
            sqlda.create(used + FIELD_GRAN*sizeof(SQLVAR));
            memcpy(sqlda.data, swap.data, swap.size);
            getSQLDA()-&gt;sqln += delta;
        }
        else {
            sqlda.create(used + FIELD_GRAN*sizeof(SQLVAR));
            getSQLDA()-&gt;sqln = delta;
        }
    else
        getSQLDA()-&gt;sqln += delta;
}

DbSQLDA&amp; DbSQLDA::operator&lt;&lt;(SQLVAR* var) {
    extend(1);
    if (hasRecord)
        record &lt;&lt; var;
    (*this)[getSQLDA()-&gt;sqld++] = *var;
    return *this;
}

void DbSQLDA::synchronize() {
    if (!hasRecord)
        return;

    SQLDA* s = getSQLDA();
    for (int i = 0; i &lt; s-&gt;sqld; i++) {
        DbRecordField* field = record.get(i);
        s-&gt;sqlvar[i].sqldata = field-&gt;text;
        s-&gt;sqlvar[i].sqlind = &amp;field-&gt;nullind;
    }
}

void DbSQLDA::create(SQLDA* s, Bool withData) {
    sqlda.create(SQLDA_LENGTH(s-&gt;sqld));
    memcpy(sqlda.data,s,sqlda.size);
    getSQLDA()-&gt;sqln = s-&gt;sqld;
    if (withData) {
        hasRecord = TRUE;
        record.create(s);
        synchronize();
    }
    else
        hasRecord = FALSE;
}

void DbSQLDA::clear() {
    sqlda.destroy();
    record.clear();
    hasRecord = TRUE;
}

/* End of File */
</pre>
</BODY>
</HTML>

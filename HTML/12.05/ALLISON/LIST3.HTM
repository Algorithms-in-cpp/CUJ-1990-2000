<HTML><HEAD>
<TITLE>May 1994/Code Capsules/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 date.cpp: <I>implementation of</I> date <I>class defined in <a href="list2.htm">Listing 2</a></I></A></h4>
<pre>#include &lt;iostream.h&gt;
#include &lt;assert.h&gt;
#include "time.h"
#include "date.h"

// Must define static members at file scope:
int Date::dtab[2][13] =
{
  {0,31,28,31,30,31,30,31,31,30,31,30,31},
  {0,31,29,31,30,31,30,31,31,30,31,30,31}
};

int Date::month(int m)
{
   // Change month
   int old_month = month_;
   if (m &gt;= 1 &amp;&amp; m &lt;= 12)
      month_ = m;
   return old_month;
}

int Date::day(int d)
{

   // Change day
   int old_day = day_;
   if (d &gt;= 1 &amp;&amp; d &lt;= dtab[isleap(year_)][month_])
      day_ = d;
   return old_day;
}

int Date::year(int y)
{
   // Change year
   int old_year = year_;
   year_= y;
   return old_year;
}

int Date::compare(const Date&amp; d1, const Date&amp; d2)
{

   int months, days, years, order;
   
   years = d1.year_ - d2.year_;
   months = d1.month_ - d2.month_;
   days = d1.day_ - d2.day_;
   
   // return &lt;0, 0, or &gt;0, like strcmp()
   if (years == 0 &amp;&amp; months == 0 &amp;&amp; days == 0)
      return 0;
   else if (years == 0 &amp;&amp; months == 0)
      return days;
   else if (years == 0)
      return months;
   else
      return years;
}

ostream&amp; operator&lt;&lt;(ostream&amp; os, const Date&amp; d)
{
   os &lt;&lt; d.month_ &lt;&lt; '/' &lt;&lt; d.day_&lt;&lt; '/' &lt;&lt; d.year_;
   return os;
}

istream&amp; operator&gt;&gt;(istream&amp; is, Date&amp; d)
{
   char slash;
   is &gt;&gt; d.month_&gt;&gt; slash &gt;&gt; d.day_ &gt;&gt; slash &gt;&gt; d.year_;
   return is;
}

Date::Date( )
{
   // Get today's date
   time_t tval = ::time(0);
   struct tm *tmp = :: localtime(&amp;tval);
   
   month_ = tmp-&gt;tm_mon+l;
   day_ = tmp-&gt;tm_mday;
   year_ = tmp-&gt;tm_year + 1900;
}

// End of File
</pre>
</BODY>
</HTML>

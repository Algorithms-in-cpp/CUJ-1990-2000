<HTML><HEAD><TITLE>July 1993/Extending C for Object-Oriented Programming/Sidebar</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h3 align="center"><FONT FACE="Garamond" COLOR="#000080">What is an Object? A Quick Review</FONT></h3><hr>
<BLOCKQUOTE>
<UL><LI><I>Object-oriented design</I> means modelling a problem domain with related objects.</LI>
<LI><I>Objects</I> have state and are eligible to participate in behaviors which can change that state.</LI>
<LI><I>Object-oriented programming</I> means implementing an object-oriented design with data structures and functions.</LI>
<LI><I>Data structures </I>represent the state of an object.</LI>
<LI><I>Functions</I> associated with an object define the methods for accessing and changing the state of an object, that is, for making the object behave.</LI>
<LI><I>Simple objects</I> are common in C libraries. For example, the Standard I/O library provides simple file objects consisting of a <I>FILE</I> data structure and a set of associated functions that operate on a pointer to a <I>FILE</I> structure.</LI>
<LI><I>Inheritance </I>is the relation of derivation among different types, or classes, of objects. If class <I>Z</I> is derived from class <I>Y</I>, and class <I>Y</I> is derived from class <I>X</I>, then <I>X</I> and <I>Y</I> are called <I>base classes</I> of <I>Z</I>.</LI>
<LI><I>Derivation </I>of a class from a base class means extending the base class by adding new object data, adding new object methods, and redefining existing object methods.</LI>
<LI><I>Polymorphism</I>, "having many forms," means that an object of a derived class can be referenced wherever an object of a base class is called for, but will behave as appropriate to its type. That is, if an object method has been redefined, then the redefining function, not the original function, will be called.</LI>
<LI><I>Dynamic binding </I>is a means of achieving polymorphism. With dynamic binding, when a method is invoked the function to call is determined at runtime. Dynamic binding is supported in C++ by virtual functions. C provides no equivalent facility, but <I>switch</I> statements or pointers to functions can be used to imitate it. Static binding is monomorphic. When a method is invoked, the function to call is determined at compile time. Static binding is supported by ordinary C function calls.</LI></UL>
</BLOCKQUOTE>
</BODY>
</HTML>

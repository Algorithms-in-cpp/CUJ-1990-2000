






<HTML>
     
     <HEAD>
          <TITLE>Table of Contents</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          
          <H2><IMG src="../logo.gif" alt="CUJ Logo" WIDTH="310" HEIGHT="100"></H2>
          
          <BLOCKQUOTE>
               
               <H3><FONT COLOR="#000080">June 1996 <BR>
                Vol. 14, No. 06</FONT></H3>
               
               <H3><FONT COLOR="#FF0000"> Scientific/Numerical Programming
               </FONT></H3>
               
               <H4><A href="kerzner/kerzner.htm"> Signal Processing with
                    Dynamic Programming </A></H4>
               
               <P><B> Mark Kerzner </B> <BR>
                    <I> If you can quantify what you mean by a "best"
                    solution, dynamic programming can often help you find that
                    solution &#151; whether you're drilling for oil or sorting
                    apples. </I></P>
               
               <H4><A href="schulist/schulist.htm"> A Simple Matrix Class
               </A></H4>
               
               <P><B> Stephen Schulist </B> <BR>
                    <I> Matrices occur throughout mathematics, and pop up often
                    in engineering computations. A simple template matrix class
                    lets you manipulate matrix objects with a safe and
                    convenient notation. </I></P>
               
               <H4><A href="schroed/schroed.htm"> Visualizing Scientific
                    Data </A></H4>
               
               <P><B> Will Schroeder </B> <BR>
                    <I> There's a real difference between data and information.
                    Visualization is one way to help map the former to the
                    latter. </I></P>
               
               <H4> <A href="dwyer/dwyer.htm">Testing Random Number
                    Generators</a>
</H4>
               
               <P><B> Jerry Dwyer and K.B. Williams </B> <BR>
                    <I> Nothing involving computers is ever as random as it
                    seems. The only way to determine whether a random number
                    generator is good enough is through careful testing. </I></P>
               
               <H3><FONT COLOR="#FF0000"> FEATURES </FONT></H3>
               
               <H4><A href="volkman/volkman.htm"> A C Users' Group Update
               </A></H4>
               
               <P><B> Victor R. Volkman </B> <BR>
                    <I> The C Users' Group is one of the most comprehensive,
                    longest established collections of source code in the C/C++
                    universe. The latest CUG CD is now available, with new
                    communication libraries, tutorials, and utilities, to name a
                    few. </I></P>
               
               <H4><FONT COLOR="purple">Designing C++ Classes</FONT> (Article unavailable in electronic form)</H4>
               
               <P><B> Martin D. Carroll and Margaret A. Ellis </B> <BR>
                    <I> Ellis and Stroustrup wrote the definitive work on the
                    C++ language in The Annotated C++ Reference Manual. Now
                    Carroll and Ellis are defining what it means to write code
                    with good style. </I></P>
               
               <H3><FONT COLOR="#FF0000"> BOOK REVIEW </FONT></H3>
               
               <H4> <A href="briand/briand.htm">Designing and Coding
                    Reusable C++ </A></H4>
               
               <P><B> Marc Briand </B></P>
               
               <H3><FONT COLOR="#FF0000"> COLUMNS </FONT></H3>
               
               <H4> <A href="plauger/plauger.htm">Standard C/C++:
                    Allocators </A></H4>
               
               <P><B> P. J. Plauger </B> <BR>
                    <I> Following the evolving C++ Standard has been difficult
                    for implementors, and unsettling for users. The Standard's
                    spec for STL allocators has been a particularly unstable
                    target. Here's one way to cope with the changes. </I></P>
               
               <H4><A href="saks/saks.htm"> C++ Theory and Practice:
                    Abstract Declarators, Part 1 </A></H4>
               
               <P><B> Dan Saks </B> <BR>
                    <I> A thorough understanding of declarators is essential to
                    mastering C++ syntax. This month Dan gives special attention
                    to one of the most commonly occurring declarators. </I></P>
               
               <H4><A href="schmidt/schmidt.htm"> The Learning C/C++urve:
                    C-&gt;C++ Mutations, Part 1 </A></H4>
               
               <P><B> Bobby Schmidt </B> <BR>
                    <I>So you're going to port that C code to C++, huh? That
                    C++ compiler may not welcome your code with open arms. Bobby
                    shows how to get on the compiler's good side, and explains
                    why it seems to be so picky. </I></P>
               
               <H4> <A href="becker/becker.htm">Questions &amp; Answers: 
                    Overloaded Conversion Operators </A></H4>
               
               <P><B> Pete Becker </B> <BR>
                    <I> Oveloaded conversion operators are powerful, but
                    potentially hazardous. Pete shows how to incorporate them as
                    features rather than bugs. </I></P>
               
               <H3><FONT COLOR="#FF0000"> DEPARTMENTS </FONT></H3>
               
               <H4> <A href="edforum/edforum.htm">Editor's Forum </A></H4>
               
               <H4><A href="newprod/newprod.htm"> New Products </A></H4>
               
               <H4><A href="mail/mail.htm"> We Have Mail </A></H4></BLOCKQUOTE>
     </BODY>
</HTML>

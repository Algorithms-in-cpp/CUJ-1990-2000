



<HTML><HEAD>

<TITLE>June 1996/Testing Random Number Generators/Listing 2</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 2: execkosm.c</A></h4>


<pre>

/* ============ */
/* execkosm.c   */
/* ============ */
#include &lt;mconf.h&gt;
#include &lt;miscdefs.h&gt;
#include &lt;freqdefs.h&gt;
/* ============================================================== */
/* ExecKolSmirTest - Performs K-S on K-S Test on Runs of Random   */
/* Numbers                                                        */
/* ============================================================== */
void
ExecKolSmirTest(KS_DATA_STRU *KSData)
{
    int     i;
    double  NegProbAry[MAX_KS_RUNS], PosProbAry[MAX_KS_RUNS];
    double  KnMinusProb, KnMinusStat, KnPlusProb, KnPlusStat;

    /* ---------------------------------- */
    /* Set Run Controls from User Inputs. */
    /* ---------------------------------- */
    SetKoSmControls(KSData);

    /* ------------------------ */
    /* Initialize Variate Count */
    /* ------------------------ */
    KSData-&gt;TotNumGen = 0;

    /* ----------------------------- */
    /* Gather Data for KS-on-KS Test */
    /* ----------------------------- */
    fflush(NULL);
    for (i = 0; i &lt; KSData-&gt;NumKSRuns; ++i)
    {
        KSFreq(KSData);

        PosProbAry[i] = KSData-&gt;KnPlusProb;
        NegProbAry[i] = KSData-&gt;KnMinusProb;

        fprintf(stderr, "\rPass %3d (of %d), %8ld  Total 
        Random Numbers",
            i+1, KSData-&gt;NumKSRuns, KSData-&gt;TotNumGen);
    }

    fprintf(stderr, "\n"); fflush(NULL);
    /* ---------------------------------------------- */
    /* Calculate Statistics and Probabilities for Kn+ */
    /* ---------------------------------------------- */
    KSCalc(PosProbAry, KSData-&gt;NumKSRuns, &amp;KnPlusStat, &amp;KnPlusProb,
        &amp;KnMinusStat, &amp;KnMinusProb);

    printf("\nStatistics and Probabilities for Kn+\n");
  
    printf("\tK(%d)+ = %f (Knuth) or %9f%%\n", KSData-&gt;NumKSRuns,
        sqrt((double)KSData-&gt;NumKSRuns)*KnPlusStat, 100*KnPlusProb);

    printf("\tK(%d)- = %f (Knuth) or %9f%%\n", KSData-&gt;NumKSRuns,
        sqrt((double)KSData-&gt;NumKSRuns)*KnMinusStat, 100*KnMinusProb);

    /* ---------------------------------------------- */
    /* Calculate Statistics and Probabilities for Kn- */
    /* ---------------------------------------------- */
    KSCalc(NegProbAry, KSData-&gt;NumKSRuns, &amp;KnPlusStat, &amp;KnPlusProb,
        &amp;KnMinusStat, &amp;KnMinusProb);

    printf("\nStatistics and Probabilities for Kn-\n");

    printf("\tK(%d)+ = %f (Knuth) or %9f%%\n", KSData-&gt;NumKSRuns,
        sqrt((double)KSData-&gt;NumKSRuns)*KnPlusStat, 100*KnPlusProb);

    printf("\tK(%d)- = %f (Knuth) or %9f%%\n", KSData-&gt;NumKSRuns,
        sqrt((double)KSData-&gt;NumKSRuns)*KnMinusStat, 100*KnMinusProb);

    printf("\nThis Run Required %ld Random Numbers\n\n",
        KSData-&gt;TotNumGen);
}
/* End of File */
</pre>
</body></html>

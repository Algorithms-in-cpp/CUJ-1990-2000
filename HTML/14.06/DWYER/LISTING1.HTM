



<HTML><HEAD>

<TITLE>June 1996/Testing Random Number Generators/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 1: ksfreq.c</A></h4>


<pre>

/* ============ */
/* ksfreq.c     */
/* ============ */
/* -------------------------------- */
/* WorkArea is defined in freqtst.c */
/*                                  */
/*      UINT    WorkArea[32768u];   */
/*                                  */
/* -------------------------------- */
#define RandNum WorkArea

#define MAX_SAMPS  ((unsigned)RAND_MAX + 1u)

/* ---------------------------------------------------- */
/* IntCmprFun - Returns difference between Key and Elem */
/* ---------------------------------------------------- */
static  int  IntCmprFun(const void *Key, const void *Elem)
{
    return (*(int *) Key - *(int *) Elem);
}
/* ============================================================== */
/* KSFreq - Kolmogorov-Smirnov Statistics Kn+ &amp; Kn- and Probabilities */
/* ============================================================== */
void
KSFreq(KS_DATA_STRU  *KSData)
{
    UINT    i, J, NumGen;
    double  KSVal, MaxKnMinus, MaxKnPlus, NextKn;
    NumGen = (KSData-&gt;SampleSize &lt;= MAX_SAMPS) ?
                KSData-&gt;SampleSize : MAX_SAMPS;

    for (i = 0; i &lt; NumGen; ++i)
    {
        int     NextRand = KSData-&gt;RandFun();
        RandNum[i] = NextRand;
    }

    /* --------------------------- */
    /* Counting Variates Generated */
    /* --------------------------- */
    KSData-&gt;TotNumGen += NumGen;

    /* -------------------------------------- */
    /* Calculate Statistics and Probabilities */
    /* -------------------------------------- */
    qsort((void *)RandNum, NumGen, sizeof(int), IntCmprFun);

    MaxKnMinus = MaxKnPlus = 0;
    for (J = 1; J &lt;= NumGen; ++J)
    {
        KSVal = (double)RandNum[J-1]/(double)MAX_SAMPS;

        NextKn = (double)J/(double)NumGen - KSVal;
        MaxKnPlus = __max(MaxKnPlus, NextKn);

        NextKn = 1.0/(double)NumGen - NextKn;
        MaxKnMinus = __max(MaxKnMinus, NextKn);
    }
    KSData-&gt;KnMinus = MaxKnMinus;
    KSData-&gt;KnPlus  = MaxKnPlus;

    KSData-&gt;KnMinusProb = KSmirnov(NumGen, MaxKnMinus);
    KSData-&gt;KnPlusProb  = KSmirnov(NumGen, MaxKnPlus);
}
/* End of File */
</pre>
</body></html>

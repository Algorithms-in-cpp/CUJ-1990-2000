



<HTML><HEAD>

<TITLE>June 1996/Testing Random Number Generators/Listing 4</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 4: exchisq.c</A></h4>


<pre>

/* ============ */
/* exchisq.c    */
/* ============ */
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;mconf.h&gt;
#include &lt;math.h&gt;
#include &lt;miscdefs.h&gt;
#include &lt;freqdefs.h&gt;

#define NUM_PROBS       100
#define LOW_PROB        1.0e-8

/* ============================================================== */
/* ExecChiSqTest - Executes Chi-Square Test For Frequency Test    */
/* ============================================================== */
void
ExecChiSqTest(CHISQ_STRU * ChiSqData)
{
    int     k;
    double  ChiSqProbs[NUM_PROBS];
    double  DegFree, LoLimit, HiLimit;
    double  KnMinusStat, KnMinusProb, KnPlusStat,  KnPlusProb;

    /* -------------------------------- */
    /* Get Control Parameters From User */
    /* -------------------------------- */
    SetChiSqControls(ChiSqData);
    fprintf(stderr, "\n"); fflush(NULL);

    /* ------------------------ */
    /* Initialize Variate Count */
    /* ------------------------ */
    ChiSqData-&gt;TotNumGen = 0;

    /* ------------------------- */
    /* Generate Random Numbers,  */
    /* Calculate Chi-Square Data */
    /* ------------------------- */
    DegFree = ChiSqData-&gt;NumElements - 1;
    ChiSqDist(LOW_PROB, DegFree, &amp;LoLimit, &amp;HiLimit);

    for (k = 0; k &lt; NUM_PROBS; ++k)
    {
        /* ------------------------------ */
        /* Calculate Chi-Square Statistic */
        /* ------------------------------ */
        ChiSqFreq(ChiSqData);

        fprintf(stderr, "\rPass %3d (of %d), %8ld  Total Random 
                Numbers", k+1, NUM_PROBS, ChiSqData-&gt;TotNumGen);

        /* -------------------------------- */
        /* Calculate Chi-Square Probability */
        /* -------------------------------- */
        if (ChiSqData-&gt;ChiSqValu &lt; LoLimit)
        {
              ChiSqProbs[k] = LOW_PROB;
        }
        else if (ChiSqData-&gt;ChiSqValu &gt; HiLimit)
        {
              ChiSqProbs[k] = 1.0 - LOW_PROB;
        }
        else
        {
                ChiSqProbs[k] = chdtr(DegFree, ChiSqData-&gt;ChiSqValu);
        }

        if (ChiSqProbs[k] &lt; 0)
        {
            fprintf(stderr, "\nChiSqFreq(): Function chdtr() "
                "Returned Negative Probability -  Can't Happen.\n");
        }
    }
    fprintf(stderr, "\n"); fflush(NULL);
    KSCalc(ChiSqProbs, NUM_PROBS, &amp;KnPlusStat, &amp;KnPlusProb,
        &amp;KnMinusStat, &amp;KnMinusProb);

    printf("\nKolmogorov-Smirnov Statistics and Probabilities"
           " on Chi-Square Data\n");

    printf("\tK(%d)+ = %f (Knuth) or %9f%%\n", NUM_PROBS,
        sqrt((double)NUM_PROBS)*KnPlusStat, 100*KnPlusProb);

    printf("\tK(%d)+ = %f (Knuth) or %9f%%\n", NUM_PROBS,
        sqrt((double)NUM_PROBS)*KnMinusStat, 100*KnMinusProb);

    printf("\nThis Run Required %ld Random Numbers\n\n",
        ChiSqData-&gt;TotNumGen);
}
/* End of File */
</pre>
</body></html>





<HTML><HEAD>

<TITLE>February 1997/Binary Constants Using Template Metaprogramming/Listing 4</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 4:	Final version with range checking and macros</h4>

<pre>

int ByteOverflow()
  {
  return( 0 ) ;
  }

template&lt; unsigned long N &gt; struct 
  InRangeBinByte
  {
  enum { value = (N &lt;= 11111111L) } ;
  } ;

template&lt; unsigned long N &gt; struct BinByte
  {
  enum { value = InRangeBinByte&lt; N &gt; :: value ?
          BinDigitOrError&lt; (N % 10) &gt; :: value +
          2 * BinByte&lt; N / 10 &gt; :: value :
          ByteOverflow() } ;
  } ;

struct BinByte&lt; 0 &gt;
  {
  enum { value = 0 } ;
  } ;

#define BIN_BYTE( N ) \
  ((unsigned int)BinByte&lt; (N) &gt; :: value)
#define BIN_WORD_LE( N, M ) \
  ( 256 * BIN_BYTE( N ) + BIN_BYTE( M ) )
//End of File
</pre>
</body></html>

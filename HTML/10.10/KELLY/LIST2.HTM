<HTML><HEAD>
<TITLE>October 1992/The Evolution of a Binary Tree in Turbo C/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2 <I>Slightly enhanced binary tree program</I>.</A></h4>
<pre>#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

/*  Tree Node Definition with String Key */

typedef struct node {
   struct node *left;
   struct node *right;
   char key[BUFSIZ];
}node;


/*  Non-Recursive Tree Insertion Function */

void tree_insert(node **root, node *new_node)
{
   node *this_node = *root;
   int dif;

   while(this_node) {
   if(! (dif = strcmp(new_node-&gt;key, this_node-&gt;key)))
         goto key_copy;
      else if(dif &lt; 0) {
         if(this_node-&gt;left)
            this_node = this_node-&gt;left;
         else {
            this_node-&gt;left = (node *)calloc(1,
                            sizeof(node));
            this_node = this_node-&gt;left;
            goto key_copy;
         }
      }

      else {
         if(this_node-&gt;right)
            this_node = this_node-&gt;right;
         else {
            this_node-&gt;right = (node *)calloc(1,
                             sizeof(node));
            this_node = this_node-&gt;right;
            goto key_copy;
         }
      }
   }

   /* only arrives here when instatiating root */
   this_node = (node *)calloc(1, sizeof(node));
   *root = this_node;

key_copy:
   strncpy(this_node-&gt;key, new_node-&gt;key, BUFSIZ);
   this_node-&gt;key[BUFSIZ] = '\0';
}

/*  Recursive In-Order Traversal */
/*  Function Prints Key String */

void tree_trace(node *root)
{
   if(! root)
   return;
   tree_trace(root-&gt;left);
   printf("%s\n", root-&gt;key);
   tree_trace(root-&gt;right);
}

/*  String Key Tree Test Driver */

void main(void)
{
   node *tree_root = NULL;
   node this_node = { NULL, NULL, "" };
   char *str[5] = { "some", "duplicate", "and",
                 "duplicate", "keys" };
   int i;

   for(i = 0;i &lt; 5;i++) {
      strcpy(this_node.key, str[i]);
      tree_insert(&amp;tree_root, &amp;this_node);
   }
   tree_trace(tree_root);
   exit (0);
}
/*  End of File */
</pre>
</BODY>
</HTML>

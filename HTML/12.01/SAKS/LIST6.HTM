<HTML><HEAD>
<TITLE>January 1994/Stepping Up To C++/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6 <I>Selective virtual overriding</I></A></h4>
<pre>#include &lt;iostream.h&gt;

class B
       {
public:
       virtual void f();
       virtual void g();
       virtual void h();
       };

class C : public B
       {
public:
       void f();   // virtual
       };

class D : public C
       {
public:
       void h();   // virtual
       };

void B::f() { cout &lt;&lt; "B::f()\n"; }

void B::g() { cout &lt;&lt; "B::g()\n"; }

void B::h() { cout &lt;&lt; "B::h()\n"; }

void C::f() { cout &lt;&lt; "C::f()\n"; }

void D::h() { cout &lt;&lt; "D::h()\n"; }

int main()
       {
       C c;
       D d;

       B *pb = &amp;c;          // ok, &amp;c is a C * which is a B *
       pb-&gt;f();             // calls C::f()
       pb-&gt;g();             // calls B::g()
       pb-&gt;h();             // calls B::h()

       C *pc = &amp;d;          // ok, &amp;d is a D * which is a C *
       pc-&gt;f();             // calls C::f()
       pc-&gt;g();             // calls B::g()
       pc-&gt;h();             // calls D::h()

       B &amp;rb = *pc;         // ok, *pc is a C which is a B
       rb.f();              // calls C::f()
       rb.g();              // calls B::g()
       rb.h();              // calls D::h()

       return 0;
       }

// End of File
</pre>
</BODY>
</HTML>

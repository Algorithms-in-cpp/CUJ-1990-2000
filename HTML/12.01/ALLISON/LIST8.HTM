<HTML><HEAD>
<TITLE>January 1994/Code Capsules/Listing 8</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 8 <I>Tests the bits class</I></A></h4>
<pre>// tbits.cpp
#include &lt;i0stream.h&gt;
#include &lt;i0manip.h&gt;
#include &lt;stddef.h&gt;
#include &lt;limits.h&gt;
#include "bits.h"

main()
{
   const size_t SIZE = CHAR_BIT * sizeof(unsigned long);
   unsigned long n = 0x12345678;
   bits&lt;SIZE&gt; x(n), y(string("10110")), z(x);

   cout &lt;&lt; "Initial x: "&lt;&lt; x &lt;&lt; endl;
   cout &lt;&lt; "Initial y: "&lt;&lt; y &lt;&lt; endl;
   cout &lt;&lt; "Initial z: "&lt;&lt; z &lt;&lt; endl;
   cout &lt;&lt; "Enter new z: "/;
   cin &gt;&gt; z;
   cout &lt;&lt; "New z: "&lt;&lt; z &lt;&lt; endl;
   cout &lt;&lt; "z == "&lt;&lt; z.to_ulong() &lt;&lt; endl;
   cout &lt;&lt; "y ==" &lt;&lt; y.to_ushort() &lt;&lt; endl;
   cout &lt;&lt; "x ==" &lt;&lt; x.to_ulong() &lt;&lt; endl;

   cout &lt;&lt; "x: "&lt;&lt; x &lt;&lt;" (" &lt;&lt; x.count()
       &lt;&lt;" bits set)" &lt;&lt; endl;
   cout &lt;&lt; "x == 0x12345678L? "&lt;&lt; (x == 0x12345678L) &lt;&lt; endl;
   cout &lt;&lt; "x: "&lt;&lt; x &lt;&lt; endl;
   cout &lt;&lt; "x: "&lt;&lt; hex &lt;&lt; setfill('0')
       &lt;&lt; setw(sizeof(unsigned long)*2)
       &lt;&lt; x.to_ulong() &lt;&lt; dec &lt;&lt; endl;
   cout &lt;&lt; "x &lt;&lt;= 6 == " &lt;&lt; (x &lt;&lt;= 6) &lt;&lt; endl;
   cout &lt;&lt; "x &gt;&gt;= 6 == " &lt;&lt; (x &gt;&gt;= 6) &lt;&lt; endl;
   cout &lt;&lt; "85 ==" &lt;&lt; bits&lt;SIZE&gt;(85) &lt;&lt; endl;
   cout &lt;&lt; "x ^ 85 == " &lt;&lt; (x ^ 85) &lt;&lt; endl;
   cout &lt;&lt; "x &amp; 85 == " &lt;&lt; (x &amp; 85) &lt;&lt; endl;
   cout &lt;&lt; "85 &amp; x === " &lt;&lt; (85 &amp; x) &lt;&lt; endl;
   cout &lt;&lt; "~x == " &lt;&lt; (~x) &lt;&lt;" == "
       &lt;&lt; (~x).to_ulong() &lt;&lt; endl;

    y = 0x55555550L;
   cout &lt;&lt; "y: " &lt;&lt; y &lt;&lt; " (" &lt;&lt; y.count()
       &lt;&lt; " bits set)" &lt;&lt; endl;
   cout &lt;&lt; "y[0]: " &lt;&lt; hex &lt;&lt; setfill('0')
       &lt;&lt; setw(sizeof(unsigned long)*2)
       &lt;&lt; y.to_ulong() &lt;&lt; dec &lt;&lt; endl;
   cout &lt;&lt; "x &amp; y == " &lt;&lt; (x &amp; y) &lt;&lt; endl;
   cout &lt;&lt; "x | y == " &lt;&lt; (x I y) &lt;&lt; endl;
   cout &lt;&lt; "x ^ y == " &lt;&lt; (x ^ y) &lt;&lt; endl;
   cout &lt;&lt; "x != y? "&lt;&lt; (x != y) &lt;&lt; endl;
   return 0;
}

/* Sample Execution:
Initial x: 00010010001101000101011001111000
Initial y: 00000000000000000000000000010110
Initial z: 00010010001101000101011001111000
Enter new z: 101001000100001000001
New z: 00000000000101001000100001000001
z == 1345601
y == 22
x:== 305419896
x == 00010010001101000101011001111000 (13 bits set)
x == 0x12345678L? 1
x: 00010010001101000101011001111000
x: 12345678
x &lt;&lt;= 6 == 10001101000101011001111000000000
x &gt;&gt;= 6 == 00000010001101000101011001111000
85 == 00000000000000000000000001010101
x ^ 85 == 00000010001101000101011000101101
x &amp; 85 == 00000000000000000000000001010000
85 &amp; x === 00000000000000000000000001010000
~x == 11111101110010111010100110000111 == 4257982855
y: 01010101010101010101010101010000 (14 bits set)
y[0]: 55555550
x &amp; y == 00000000000101000101010001010000
x | y == 01010111011101010101011101111000
x ^ y == 01010111011000010000001100101000
x != y? 1

// End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>May 1992/Standard C/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5 (xdtento.c)</A></h4>
<pre>/* _Dtento function - IEEE 754 version */
#include &lt;errno.h&gt;
#include &lt;float.h&gt;
#include "xmath.h"

      /* macros */
#define NPOWS (sizeof pows / sizeof pows[0] - 1)
      /* static data */
static const double pows[] = {
   1e1, 1e2, 1e4, 1e8, 1e16, 1e32,
#if 0x100 &lt; _DBIAS   /* assume IEEE 754 8-byte */
   1e64, 1e128, 1e256,
#endif
   };
static const size_t npows = NPOWS;

static short dmul(double *px, double y)
   {  /* multiply y by *px with checking */
   short xexp;

   _Dunscale(&amp;xexp, px);
   *px *= y;
   return (_Dscale(px, xexp));
   }

double _Dtento(double x, short n)
   {  /* compute x * 10**n */
   double factor;
   short errx;
   size_t i;

   if (n == 0 || x == 0.0)
      return (x);
   factor = 1.0;
   if (n &lt; 0)
      {  /* scale down */
      unsigned int nu =&amp; -(unsigned int)n;

      for (i = 0; 0 &lt; nu &amp;&amp; i &lt; npows; nu &gt;&gt;= 1, ++i)
         if (nu &amp; 1)
            factor *= pows[i];
      errx = dmul(&amp;x, 1.0 / factor);
      if (errx &lt; 0 &amp;&amp; 0 &lt; nu)
         for (factor = 1.0 / pows[npows]; 0 &lt; nu; -nu)
            if (0 &lt;= (errx = dmul(&amp;x, factor)))
               break;
      }
   else if (0 &lt; n)
      {  /* scale up */
      for (i = 0; 0 &lt; n &amp;&amp; i &lt; npows; n &gt;&gt;= 1, ++i)
         if (n &amp; 1)
            factor *= pows[i];
      errx = dmul(&amp;x, factor);
      if (errx &lt; 0 &amp;&amp; 0 &lt; n)
         for (factor = pows[npows]; 0 &lt; n; -n)
            if (0 &lt;= (errx = dmul(&amp;x, factor)))
               break;
      }
   if (0 &lt;= errx)
      errno = ERANGE;
   return (x);
   }

/* End of File */</pre>

</BODY>
</HTML>

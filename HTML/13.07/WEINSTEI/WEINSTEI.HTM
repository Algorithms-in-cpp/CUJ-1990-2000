

<HTML>
<HEAD>

<TITLE>July 1995/On the Networks</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjul.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">On the Networks<A name="00F6_0099"><A name="00F6_0099"></font></h2><P>
<h3 align="center"><A name="00F6_0000"><A name="00F6_0000">S'kill is S'nice</h3><P>
<h3 align="center"><font color="#800000">Sydney S. Weinstein</font></h3><hr><blockquote><P>
<P><i><A name="00F6_0000"><A name="00F6_0000">Sydney S. Weinstein, CDP, CCP is a consultant, columnist, lecturer, author, professor, and President of Myxa Corporation, an Open Systems Technology company specializing in helping companies move to and work with Open Systems. He can be contacted care of Myxa Corporation, 3837 Byron Road, Huntingdon Valley, PA 19006-2320, or via electronic mail using the Internet/USENET mailbox syd@Myxa.com (dsinc!syd for those that cannot do Internet addressing).</i></P><P>
As the UNIX system evolves, keeping track of processes becomes a complex task, involving variants in operating system behavior and available tools. One program that tracks processes, and teaches how the different UNIX flavors deal with process management, is <I>skill</I> from Jeff Forys <I>&lt;jeff@forys.cranbury.nj.us&gt;</I> as published in Volume 28, Issues 87-89. <I>skill</I> will send signals or re-nice processes given any combination of user names, ttys, commands, and pids. <I>skill</I> is a single program; it determines which action to take by examining <I>argv[0]</I>, to see which name was used to invoke it.<P>
More interesting than the tool itself is all the information that comes with it, which tells how most modern versions of UNIX give user programs access to the process-table information. This posting even includes instructions for determining how other flavors of UNIX might give access and how to port this task to those flavors of UNIX.<P>
Covering more highlights from <I>comp.sources.unix</I>, work continues on a set of public reusable C functions that are not restricted by copyright. Lars Wirzenius <I>&lt;wirzeniu@cc.helsinki.fi&gt;</I> submitted <I>publib-</I>0.4 for Volume 28, Issues 104-107. <I>publib</I> is a library of reusable C functions. It consists of a build framework and library modules. The <I>framework</I> is the mechanism that actually compiles and installs the library. The <I>modules</I> are groups of library functions. The framework and modules have been separated &#151; partly to simplify the development and distribution of new library modules, partly to ease ports of the library to other systems. <I>publib</I> designates no "official" set of modules. The intent here is to encourage many parties to supply modules, so that the installer of the library can pick and choose between modules, and install only those of interest.<P>
To fill this new library, Wirzenius also contributed <I>liw-modules-0.4</I> for Volume 28, Issues 188-201. Included in this initial contribution:<P>
<UL><li><I>alloc</I> &#151; handles dynamic memory allocation</li>
<li><I>bitarr</I> &#151; implements a bit array</li>
<li><I>cmp</I> &#151; implements comparison functions for <I>qsort(3)</I>, <I>bsearch(3)</I>, and others having the same interface</li>
<li><I>expr</I> &#151; evaluates mathematical expressions given as strings</li>
<li><I>files</I> &#151; does various operations on files</li>
<li><I>fname</I> &#151; operates on UNIX/POSIX-style filenames</li>
<li><I>hash</I> &#151; implements a generic hashing table</li>
<li><I>iset</I> &#151; implements a set of long integers. <I>iset</I> is implemented as a linked list of ranges, which makes it more efficient if there are many dense parts in the set</li>
<li><I>log</I> &#151; implements a simple log file facility</li>
<li><I>sbuf</I> &#151; implements a text editor's editing buffer using a simple buffer gap data structure </li>
<li><I>stack</I> &#151; implements a generic stack</li>
<li><I>strutil</I> &#151; implements a number of more-or-less useful string and memory block operations</li></UL>
UNIX's <I>inetd</I> can make any program into a server by connecting its <I>stdin</I> and <I>stdout</I> to sockets for access over the network. Regular users often find it useful to perform this same action to connect two programs over the network, extending the pipe concept from a single host to a network. <I>netpipes-2.1</I> from Robert Forsman <I>&lt;thoth@cis.ufl.edu&gt;</I>provides this ability via two programs. <I>Faucet</I> is the server side. It listens on a port and forks processes for each connection. <I>Hose</I> is a one-shot program which connects a process to a server. The programs were contributed as Volume 28, Issue 205.<P>
<I>grep</I> can extract lines with specific text from a file, but is not very useful to, say, grab that line and the next ten. <I>head</I> and <I>tail</I> can deal with the start and end of a file, but nothing in UNIX can deal with the middle. Well, now <I>sect</I> from Joe Shmoe <I>&lt;joeshmoe@world.std.com&gt;</I> can. <I>sect</I> was contributed for Volume 28, Issue 209. It can cut a section out of a file (or standard input). Users can specify an absolute start and end range, or a start and number of lines. Also, an all-but-the-range (inverse) option is available. Now if we can only combine that with <I>grep</I>, to deal with when we don't know the starting line. Any takers?<P>
Lastly, <I>rel</I> is a program that determines the relevance of text documents to a set of keywords expressed in boolean infix notation. Submitted by John Conover <I>&lt;john@johncon.com&gt;</I> for Volume 28, Issue 212, it prints the list of file names that are relevant in order of their relevance. <I>rel</I> will help reduce text searches to likely files and will work both interactively and within servers and daemons.<P>
<h4><FONT COLOR="#000080"><A name="00F6_009A">Making it with <B><I>jam</I><A name="00F6_009A"></B></FONT></h4></P>
A new release of <I>jam</I>, a make-like program, appeared in Volume 47, Issues 108-114 of <I>comp.sources.misc. jam</I> recursively builds target files from their source files, using two files to define the dependency graph and the updating actions for all targets. The system-wide file <I>Jambase</I> defines the rules, and the file <I>Jamfile</I> lists the targets and sources in terms of those rules. <I>jam</I> does not need to rely on suffix-driven implicit rules or directory contents. <I>jam</I> provides a <I>Jambase</I> file; you supply the <I>Jamfile</I>.<P>
The author lists the advantages of Jam as follows:<P>
<UL><li><I>jam </I>is a make(1) replacement that makes building simple things simple and building complicated things manageable.</li>
<li><I>jam'</I>s language is expressive, making Jamfiles (c.f. Makefiles) compact. <I>jam</I> handles header file dependencies automatically and on-the-fly.</li>
<li><I>jam</I> is very portable: it runs on UNIX, VMS, and NT. Most Jamfiles themselves are portable, leaving the specific system dependencies to the <I>Jambase</I> file.</li>
<li><I>jam</I> is unintrusive: it is small, it has negligible CPU overhead, and it doesn't create any of its own funny files.</li>
<li><I>jam</I> can build large projects spread across many directories in one pass, without recursing, tracking the relationships among all files. (See the paper that accompanies the posting.) On UNIX, <I>jam</I> can do this with multiple, concurrent processes.</li></UL>
On the patch front, patches were received for <I>dist-3.0</I> from 58-60 and 96-97. These patches add new configuration modules and update the portability of some of the others. <I>dist</I> is a program that produces an automatic configuration file to adapt programs to different operating systems.<P>
<I>ecu</I>, the Extended Call UNIX utility from Warren Tucker <I>&lt;wht@n4hgf.atl.ga.us&gt;</I> received patch 3 in Voume 47, Issues 67-70. Patch 3 adds several bug fixes especially pertinent to RTS/CTS problems and the drivers.<P>
<h4><FONT COLOR="#000080"><A name="00F6_009B">CD still popular in X<A name="00F6_009B"></FONT></h4></P>
With all the talk about new formats, CDs are still popular. So much so that people are still trying to use their CD-ROM drives to play audio CDs. Well, Ti Kan <I>&lt;ti@bazooka.amb.org&gt;</I> submitted <I>xcmd_1.2</I> for Volume 22, Issues 142-159 of <I>comp.sources.x.</I> This new version includes <I>xcmd,</I> the X11/Motif-based CD player utility, and <I>cda</I>, the command-line driven non-graphical version. Supported features in this release:<P>
<UL><li>Standard functions: Stop, Play, Pause, Next/Previous Track, Next/Previous Index, Fast forward/rewind with audio sample, Eject, and On/off</li>
<li>Direct track access keypad</li>
<li>Volume control</li>
<li>Track/Index/Time display: selectable to display elapsed time, remaining track time, or remaining disc time</li>
<li>Status display: for current play status, A-&gt;B mode, program mode, CD database</li>
<li>Shuffle (random) play function</li>
<li>Repeat function</li>
<li>Sample function: plays a few seconds of each track</li>
<li>A-&gt;B function: repeats from selectable point A and B</li>
<li>Eject inhibit function: to prevent someone from ejecting the disc by pressing the button on the drive</li>
<li>Track Program function: plays tracks in custom order</li>
<li>CD database function: allows you to store CD title/track titles in database, and associate each disc with a play program. Displays the current playing disc title/track information. In addition, you can enter and display arbitrary text associated with the disc or each track, such as band information, lyrics, etc.</li>
<li>CD database entry send: contributes CD database entries to a central archive via Internet electronic mail</li>
<li>Main window button face labels: these can be configured to display pictorial symbols, or text with hotkey mnemonics</li>
<li>Keyboard operation, with full support for keyboard traversal and hotkeys</li>
<li>Customizable labels and messages: customized to non-English languages via X resources in the <I>.Xdefaults</I> file</li>
<li>User-Customizable colors and many other customizable functions using X resource settings</li>
<li>On-line help information</li>
<li>Attractive, intuitive Motif user interface</li>
<li>Device-specific configuration files to make <I>xmcd</I> adaptible to various brands of CD-ROM drives</li></UL>
Changes since the last release include support for more drive types and operating systems, creation of <I>cda</I>, the addition of play-on-load and eject-on-done attributes if desired, and a general reduction in window size footprint to conserve screen space.<P>
An extension server to convert the X protocol to PostScript for printing was contributed for Volume 22, Issues 97-99 by Matthew Reynolds <I>&lt;mreynold@qualcomm.com&gt;. xpserv</I> implements a printing model for X. <I>xpserv</I> is created as an extension to the X protocol using a second display. When you connect to the X server, use the extension to specify which window to print, send the Xlib calls to the server, close the window, and it outputs a PostScript file for printing.<P>
A new release of <I>xcb</I> was issued by Farrell McKay <I>&lt;fbm@newt.phys.unsw.edu.au&gt;</I> for Volume 22 Issue 101. <I>xcb</I> provides a set of cut and paste buffers for your clipboard, allowing several pieces of text to be saved in the cut buffer and each retrieved separately. The new version fixes some minor bugs involving form widgits and multi-row resources and adds also some minor new features.<P>
Gregg Hanna <I>&lt;gregor@kafka.saic.com&gt;</I> contributed a package, <I>fontcvt</I>, to manipulate X11 font specification strings for Volume 22, Issue 102. At the highest level, <I>fontcvt</I> provides a replacement font resource converter for Motif that doesn't give up so easily when it can't find a font. The resource converter instead relaxes the font specification until a good match is found. It's easy to install this converter in a Motif program.<P>
A drawing utility for LaTeX \picture environments was released as <I>xtexcad </I>by Johannes Sixt <I>&lt;Johannes.Sixt@risc.uni-linz.ac.at&gt;</I> for Volume 22, Issues 103-107. <I>XTeXcad</I> reads and writes LaTeX \picture environments. The difficulty with LaTe X\pictures is that they only support a restricted set of slopes for lines and vectors and only a few diameters for circles. <I>XTeXcad</I> restricts the user to these during drawing. Besides lines and vectors, <I>XTeXcad</I> can also draw frames (solid and dashed), beziers, rectangles, and texts.<P>
On the patch front, patch 10 was issued to <I>xarchie</I> in Volume 22, Issue 121. <I>xarchie</I> is an X front end to the archie anonymous FTP database. This patch fixes up some bugs and releases the latest list of archie servers. It was contributed by George Ferguson <I>&lt;ferguson@cs.rochester.edu&gt;.</I><P>
</BLOCKQUOTE>
</BODY>
</HTML>

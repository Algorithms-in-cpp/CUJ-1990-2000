<HTML><HEAD>
<TITLE>July 1995/A Simple, Easy AutoQueue Class/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4 AQMSG.CPP &#151; <I>Implementation of</I> AutoQueueMessage</A></h4>
<pre>#include "AQMSG.HPP"
#include &lt;iomanip.h&gt;

// ----- FindByNumber -----
AutoQueueMessage* AutoQueueMessage::FindByNumber(const int Number)
{ if(IsLinked())                      // If this is a queued instance...
  { AutoQueueMessage* Tmp = (AutoQueueMessage*)GetFirstNode();
    while(Tmp)                       // While there are nodes...
    { if(Tmp-&gt;Number_ == Number)     // If this is a match
        return Tmp;                 // return its address,
      Tmp = (AutoQueueMessage*)Tmp-&gt;GetNextNode(); // else, get next instance.
    }
  }
  else                               // This is not a queued instance.
  { if(Number_ == Number)            // If this matches
      return this;                  // return its address,
  }
  return 0;                          // otherwise return 0.
}

// ----- List -----
// This method displays the contents of the list for which the current
// instance is a member.
void AutoQueueMessage::List()
{ if(IsLinked())                     // If this is a linked instance...
  { AutoQueueMessage* Tmp = (AutoQueueMessage*)GetFirstNode();
    while(Tmp)                      // As long as there are nodes...
    {                               // display instance data.
      cout &lt;&lt; setw(4) &lt;&lt; Tmp-&gt;Number_ &lt;&lt;" \"" &lt;&lt; Tmp-&gt;Text_ &lt;&lt; "\"" &lt;&lt; endl;
      Tmp = (AutoQueueMessage*)Tmp-&gt;GetNextNode(); // Next Instance...
    }
  }
  else
  { // Output a single line for the stand alone instance.
    cout &lt;&lt; setw(4) &lt;&lt; Number_ &lt;&lt;" \"" &lt;&lt; Text_ &lt;&lt; "\"" &lt;&lt; endl;
  }
}
// end file AQMSG.CPP
</pre>
</BODY>
</HTML>

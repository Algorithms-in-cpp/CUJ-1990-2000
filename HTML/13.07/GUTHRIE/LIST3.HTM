<HTML><HEAD>
<TITLE>July 1995/A Simple, Easy AutoQueue Class/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 AQMSG.HPP &#151; <I>Defines class </I>AutoQueueMessage, <I>derived from</I> AutoQueue</A></h4>
<pre>#ifndef __AQMSG_HPP
#define __AQMSG_HPP
#include &lt;cstring.h&gt;         // Borland 4.02 string class definition.
#include "AUTOQ.HPP"         // Include base class definitions.

// ===== AutoQueueMessage Class   (Derived from AutoQueue) =====
class AutoQueueMessage : public AutoQueue
{
  public:
    // ----- Constructors / Destructor -----
    // Constructor used to create a Non-Linked AutoQueueMessage entry.
    // Data Items 'Number_' and 'Text_' are initialized.
    AutoQueueMessage(int Number, string&amp; Text): AutoQueue(),
                  Number_(Number), Text_(Text) { }

    // Constructor used to create the AutoQueueMessage entry.
    // Data Items 'Number_' and 'Text_' are initialized.
    AutoQueueMessage(AutoQueueMessage** QHead, int Number, string&amp; Text):
          AutoQueue((AutoQueue**)QHead), Number_(Number), Text_(Text) { }

    ~AutoQueueMessage() { }

    // Specialized copy type constructor.
    // Copies an AutoQueueMessage instance to a stand alone instance.
    // Source can be a stand alone instance or a member of a list.
    AutoQueueMessage(const AutoQueueMessage* Source):
          AutoQueue(), Number_(Source-&gt;Number_), Text_(Source-&gt;Text_) { }

    // Specialized copy type constructor.
    // Copies an AutoQueueMessage instance to a specified list.
    // Source can be a stand alone instance or a member of a list.
    AutoQueueMessage(AutoQueueMessage** QHead, const AutoQueueMessage* Source):
         AutoQueue((AutoQueue**)QHead), Number_(Source-&gt;Number_),
                  Text_(Source-&gt;Text_) { }

    void List();    // List all elements in the list.

    // Find an instance in the list that matches the integer 'Match'.
    AutoQueueMessage* FindByNumber(const int Match);

  private:
    // Prohibit these default methods. (Do not define these functions)
    AutoQueueMessage();
    AutoQueueMessage(const AutoQueueMessage&amp; rhs);
    AutoQueueMessage&amp; operator=(const AutoQueueMessage&amp; rhs);

  protected:
    int Number_;      // AutoQueueMessage data value.
    string Text_;     // AutoQueueMessage data value.
};
#endif
// end file AQMSG.HPP
</pre>
</BODY>
</HTML>

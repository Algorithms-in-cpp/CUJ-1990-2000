

<HTML>
<HEAD>

<TITLE>July 1995/CUG New Releases</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjul.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">CUG New Releases<A name="00F8_009B"><A name="00F8_009B"></font></h2><P>
<h3 align="center"><A name="00F8_0000"><A name="00F8_0000">m68kdis</h3><P>
<h3 align="center"><font color="#800000">Victor R. Volkman</font></h3><hr><blockquote><P>
<P><i><A name="00F8_0000"><A name="00F8_0000">Victor R. Volkman received a BS in Computer Science from Michigan Technological University. He has been a frequent contributor to C/C++ Users Journal since 1987. He is currently employed as Senior Analyst at H.C.I.A. of Ann Arbor, Michigan. He can be reached by dial-in at the HAL 9000 BBS (313) 663-4173 or by Usenet mail to sysop@phal 9k.com.</i></P><P>
<h4><FONT COLOR="#000080"><A name="00F8_009C">CUG #430: m68kdis Motorola 68000 Family Disassembler<A name="00F8_009C"></FONT></h4></P>
Christopher G. Phillips (University of Texas at Austin) submits his m68kdis disassembler for the Motorola 68000 family of CPU chips. Disassemblers are system software packages that accept a binary executable as input and produce assembly language source as output. Specifically, m68kdis supports the full instruction sets of the 68000, 68008, 68010, 68020, and 68030 CPU chips. Additionally, m68kdis decodes instructions for the 68851 Paged Memory Unit and the 68881/68882 Floating-Point Coprocessors. The Motorola 68000 family chips power millions of computers, including the Macintosh, Atari, Amiga, and many embedded CPUs in industrial applications. The CUG Library edition of m68kdis includes full source in C (no executables are provided). The m68kdis disassembler is immediately available as CUG volume #430. (For a list of related CUG products see the <a href="sidebar1.htm">sidebar</a>.)<P>
Since m68kdis is portable, it is actually a cross-disassembler. For example, you can disassemble 68000 programs on a variety of host CPUs, from PCs to UNIX machines. Phillips provides a very clean makefile without any OS-specific flags or options. Additionally, he takes care to avoid common pitfalls such as dependencies on the size of the <I>int</I> data type.<P>
<h4><FONT COLOR="#000080"><A name="00F8_009D">Using m68kdis<A name="00F8_009D"></FONT></h4></P>
In its basic operation, m68kdis reads in a single binary file (<I>.o</I>) and produces an ASCII file containing an assembly language output (<I>.s</I>). Ideally, you could then run the <I>.s</I> file through your assembler and it would produce an <I>.o</I> file identical to the original. Strictly speaking, a disassembler is just a subset of the functionality found in a debugger. The output of m68kdis is divided into five distinct columns: program counter, file contents, label, instruction, and operands (see <A href="fig1.htm">Figure 1</a>)
.<P>
Programmers often use disassemblers in two specific modes of operation. First, a one-shot run can check the operation of a compiler, the validity of an executable, the executable startup code, or perform a similar examination. Second, the programmer may use a sophisticated disassembler such as m68kdis in several successive iterations. In this cycle, the programmer uses his own judgement to help separate blocks of instructions from blocks of data. Then he applies his knowledge or guesswork so that the next iteration provides clearer output. With persistence, a usable source file can result.<P>
m68kdis supports this iterative method by providing options (see <A href="tab1.htm">Table 1</a>)
 for the import of separate files containing external knowledge of the input file. For example, the <I>-i file</I> option causes m68kdis to read an ASCII file containing addresses at which instructions are known to start. Similarly, you can create files of addresses where data is known to reside. (A small improvement to m68kdis would allow ranges of addresses instead of just singleton addresses in the file.)<P>
<h4><FONT COLOR="#000080"><A name="00F8_009E">Macintosh Support<A name="00F8_009E"></FONT></h4></P>
Although m68kdis works equally well against any target 68000 executable, the author includes special additional support for Macintosh executables. m68kdis understands enough of the executable to follow the resource fork and dump it in a readable fashion. This insures more reliable output because determining the difference between instructions and data is the prime job of a disassembler.<P>
m68kdis supplies files containing Macintosh A-line instructions and their OS equivalent entry point names. More than 800 A-line instructions can be decoded in this manner. These entry points are somewhat analogous to BIOS interrupt (INT) instructions used on Intel-based MS-DOS PCs.<P>
This volume also includes a series of Perl scripts, which perform post-processing on the disassembler output. (Perl is <I>not</I> included in the CUG Library distribution, but is widely available on the Internet.)<P>
<h4><FONT COLOR="#000080"><A name="00F8_009F">Documentation, Licensing, and Support<A name="00F8_009F"></FONT></h4></P>
Documentation for m68kdis consists primarily of a five-page summary that appears in UNIX "man" page format. As such, the documentation primarily details command-line options and usage. For insights into disassembly algorithms, you'll need to follow the comments in the code. For details on the 68000 family instructions sets, please see the section named "Further Reading" below.<P>
Phillips includes an extremely generous license that extends the permission to use, copy, modify, and distribute this software and its documentation for any purpose and without fee. His only restriction is that his supplied copyright notice appear in all copies of software and that both the copyright notice and the permission notice appear in supporting documentation.<P>
Since m68kdis is freeware, there are no formal support options available. Support is thus necessarily limited to email correspondence regarding bugs and enhancement requests. You can contact Chris at <I>Christopher_Phillips@pe.utexas.edu.</I><P>
<h4><FONT COLOR="#000080"><A name="00F8_00A0">For Further Reading<A name="00F8_00A0"></FONT></h4></P>
For those interested in how 68000 family instructions are encoded, Prentice-Hall (Englewood Cliffs, NJ) publishes a complete line of databooks. Here are some of the titles that Phillips cites:<P>
Motorola. <I>M68000 8/16/32 Bit Microprocessors: Programmer's Reference Manual</I>, 5th Edition.<P>
Motorola. <I>M68030: Enhanced 32-Bit Microprocessor User's Manual</I>, 2nd Edition.<P>
Motorola. <I>M68851: Paged Memory Management Unit User's Manual</I>, 2nd Edition.<P>
Motorola. <I>M68881/MC68882: Floating-Point Coprocessor User's Manual</I>, 2nd Edition.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

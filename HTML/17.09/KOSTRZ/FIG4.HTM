<HTML><HEAD>
<TITLE>September 1999/STL-Style Iterators for MFC/Figure 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 4: Example of forward iterator operations using CMap iterator</A></h4>
<pre>
CMap&lt;int*, int*, CString, CString&gt; mp;
const CMap&lt;int*, int*, CString, CString&gt; &amp;cmp = mp;

// default construction and copy construction
mfciter::cmap&lt;int*, CString&gt;::iterator ii;
mfciter::cmap&lt;int*, CString&gt;::const_iterator cii;
mfciter::cmap&lt;int*, CString&gt;::iterator cpy(mfciter::begin(mp));

// assignment (can assign an iterator of a mutable sequence to 
// an iterator of a const sequence, but not vice-versa)
ii = mfciter::begin(mp);
cii = mfciter::begin(cmp);
cii = ii;

// movement (through pre and post increment)
++ii;
cii++;

// comparison (can compare iterators and const_iterators)
bool done;
done = ii == mfciter::end(mp);
done = cii == mfciter::end(cmp);
if (ii == cii)
   std::cout &lt;&lt; "both ii and cii refer to the same place";

// value querying
int *p;
CString s;
p = ii-&gt;first;
s = ii-&gt;second;
p = (*cii).first;
s = (*cii).second;

// value modification (only through the second field for an 
// iterator on mutable sequences)
ii-&gt;second = "new value";


</pre>
</BODY>
</HTML>

<HTML><TITLE><HEAD>August 1995/Fixed-Point C for Graphics Applications/Sidebar</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h3 align="center"><FONT FACE="Garamond" COLOR="#000080">Precision/Data Loss</FONT></h3><hr>
<BLOCKQUOTE>
Using fixed-point arithmetic can result in data loss due to overflow. Checking for overflow can seriously reduce the speed increase achieved through the use of fixed-point.<P>
Addition and subtraction are generally safe. Assume a fixed-point number of <I>N</I> bits (integer and fractional part). If the largest possible number is added to itself, the computation is represented by the following equation:<P>
<pre>( 2<SUP>N</SUP> - 1 )+(2<SUP>N</SUP> - 1 )= 2*2<SUP>N</SUP> - 2 = 2<SUP>N+1</SUP> - 2</pre>
<I>2<SUP>N+1</SUP> - 2</I> can be represented in <I>N + 1</I> bits. If the range of values to be represented can fit in seven or fifteen bits, then addition will never overflow the data type being used. Otherwise, as in the angle representation example discussed in the body of the article, the range can be scaled to fit into 16 bits, so that the nature of the values represented allows overflow to be ignored.<P>
Multiplication requires some care. The algorithm used for multiplication computes an intermediate value which can be equal to the largest representable number squared. This multiplication is represented by this equation:<P>
<pre>(2<SUP>N</SUP> - 1)(2<SUP>N</SUP> - 1 )= 2<SUP>2N</SUP>- 2*2<SUP>N</SUP> + 1 = 2<SUP>2N</SUP>-2<SUP>N + 1</SUP> + 1</pre>
This number requires <I>2N</I> bits to be represented. If the fixed-point value is close to 16 bits, the intermediate value will require 32. An 8-bit fixed-point multiplication will require a 16-bit intermediate value. If the fixed-point number is represented with more than 16 bits, a special integer multiplication routine may be needed to compute the &gt;32-bit result.<P>
Division has the same caveats as multiplication, since the first value is left-shifted <I>N</I> bits before the division. The same rules about size apply.<P>
The practical application of fixed-point arithmetic requires an understanding of the usage model of the fixed-point numbers. The best technique is to find a range of values that can be represented by an 8- or 16-bit data type and ensure that values stay within that range. Fixed-point numbers can then simply be cast to the next larger data type at the start of the multiplication and division routines.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

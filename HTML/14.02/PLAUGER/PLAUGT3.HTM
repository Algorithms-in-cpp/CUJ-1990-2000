






<HTML>
     
     <HEAD>


          
          <TITLE>February 1996/Standard C/C++: Iterators/Table 3</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          
          <H4>Table 3: Forward Iterator Properties<BR>
          </H4>
          
          <TABLE WIDTH="75%" BORDER="1">
               <TR><TH WIDTH="123">Expression</TH>
                    <TH WIDTH="123">Result Type</TH>
                    <TH WIDTH="123">Meaning</TH>
                    <TH WIDTH="203">Notes</TH>
               </TR>
               <TR><TD WIDTH="123">X()</TD>
                    <TD WIDTH="123">X</TD>
                    <TD WIDTH="123">constructs a default value</TD>
                    <TD WIDTH="203">destructor is visible<BR>
                     value may be singular</TD>
               </TR>
               <TR><TD WIDTH="123">X u</TD>
                    <TD WIDTH="123">X&amp;</TD>
                    <TD WIDTH="123">u has default value</TD>
                    <TD WIDTH="203">-</TD>
               </TR>
               <TR><TD WIDTH="123">X(a)</TD>
                    <TD WIDTH="123">X</TD>
                    <TD WIDTH="123">constructs a copy of a</TD>
                    <TD WIDTH="203">destructor is visible<br>
                                    X(a) = = a</TD>
               </TR>
               <TR><TD WIDTH="123">X u(a)<br>
                                   X u = a</TD>
                    <TD WIDTH="123">X&amp;</TD>
                    <TD WIDTH="123">X u; u = a</TD>
                    <TD WIDTH="203"> once constructed, u == a</TD>
             
               </TR>
               <TR><TD WIDTH="123">r = a</TD>
                    <TD WIDTH="123">X&amp;</TD>
                    <TD WIDTH="123">assigns a to r</TD>
                    <TD WIDTH="203">result: r = = a</TD>
               </TR>
               <TR><TD WIDTH="123">a = = b</TD>
                    <TD WIDTH="123">convertible to bool</TD>
                    <TD WIDTH="123">compare for equivalence</TD>
                    <TD WIDTH="203">a and b in same domain of values</TD>
               </TR>
               <TR><TD WIDTH="123">a != b</TD>
                    <TD WIDTH="123">convertible to bool</TD>
                    <TD WIDTH="123">!(a = = b)</TD>
                    <TD WIDTH="203">-</TD>
               </TR>
               <TR><TD WIDTH="123">*a</TD>
                    <TD WIDTH="123">T&amp;</TD>
                    <TD WIDTH="123">access element from sequence</TD>
                    <TD WIDTH="203">a was not "off the end" <BR>
                     a = = b implies *a = = *b</TD>
               </TR>
               <TR><TD WIDTH="123">*a = t</TD>
                    <TD WIDTH="123">T&amp;</TD>
                    <TD WIDTH="123">store in element</TD>
                    <TD WIDTH="203">a was not "off the end" <BR>
                     X is mutable</TD>
               </TR>

               <TR><TD WIDTH="123">a-&gt;m</TD>
                    <TD WIDTH="123">type of m</TD>
                    <TD WIDTH="123">(*a).m</TD>
                    <TD WIDTH="203">a has member m</TD>
               </TR>
               <TR><TD WIDTH="123">++r</TD>
                    <TD WIDTH="123">X&amp;</TD>
                    <TD WIDTH="123">point to next element</TD>
                    <TD WIDTH="203">r was not "off the end"<BR>
                     &amp;r = = &amp;++r<BR>
                     r = = s implies ++r = = ++s</TD>
               </TR>
               <TR><TD WIDTH="123">r++</TD>
                    <TD WIDTH="123">convertible to const X&amp;</TD>
                    <TD WIDTH="123">
<pre>{X tmp = r;
++r;
return tmp; }</pre></TD>
                    <TD WIDTH="203">-</TD>
               </TR>
               <TR><TD WIDTH="123">*r++</TD>
                    <TD WIDTH="123">T&amp;</TD>
                    <TD WIDTH="123">
<pre>{ T tmp = *r;
++r;
return tmp;}</pre></TD>
                    <TD WIDTH="203">-</TD>
               </TR>
          </TABLE>
          
          <P></P>
          
          <P><BR>
                Notes: X is iterator type, a and b have type X, r and s have
               type X&amp;<BR>
                T is element type, t has type T </P>
     </BODY>
</HTML>





<HTML><HEAD>

<TITLE>November 1996/A Class for Representing Large Integers/Listing 2</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 2:	Addition and Subtraction routine</h4>

<pre>

//add 2 BigNums
BigNum  BigNum::operator+(const BigNum &amp;b){
 if (positive){
  if (b.positive){
     if (exp &lt; b.exp) return (b + *this);
     else{
        BigNum a;
        a.exp = exp + 1;
        delete[] a.x; a.x = new int[a.exp+1];
        a.positive = 1; a.x[a.exp]=0;
        long carry=0; long temp;
        for (int i=0;i&lt;=b.exp;i++){
          temp =
            long(x[i])+long(b.x[i])+carry;
          a.x[i] = temp % BASE;
          carry = temp/BASE;
        }
        for(i=b.exp+1;i&lt;=exp;i++){
          temp = x[i] + carry;
          a.x[i] = temp % BASE;
          carry = temp/BASE;
        }
        if (!a.x[a.exp]) a.exp--;
        return a;
     }
  //a pos &amp; b neg
  }else return (*this - (-b));
 }else{
      if (b.positive)
        return (b - (-*this)); //a neg
      else
        //a neg &amp; b neg
        return (- (-*this) + (-b));
 }
}

//subtract a BigNum from another BigNum
BigNum BigNum::operator-(const BigNum &amp;b){
  if (positive){
     if (b.positive){
      if (*this&lt;b) return(-(b-*this));
      BigNum a; a.exp = exp;
      delete[] a.x; a.x = NULL;
      a.x = new int[a.exp+1];
      a.positive = 1; a.x[a.exp]=0;
      for (int i=0;i&lt;=exp;i++) a.x[i]=x[i];
      for(i=0;i&lt;=b.exp;i++){
         long temp = a.x[i] - b.x[i];
         if (temp &lt; 0){
           a.x[i+1]-=1;
           temp+=BASE;
         }
         a.x[i] = temp;
      }
      i = b.exp+1;
      while(a.x[i]&lt;0){
        a.x[i++]+=BASE;a.x[i]-=1;
      }
      while(!a.x[a.exp] &amp;&amp; a.exp) a.exp--;
      return a;
     }else
       //a pos &amp; b neg
       return (*this + (-b));
  }else{  //a negative
     if (b.positive)return (-(b + (-*this)));
     else return(b-*this);
  }
}
//End of File
</pre>
</body></html>

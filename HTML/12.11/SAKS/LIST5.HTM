<HTML><HEAD>
<TITLE>November 1994/Stepping Up To C++/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5 <I>Macro definitions for instantiating a queue of </I>T<I> (not a wrapper)</A></I></h4>
<pre>//
// queue8.h - generic queue (not a wrapper)
// with an iterator class
//

#include "generic.h"

#define queue(T) name2(T, _queue)

//
// queuedeclare
//
#define queuedeclare(T) \
class queue(T) \
   { \
private: \
   struct cell \
      { \
      cell(const T &amp;e, cell *p); \
      cell *next; \
      T element; \
      }; \
   cell *first, *last; \
public: \
   queue(T)(); \
   ~queue(T)(); \
   void append(const T &amp;e); \
   void clear(); \
   int remove(T &amp;e); \
   class iterator; \
   friend class iterator; \
   class iterator \
      { \
   public: \
      iterator(queue(T) &amp;q); \
      T *next(); \
   private: \
      cell *pc; \
      }; \
   }; \
\
inline queue(T)::cell::cell(const T &amp;e, cell *p) \
   : element(e), next(p) \
   { \
   } \
\
inline queue(T)::iterator::iterator(queue(T) &amp;q) \
   : pc(q.first) \
   { \
   } \
\
inline queue(T)::queue(T)() : first(0), last(0) \
   { \
   } \
\
inline queue(T)::~queue(T)() \
   { \
   clear(); \
   }
   
//
// queueimplement
//
#define queueimplement(T) \
void queue(T)::append(const T &amp;e) \
   { \
   cell *p = new cell(e, 0); \
   if (first == 0) \
      first = p; \
   else \
      last-&gt;next = p; \
   last = p; \
   } \
\
T *queue(T)::iterator::next() \
   { \
   T *pt =0 ; \
   if (pc != 0) \
      { \
      pt = &amp;pc-&gt;element; \
      pc = pc-&gt;next; \
      } \
   return pt; \
   } \
\
void queue(T)::clear() \
   { \
   cell *p; \
   while (first != 0) \
      { \
      p = first; \
      first = first-&gt;next; \
      delete p; \
      } \
   } \
\
int queue(T)::remove(T &amp;e) \
   { \
   if (first == 0)\
      return 0; \
   cell *p = first; \
   if ((first = first-&gt;next) == 0) \
      last = 0; \
   e = p-&gt;element; \
   delete p; \
   return 1; \
   }

/* End of File */</pre>

</BODY>
</HTML>

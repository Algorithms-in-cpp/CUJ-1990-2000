<HTML><HEAD>
<TITLE>November 1992/Standard C/Listing 8</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 8 <B></B>stroll.c</A></h4>
<pre>#include "xstrxfrm.h"

      /* type definitions */
typedef struct {
   char buf[32];
   const unsigned char *s1, *s2, *sout;
   _Cosave state;
   } Sctl;

static size_t getxfrm(Sctl *p)
   {  /*  get transformed chars */
   size_t i;

   do  {   /* loop until chars delivered */
      p-&gt;sout = (const unsigned char *)p-&gt;buf;
      i = _Strxfrm(p-&gt;buf, &amp;p-&gt;s1, sizeof (p-&gt;buf),
         &amp;p-&gt;state);
      if (0 &lt; i &amp;&amp; p-&gt;buf[i - 1] == '\0')
         return (i - 1);
      else if (*p-&gt;s1 == '\0')
         p-&gt;s1 = p-&gt;s2;  /* rescan */
      } while (i == 0);
   return (i);
   }

int (strcoll)(const char *s1, const char *s2)
   {   /* compare s1[], s2[] using locale-dependent rule */
   size_t n1, n2;
   Sctl st1, st2;
   static const _Cosave initial = {0};

   st1.s1 = (const unsigned char *)s1;
   st1.s2 = (const unsigned char *)s1;
   st1.state = initial;
   st2.s1 = (const unsigned char *)s2;
   st2.s2 = (const unsigned char *)s2;
   st2.state = initial;
   for (n1 = n2 = 0; ; )
      {   /* compare transformed chars */
      int ans;
      size_t n;

      if (n1 == 0)
         n1 = getxfrm(&amp;st1);
      if (n2 == 0)
         n2 = getxfrm(&amp;st2);
      n = n1 &lt; n2 ? n1 : n2;
      if (n == 0)
         return (n1 == n2 ? 0 : 0 &lt; n2 ? -1 : +1);
      else if ((ans = memcmp(st1.sout, st2.sout, n)) != 0)
         return (ans);
      st1.sout += n, n1 -= n;
      st2.sout += n, n2 -= n;
      }
   }
/* End of File */
</pre>
</BODY>
</HTML>

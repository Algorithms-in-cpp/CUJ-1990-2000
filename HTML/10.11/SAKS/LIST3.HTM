<HTML><HEAD>
<TITLE>November 1992/Stepping Up To C++/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <B></B>fa1.cpp <B></B>&#151; <B><I></B>a dynamic array of </I><B></B>float</A></h4>
<pre>include "fa1.h"
#include &lt;assert.h&gt;

float_array::float_array(size_t n)
   {
   if ((len = n) == 0)
      array = 0;
   else
      {
      array = new float[n];
      assert(array != 0);
      for (int i = 0; i &lt; n; ++i)
         array[i] = 0;
      }
   }

float_array::float_array (const float_array &amp;fa)
   {
   if ((len = fa.len) == 0)
      array = 0;
   else
      {
      array = new float[len];
      assert(array != 0);
      for (int i = 0; i &lt; len; ++i)
         array[i] = fa.array[i];
      }
   }

float_array::~float_array()
   {
   delete [] array;
   }

float_array &amp;float_array::operator= (const float_array &amp;fa)
   {
   if (this == &amp;fa)
      return *this;
   if (len != fa.len)
      {
      delete [] array;
      if ((len = fa.len) == 0)
         array = 0;
      else
         {
         array = new float[len];
         assert(array != 0);
         }
      }
   for (size_t i = 0; i &lt; len; ++i)
      array[i] = fa.array[i];
   return *this;
   }

float &amp;float_array::operator[] (size_t i)
   {
   assert(i &lt; len);
   return array[i];
   }

ostream &amp;operator&lt;&lt;(ostream &amp;os, float_array &amp;fa)
   {
   os &lt;&lt; '{';
   size_t i;
   for (i = 0; i &lt; fa.length(); ++i)
      os &lt;&lt; ' ' &lt;&lt; fa[i];
   return  os &lt;&lt; " }";
   }
/* End of File */
</pre>
</BODY>
</HTML>

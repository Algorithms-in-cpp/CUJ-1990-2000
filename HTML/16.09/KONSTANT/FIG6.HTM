<HTML><HEAD>
<TITLE>September 1998/Advanced Serial Port Communication Under Win32/Figure 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 6: The monitoring thread function</A></h4>

<pre>
UINT CPort::PortFunc(PVOID pv){
    CPort* pPort = (CPort*) pv;
    OVERLAPPED ol ;
    DWORD      dwMask, dwTransfer;

    memset(&amp;ol,0,sizeof(OVERLAPPED));
    if ((ol.hEvent = CreateEvent(0,TRUE,FALSE,0)) == NULL){
        pPort-&gt;Err("CreateEvent");
        return 1;
    }

    while (pPort-&gt;_pData-&gt;_bGoOn){

        dwMask = 0 ;
        if (!WaitCommEvent(pPort-&gt;_pData-&gt;_hPort,&amp;dwMask,&amp;ol) &amp;&amp;
                ERROR_IO_PENDING == GetLastError()){
            GetOverlappedResult(pPort-&gt;_pData-&gt;_hPort, &amp;ol,
                                &amp;dwTransfer, TRUE);
            ol.Offset += dwTransfer ;
        };

        if ((dwMask &amp; EV_RXCHAR) == EV_RXCHAR ){
            ResetEvent(pPort-&gt;_pData-&gt;_hEvNot);
            ((CWnd*)pPort-&gt;_pData-&gt;_pWnd)-&gt;
                PostMessage(WM_SERIAL_PORT, (WPARAM)pPort,
                            (LPARAM)EV_RXCHAR);
            WaitForSingleObject(pPort-&gt;_pData-&gt;_hEvNot,
                                INFINITE);
        };

    };
    
    CloseHandle(ol.hEvent);
    
    return 0;
};
</pre>
</BODY>
</HTML>

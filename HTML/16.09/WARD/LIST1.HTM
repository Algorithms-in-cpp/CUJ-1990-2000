<HTML><HEAD>
<TITLE>September 1998/Applying Stream Encryption/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: The Cryptor class definition</A></h4>

<pre>
//*****************************************
// Copyright (c) 1998 by Warren Ward.
// Permission is granted to use this source
// code as long as this copyright notice
// appears in all source files that now
// include it.
//*****************************************

#ifndef     _CRYPTOR_H
#define     _CRYPTOR_H

#include    &lt;fstream&gt;   // Std. CPP stream
                        // files
#include    &lt;string&gt;    // Std. CPP strings

class Cryptor
    {
    //
    // Properties.
    //
    protected:
        std::string             m_Key;
        unsigned long           m_LFSR_A;
        unsigned long           m_LFSR_B;
        unsigned long           m_LFSR_C;
        const unsigned long     m_Mask_A;
        const unsigned long     m_Mask_B;
        const unsigned long     m_Mask_C;
        const unsigned long     m_Rot0_A;
        const unsigned long     m_Rot0_B;
        const unsigned long     m_Rot0_C;
        const unsigned long     m_Rot1_A;
        const unsigned long     m_Rot1_B;
        const unsigned long     m_Rot1_C;

    // Standard methods.
    public:
        Cryptor();
        ~Cryptor();

    // Class interface.
    public:
        void    Set_Key
                ( const std::string &amp; Key );
        void    Transform_Char
                ( unsigned char &amp; Target );
        void    Transform_File
                ( 
                const std::string &amp; Key, 
                const std::string &amp; Target 
                );
        void    Transform_String
                ( 
                const std::string &amp; Key, 
                std::string &amp; Target 
                );
        void    Weak_Transform_Char
                ( unsigned char &amp; Target );

    };

#endif  //      _CRYPTOR_H

//End of File
</pre>
</BODY>
</HTML>

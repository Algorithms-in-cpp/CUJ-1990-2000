<HTML><HEAD>
<TITLE>March 1995/Code Capsules/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2 <I>Illustrates use of machine epsilon in a root-finding algorithm</I></A></h4>
<pre>/* root.c:
 *
 *   To use a different precision, change ftype
 *   and the suffix of the floating-point constants
 */

#include &lt;stdio.h&gt;
#include &lt;float.h&gt;
#include &lt;math.h&gt;
#include &lt;assert.h&gt;

#define sign(x) ((x &lt; 0.0) ? -1 : (x &gt; 0.0) ? 1 : 0)

#define PREC DBL_DIG
#define EPS DBL_EPSILON

typedef double ftype;

ftype root(ftype a, ftype b, ftype (*f)(ftype))
{

   ftype fofa = f(a);
   ftype fofb = f(b);
   assert(a &lt; b);
   assert(fofa * fofb &lt; 0.0);

   /* Close-in on root via bisection */
   while (fabs(b - a) &gt; EPS*fabs(a))
   {
      ftype x = a + (b-a)/2.0;
      ftype fofx = f(x);
      if (x &lt;= a || x &gt;= b || fofx == 0.0)
         return x;
      if (sign(fofx) == sign(fofa))
      {
         a = x;
         fofa = fofx;
      }
      else
      {
         b = x;
         fofb = fofx;
      }
   }
   return a;
}

main()
{
   extern ftype f(ftype);
   printf("root == %.*f\n",PREC,root(-1.0,1.0,f));
   return 0;
}

ftype f(ftype x)
{
   return x*x + x - 1.0;
}

/* Output:
root == 0.618033988749895
*/
/* End of File */
</pre>
</BODY>
</HTML>


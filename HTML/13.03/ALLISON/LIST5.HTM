<HTML><HEAD>
<TITLE>March 1995/Code Capsules/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5 <I>A simple calculator that illustrates some </I>&lt;math.h&gt;<I> functions</I></A></h4>
<pre>/* calc.c: Lame-brain Calculator-
 *
 *  For simplicity in parsing, this program
 *  reads lines of the form:
 *
 *     value operation
 *
 *  where the value is optional in some cases.
 *  For example, the following script computes
 *  the integer part of sqrt(1 + 3.4*3.4):
 *
 *      3.4 =
 *      3.4 *
 *      1 +
 *      sqrt
 *      floor
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;
#include &lt;string.h&gt;
#include &lt;ctype.h&gt;
#include &lt;errno.h&gt;

#define LINSIZ 40

char *getline(char *);

main()
{
   double  reg = 0.0;
   char    line[LINSIZ];
   while (getline(line) != NULL)
   {
      char *op;
      double val;

      /* Parse command string */
      val = strtod(line,&amp;op);
      while (isspace(*op))
         ++op;
      strupr(op);

      /* Perform operation */
      errno = 0;
      if (*op == '+')
         reg += val;
      else if (*op == '-')
         reg -= val;
      else if (*op == '*')
         reg *= val;
      else if (*op == '/')
       {
         if (val != 0)
            reg /= val;
         else
         {
            puts("ERROR&gt;&gt;&gt; invalid divisor");
            continue;
         }
      }
      else if (*op == '=')
         reg = val;
      else if (*op == '^')
      {
         if (val == 0.0)
            reg = 1.0;
         else if (val == 0.5)
            reg = sqrt(reg);
         else
            reg = pow(reg,val);
      }
      else if (strncmp(op,"NEGATE",1) == 0)
         reg = -reg;
      else if (strncmp(op,"MOD",1) == 0)
      {
         if (val == 0.0)
         {
            puts("ERROR&gt;&gt;&gt; invalid modulus");
            continue;
         }
         else
            reg = fmod(reg,val);
      }
      else if (strncmp(op,"CEIL",1) == 0)
         reg = ceil(reg);
      else if (strncmp(op,"FLOOR",1) == 0)
         reg = floor(reg);
      else if (strncmp(op,"ROUND",1) == 0)
         reg = (reg &lt; 0.0) ? ceil(reg - 0.5)
                        : floor(reg + 0.5);
      else if (strncmp(op,"SQRT",1) == 0)
         reg = sqrt(reg);
      else if (strncmp(op,"QUIT",1) == 0)
         exit(0);
      else if (*op != '\0')
      {
         puts("ERROR&gt;&gt;&gt; invalid operation");
         continue;
      }

      if (errno)
         perror("ERROR&gt;&gt;&gt;");
      else
         printf("\t%s =&gt; %g\n",line,reg);
   }
   return 0;
}

char *getline(char *buf)
{
   fputs ("Calc&gt; ",stdout);
   fflush(stdout);
   return gets(buf);
}

/* Output:
Calc&gt; 3.4 =
       3.4 = =&gt; 3.4
Calc&gt; 3.4 *
       3.4 * =&gt; 11.56
Calc&gt; 1 +
       1+ =&gt; 12.56
Calc&gt; sqrt
       SQRT =&gt; 3.54401
Calc&gt; floor
       FLOOR =&gt; 3
Calc&gt; q
*/

/* End of file */
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>July 2000/Implementation of Observer Pattern/Figure 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 3: The Publisher class</A></h4>
<pre>
class Publisher
{
public:
   static Publisher* getInstance();

   // Functions for the Subject
   void createPublication(
      const std::string&amp; fPubName, 
      Subject* fpPubOwner);
   void discontinuePublication(
      const std::string&amp; fPubName, 
      Subject* fpPubOwner);
   void publish(
      const std::string&amp; fPubName, 
          Subject *fpPubOwner);
   
   // Functions for the Observer
   // (subscriber)
   void subscribe(
      const std::string&amp; fPubName, 
      Observer* fpSubscriber);
   void unsubscribe(
      const std::string&amp; fPubName, 
      Observer* fpSubscriber);
   // ...
};
</pre></body></html>

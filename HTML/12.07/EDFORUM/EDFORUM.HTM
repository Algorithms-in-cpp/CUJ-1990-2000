

<HTML>
<HEAD>

<TITLE>July 1994/Editor's Forum</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjul.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Departments</FONT></H2>

<hr><h2 align="center"><font color="#800000">Editor's Forum<A name="014B_00AC"><A name="014B_00AC"></font></h2><hr>
<BLOCKQUOTE>
<A name="014B_0000"><A name="014B_0000">Welcome to the new <I>C/C++ Users Journal</I>. If it happens to strongly resemble last month's <I>C Users Journal</I>, that's no accident. We view the addition of the "/C++" to the title more as an evolutionary step than a revolutionary one. I won't rehash all the reasons why we made the change &#151; see last month's <I>Editor's Forum</I> for the details.<P>
I do harbor one small hope that I didn't discuss last month. My hope is that making <I>CUJ</I> more officially a forum for matters C++ will help defuse the on<I>-</I>going confrontation between C and C++. I've been surrounded by that clash for several years now, as it is being played out in the arena of international standards for programming languages. People also expect me to comment on the fray &#151; and take sides &#151; in my capacity as industry pundit and gadfly.<P>
But I try not to say or do the obvious. Complex situations seldom benefit from people taking simplistic positions. Standard C is not entrenched as the one right language for all future programming. Nor is it a moribund and overworked contraption overdue for displacement. C++ is not a hopeless mass of excess complexities. Nor is it destined to become the one right language for all future programming.<P>
The simple fact is, both languages are powerful and yet remarkably portable. That's a killer combination given the needs of today's burgeoning and ever<I>-</I>changing computer technology. Some applications definitely benefit from being written purely in C, some from being written purely in C++. Most, however, can survive quite nicely being written in either &#151; or a mixture of the two. And seldom do you see much benefit from mixing in yet a third language, unless it be small doses of assembly language.<P>
I confess that there are certain features of C++ that I really miss when I switch back to C. I also confess that there are certain features of C++ that I still don't understand well enough to use comfortably. I'm not sure I'm motivated to <I>ever</I> learn some of the crannies of C++. But I'm happy with the dialects of C and C++ I've settled on for now &#151; they play well together.<P>
And that's an important goal of our newly renamed <I>C/C++ Users Journal</I>. We want to focus, as much as possible, on what's <I>right</I> about both C and C++. We want to highlight the practical utility of both languages, separately and working in concert. We want our readers to keep sharing with us the techniques they've learned that are most successful, in either language. And we'll happily leave the pulpit thumping, and the fighting, to others.<P>
P.J. Plauger<br>
<I>pjp@plauger.com</I><P>
</BLOCKQUOTE>
</BODY>
</HTML>

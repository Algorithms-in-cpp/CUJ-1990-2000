

<HTML>
<HEAD>

<TITLE>July 1994/CUG New Releases</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjul.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">CUG New Releases<A name="0147_00A9"><A name="0147_00A9"></font></h2><P>
<h3 align="center"><A name="0147_0000"><A name="0147_0000">Improved Vi, AISEARCH, and WTWG Update</h3><P>
<h3 align="center"><font color="#800000">Victor R. Volkman</font></h3><hr><blockquote><P>
<P><i><A name="0147_0000"><A name="0147_0000">Victor R. Volkman received a BS in Computer Science from Michigan Technological University. He has been a frequent contributor to C/C++ Users Journal since 1987. He is currently employed as Senior Analyst at H.C.I.A. of Ann Arbor, Michigan. He can be reached by dial<I>-</I>in at the HAL 9000 BBS (313) 663<I>-</I>4173 or by Usenet mail to sysop@hal9k.com.</i></P><P>
<h4><FONT COLOR="#000080"><A name="0147_00AA">Update to CUG #328 WTWG 2.0<A name="0147_00AA"></FONT></h4></P>
The Windows Text/Windows Graphics Windows (or WTWG) windows system, by David Blum (Phoenix, AZ), offers a complete a user<I>-</I>interface system for MS<I>-</I>DOS applications. WTWG allows you to write C programs that use modern interface features including the mouse, windows, and menus. In addition, WTWG frees you from worrying about PC hardware specifics, such as video modes, display pages, and enhanced keyboards. WTWG includes memory management (expanded memory and disk<I>-</I>swapping virtual memory) and error handling. WTWG version 2.0 (released 1/1/93) represents a major update for CUG Library #328.<P>
A major improvement to WTWG 2.0 is data collection by C++ forms. With this feature, input can come from files, command<I>-</I>line arguments, or user input on<I>-</I>screen, and data can be displayed or written to a file. WTWG can now automatically validate data. Using C++ virtual functions, you can extend the library to provide validated input of any custom data type.<P>
Programming in WTWG is easy, as most of its fancy options can be entirely ignored and you can use just a few high<I>-</I>level functions to do all the work. WTWG programs are small and fast, especially compared to other windowing systems. WTWG works identically at the source code level in standard DOS, 386<I>-</I>protected mode DOS, text mode, or graphics mode.<P>
<h4><FONT COLOR="#000080"><A name="0147_00AB">New Acquisitions<A name="0147_00AB"></FONT></h4></P>
<UL><li>Vim editor (CUG #411): Improved multiplatform implementation of classic vi editor.</li>
<li>AISEARCH (CUG #412): C++ class library of artificial intelligence search algorithms and demonstration code.</li></UL>
<h4><FONT COLOR="#000080"><A name="0147_00AC">CUG 411: VIM &#151; Vi Improved Editor<A name="0147_00AC"></FONT></h4></P>
For CUG Volume 411, Bram Moolenaar (Venlo, Netherlands) contributes his Vi Improved editor (Vim) that supports MS<I>-</I>DOS, Amiga, and most forms of UNIX. Vim claims near 100% of the functionality of the classic vi UNIX editor. Vim also includes many embellishments to the original features of vi<P>
Vim supplies extensive documentation in many forms including the following: a UNIX man page, UNIX man source file, quick reference card, platform<I>-</I>specific implementation notes, Vim and vi difference list, and an extensive 70<I>-</I>page ASCII reference manual. For those not familiar with vi's distinctive user interface, Vim provides tutorial files to get you up and running fast.<P>
Vim's improvements are perhaps the best reason to try this innovative text editor. Here's an abbreviated list of some of Moolenaar's enhancements over the original vi:<P>
<UL><li>Multi<I>-</I>level undo and redo</li>
<li>Repeats a series of commands with arbitrary complexity</li>
<li>Flexible insert mode allows use of arrow keys while editing</li>
<li>Visual marking of lines or blocks of text</li>
<li>Command<I>-</I>line editing makes long commands easier</li>
<li>Filename completion mode saves typing long filenames</li>
<li>Horizontal scrolling wider than the screen</li>
<li>True word<I>-</I>processor style text formatting options</li>
<li>Integrates with "make" for a mini<I>-</I>IDE environment</li>
<li>Editing or viewing of any binary file</li>
<li>Edits files containing 8<I>-</I>bit ASCII</li>
<li>Dynamic loading and running of Vim script command files</li>
<li>Edits files up to two billion lines long and much, much more.</li></UL>
The CUG Library edition includes full source in as well as pre<I>-</I>built executables for MS<I>-</I>DOS. Vim version 2.0, as released 12/14/93, is now available as CUG #411.<P>
<h4><FONT COLOR="#000080"><A name="0147_00AD">CUG 412: AISEARCH &#151; Artificial Intelligence Search Class<A name="0147_00AD"></FONT></h4></P>
For CUG volume #412, Peter M. Bouthoorn (Groningen University, Netherlands) submits his C++ search class library with artificial intelligence capabilities. AISEARCH is a tool for developing problem<I>-</I>solving software. The library offers the programmer a set of search algorithms that solve all kinds of different problems. AISEARCH is based on the principle that when developing problem<I>-</I>solving software, the programmer should only have to concentrate on the representation of the problem to be solved, not the implementation of the search algorithm used. You can incorporate these search classes in other software through C++ derivation and inheritance.<P>
AISEARCH implements the following search algorithms:<P>
<UL><li>Depth<I>-</I>first tree and graph search</li>
<li>Breadth<I>-</I>first tree and graph search</li>
<li>Uniform<I>-</I>cost tree and graph search</li>
<li>Best<I>-</I>first search</li>
<li>Bidirectional depth<I>-</I>first tree and graph search</li>
<li>Bidirectional breadth<I>-</I>first tree and graph search</li>
<li>AND/OR depth tree search</li>
<li>AND/OR breadth tree search</li></UL>
To use a search method in your own programs you just derive a class from the desired search class and fill in the necessary parts. The library helps standardize source code development because it requires that certain functions be used (these virtual functions are called by several routines in the search library).<P>
Although this package is a tool for developing problem<I>-</I>solving software, it is not just for programmers familiar with the concept of problem representation and search techniques. For those who are unfamiliar, the document accompanying this package briefly describes the theory of problem solving in AI and explains how to use the search class library. Since this package includes richly<I>-</I>commented source code and demo programs, it is useful to people who want to get acquainted with the subject of problem solving and search algorithms.<P>
AISEARCH can be built in MS<I>-</I>DOS with Borland C++ or MS C++, and on UNIX using GNU C++. AISEARCH, as released on 02/10/94, is immediately available as CUG #412.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

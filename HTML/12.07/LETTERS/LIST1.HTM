<HTML><HEAD>
<TITLE>July 1994/We Have Mail/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1 <I>Demonstrates a bug in Plauger's</I> free()</A></h4>
<pre>/* free function */
#include "xalloc.h"

void (free)(void *ptr)
   {
   /* free an allocated data object */
   _Cell *q;
   
   if (ptr == NULL)
      return;
   q = (_Cell *) ((char *)ptr <I>-</I>  CELL_OFF);
   if (q<I>-</I>&gt;_Size &amp; _MEMBND)
      return;
      /* bad pointer */
   if (_Aldata._Head == NULL
      || q &lt;_Aldata._Head)
      {
      /* insert at head of list */
      q<I>-</I>&gt;_Next = _Aldata._Head;
      _Aldata._Head = q;
      }
   else
      {
      /* Scan for insertion point */
      _Cell *qp;
      char *qpp;

      for (qp = _Aldata._Head;
         qp<I>-</I>&gt;_Next &amp;&amp; q &lt; qp_Next; )
         /* &lt; TEST IS BACKWARDS */
         qp = qp<I>-</I>&gt; Next;
      qpp = (char *) qp + CELL_OFF + qp<I>-</I>&gt;_Size;
      if ((char *) q &lt; qpp)
         return;
         /* erroneous call */
      else if ((char *)q == qpp)
         {
         /* merge qp and q */
         qp<I>-</I>&gt;_Size += CELL_OFF + q<I>-</I>&gt;_Size;
         q = qp;
         }
      else
         {
         /* splice q after qp */
         q<I>-</I>&gt;_Next = qp<I>-</I>&gt;_Next;
         qp<I>-</I>&gt;_Next = q;
         }
      }
   if (q<I>-</I>&gt;_Next &amp;&amp;
      (char *) q + CELL_OFF + q<I>-</I>&gt;_Size
      == (char *)q<I>-</I>&gt;_Next)
      {
      q<I>-</I>&gt;_Size += CELL_OFF + q<I>-</I>&gt;_Next<I>-</I>&gt;_Size;
      q<I>-</I>&gt;_Next = q<I>-</I>&gt;_Next<I>-</I>&gt;_Next;
      }
   _Aldata._Plast = &amp;q<I>-</I>&gt;_Next;
   /* resume scan after freed */
   }

/* End of File */
</pre>
</BODY>
</HTML>

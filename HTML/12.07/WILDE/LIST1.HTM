<HTML><HEAD>
<TITLE>July 1994/Dealing With Uncertain Inputs: Exploratory Software Engineering/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1 <I>First guess at an unknown grammar</A></I></h4>
<pre>{
/*
 File:   CONV.SYN - AnaGram syntax file for
                conversion program;
        Version 1
/*
#include "string.h"
#include "convutil.h"
}
[
  parser file name = "conv.cpp"
]

grammar
 -&gt; record?..., eof

(void) record
 -&gt; valid record, newline                  =cleanUp();
 -&gt; bad data, newline                      =cleanUp();

bad data
 -&gt; error               =wrError(PCB.line, PCB.column);

(void) valid record
 -&gt; "class", attribute list                =putClass();
 -&gt; "instanceVariable",
      attribute list           =putInstanceVariable();
// six other record types handled similarly

attribute list
 -&gt; tab, attribute
 -&gt; attribute list, tab, attribute

(void) attribute
 -&gt; "name@", value:a                   =atAdd(NAME, a);
 -&gt; "file@", value:a                  =atAdd(FILEN, a);
 -&gt; "line@", value:a                   =atAdd(LINE, a);
// twelve other attribute types handled similarly

(char *) value
 -&gt; value contents                          =release();

(void) value contents
 -&gt; value char:c                      =collectFirst(c);
 -&gt; value contents, value char:c           =collect(c);

// =============== lexical definitions ================
eof              = -1 + 0 + ^Z
newline          = '\n'
tab              = '\t'
value char       = ~(eof + tab + '@' + newline)

// Supporting C++ code follows
{
int main(int argc, char * argv[]) {
  if (FALSE == setErrorFile(argv[1])) {
    fprintf(stderr, "Couldn't open error file\n");
    return 1;
  }
  conv();
  return 0;
}
}

/* End of File */
</pre>
</BODY>
</HTML>





<HTML><HEAD>

<TITLE>March 1997/C++ Theory and Practice/Listing 2</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 2:	An array-delete expression with undefined behavior</h4>

<pre>
<p>#include &lt;iostream&gt;
#include &lt;new&gt;
class B
    {<
public:
    B();
    virtual ~B();
    void operator delete(void *p) throw ();
    void operator delete[](void *p) throw ();
    int b;
    };
B::B()
    : b(0)
    {
    cout &lt;&lt; "B()\n";
    }
B::~B()
    {
    cout &lt;&lt; "~B()\n";
    }
void B::operator delete(void *p) throw ()
    {
    ::operator delete(p);
    }
void B::operator delete[](void *p) throw ()
    {
    ::operator delete[](p);
    }
class D : public B
    {
public:
    D();
    ~D();
    void operator delete(void *p) throw ();
    void operator delete[](void *p) throw ();
    int d;
    };
D::D()
    : d(0)
    {
    cout &lt;&lt; "D()\n";
    }
D::~D()
    {
    cout &lt;&lt; "~D()\n";
    }
void D::operator delete(void *p) throw ()
    {
    ::operator delete(p);
    }
void D::operator delete[](void *p) throw ()
    {
    ::operator delete[](p);
    }
void delete_array(B *bp)
    {
    delete [] bp;
    }
int main()
    {
    D *dp = new D[2];
    delete_array(dp);
    return 0;
    }</p>

</pre>
//End of File
</body></html>

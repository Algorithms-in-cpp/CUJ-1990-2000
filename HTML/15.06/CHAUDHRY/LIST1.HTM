



<HTML><HEAD>

<TITLE>June 1997/A New Trace Class/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 1:	Using the Trace class</h4>

<pre>
#include &lt;iostream.h&gt;
#include &lt;stdio.h&gt;

const int MAX_PACKET_SIZE = 50;

class Packet{
    char m_Data[MAX_PACKET_SIZE];
public:
    Packet(int num) {sprintf(m_Data,"Packet No. %d",num);}
    // This function dumps class Packet
    void Dump() const
    { 
        cout &lt;&lt;m_Data&lt;&lt;endl;
    }
};

class Trace{
public:
    // For tracing an integer variable
    const Trace&amp; operator()(const char *s,int iVal)const
    {cout &lt;&lt; s &lt;&lt; iVal&lt;&lt;endl;return *this;}
    // For tracing an object of class Packet
    const Trace&amp; operator()(const char *s,const Packet &amp;pkt)const
    { pkt.Dump();return *this;}
    // For tracing an array of strings
    const Trace&amp; operator()(const char *s,char **p,int numStr)const
    { 
      cout &lt;&lt; s &lt;&lt; endl;
      for(int i=0;i&lt;numStr;i++)
        cout &lt;&lt; p[i] &lt;&lt; endl;
      return *this;
    }
};

Trace gTrace;

void main(char argc,char **argv)
{
    gTrace("The commandLine args=",argv,argc);
    
    char *strArray[10];
    Packet sendPacket(1);
    Packet recvPacket(2);
    int numPkt = 2;
    for(int i=0;i&lt;10;i++)
    {
        strArray[i] = new char[20];
        sprintf(strArray[i],"String No. %d ",i);
    }
    
    gTrace("The no. of Strings=", 10)("strArray=", strArray, 10)
          ("sendPacket=", sendPacket)("recvPacket=", recvPacket)
          ("numPackets=", numPkt);
    for(i=0;i&lt;10;i++)
        delete[] strArray[i];
}
//End of File
</pre>
</body></html>

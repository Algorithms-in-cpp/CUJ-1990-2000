


<HTML>
<HEAD>

<TITLE>November 1990/The C Toolbox</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocnov.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Book Reviews</FONT></H2>

<hr><h2 align="center"><font color="#800000">The C Toolbox<A name="0264_015A"><A name="0264_015A"></font></h2><P>
<h3 align="center"><font color="#800000"><A name="0264_0000"><A name="0264_0000">Reviewed By Derrel Blain</font></h3><hr><blockquote><P>
<P><i><A name="0264_0000"><A name="0264_0000">Derrel R. Blain currently works as a writer for Greenleaf Software. He holds a BA in Computer Science and an MA in English.</i></P><P>
If you are familiar with programming and PCs, and you want a thorough grounding in C, you should read <I>The C Tool</I>-<I>box</I> by William James Hunt. This book will lead you from a simple definition of C statements in the first chapter to writing a Control-Break handler and a terminal emulation program in the last chapters.<P>
This is the second edition of <I>The C Toolbox</I>. (The first edition was reviewed by Andrew Binstock in <I>The C Users Journal</I>, Dec/Jan 1988 issue.) If a programming book is worthy of a second edition two years later, you may be sure it is a useful book. Binstock recommended this book without reservation then, and I do the same now. Hunt has updated this edition to make it as useful as ever to beginning and intermediate C programmers.<P>
The author has carefully mapped his instruction so the reader quickly develops useful C programming skills. The concepts and routines of previous chapters provide groundwork for the next. For instance, chapter 2 presents C's storage and data type conventions, but mingles this explanation with a discussion of elementary I/O for C. Chapter 3 elaborates on these concepts into a complete set of modules for displaying ASCII files. The next chapter continues to build on these ideas. By the time readers have worked through chapter 4, they have a sound collection of modules for displaying files. These include a set of simple screen output routines for paging through the displayed file. These programs are not apprentice lessons which, once learned, are only discarded.<P>
In addition to being a very good tutorial on C, this book also provides a collection of essential algorithms. In PC computing, some basic tasks must be performed no matter what the language, like reading and writing files, sorting and displaying data, and communicating via parallel and serial ports. This book provides solid instruction on handling these tasks in C. The results are functional code that the reader can use.<P>
Recreating code from scratch is a waste of time. If you intend to develop a professional application in C, go out and buy a professional library <I></I> &#151; it's well worth your time and money. Of course, many programmers do not need the sophistication of a professional library.</FONT></FONT><P>
My programming efforts concern research in digitally sampled sound and linguistic data, so I write many routines that only have a one-time use. However, even code meant for a one-time application needs routines for common tasks, such as sorting a collection of data records. In past years, I wrote much of this code in Pascal. When I began using C, its apparently chaotic syntax gave me fits. This book would have saved me time in learning some of C's peculiar traits, while helping me to produce code that was immediately useful. For instance, using the files from the <I>The C Toolbox'</I>s companion disk, I had a working C program for sorting text files of words into a lexicon in about 20 minutes.<P>
The companion disk contains all the exercises and examples that appear in the book. The code for each chapter is kept in separate directories, so each of the pieces is easy to find. Hunt even provides project files for Turbo C users, making compilation of all the modules even easier.<P>
The attention to detail of this book is admirable. Hunt includes a chapter on simple optimization for C code and an appendix on the PC memory models. Chapter 7 furnishes a respectable introduction to low-level access of the PC BIOS. If you are learning C, you should read this book. Practically everything you need is here.<P>
<I>The C Toolbox</I><br>
William James Hunt<br>
Addison-Wesley<br>
$22.95, 501 pages<br>
ISBN 0-201-51815-5<P>
</BLOCKQUOTE>
</BODY>
</HTML>

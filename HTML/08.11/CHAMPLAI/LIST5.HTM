<HTML><HEAD><TITLE>November 1990/A Non-Preemptive Multitasking Executive In C++/Listing 5</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000"><h4><A name="0245_015A"><A name="0245_015A">Listing 5<A name="0245_015A"></h4><P>
<pre>// suuser.cpp - Start Up User Tasks
//              Copyright 1990 by Cnapse
//              Written by: M. de Champlain


#include &lt;stdio.h&gt;
#include "npx.hpp"

void Background(void)
    {
    printf("[%x]\tBackground started.\n", running-&gt;Self());
    loop
        {
        running-&gt;ReSchedule();
        putchar('.');
        }
    }

void Task0(void)
    {
    short n;

    printf("[%x]\tTask0 started.\n", running-&gt;Self());

    n = 10;
    while (n--)
        {
        running-&gt;ReSchedule();
        putchar('0');
        }

    running-&gt;Terminate(running);
    }

void Task1(void)
    {
    printf("[%x]\tTask1 started.\n", running-&gt;Self());
    loop
        {
        running-&gt;ReSchedule();
        putchar('1');
        }
    }

void StartUpUserTasks(void)
    {
    short n;
    Task *t0, *t1;

    printf("[%x]\tStartUpUserTasks started.\n", running-&gt;Self());
    (new Task(Background, 1024))-&gt;Start();
    (t0 = new Task(     Task0, 1024))-&gt;Start();
    (t1 = new Task(     Task1, 1024))-&gt;Start();

n = 20;
while (n--)
    {
    running-&gt;ReSchedule();
    putchar('S');
    }

running-&gt;Suspend(t1);

n: 5;
while (n--)
    {
    running-&gt;ReSchedule();
    putchar('S');
    }

running-&gt;Resume(t1);

(new Task(Task0, 1024))-&gt;Start();
running-&gt;Terminate(running);
}
</pre>
</BODY></HTML>

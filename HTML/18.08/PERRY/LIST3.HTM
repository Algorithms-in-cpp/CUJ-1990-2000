<HTML><HEAD>
<TITLE>August 2000/A Reusable Nonlinear System Solver, Part 2/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3: Defines the CNetwork class. This class owns all components and vertices in the circuit.</A></h4>
<pre>
//  Network.h

#if !defined(AFX_NETWORK_H ... truncated ... __INCLUDED_)
#define AFX_NETWORK_H ... truncated ... __INCLUDED_

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000

#include "Vertex.h"
#include "Component.h"
#include &lt;list&gt;

class CComponentGround;
class CComponentWire;
class CComponentWireKnown;
class CComponentBattery;
class CComponentResistor;
class CComponentResistorUnknown;

class CNetwork  
{
public:
    CNetwork();
    virtual ~CNetwork();

    CVertex * NewVertex();
    CComponentGround * NewComponentGround();
    CComponentWire * NewComponentWire();
    CComponentWireKnown * NewComponentWireKnown();
    CComponentBattery * NewComponentBattery();
    CComponentResistor * NewComponentResistor();
    CComponentResistorUnknown * NewComponentResistorUnknown();

    void AddToSystemPrimary( CEqSystem &amp;rSystem );
    void AddToSystemSecondary( CEqSystem &amp;rSystem );
    void Dump();

private:
    typedef std::list&lt; CVertex * &gt; CVertexList;
    CVertexList m_lVertices;
    typedef std::list&lt; CComponent * &gt; CComponentList;
    CComponentList m_lComponents;
};

#endif // !defined(AFX_NETWORK_H ... truncated ... __INCLUDED_)

</pre></body></html>

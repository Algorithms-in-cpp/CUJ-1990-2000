<HTML><HEAD>
<TITLE>August 2000/A Simple Persistence Framework/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7: Permanently deleting a persistent object</A></h4>
<pre>
#include &lt;stdlib.h&gt;

#include "POBroker.h"
#include "example.h"


int main(int argc, char* argv[])
{
    if(argc &lt;= 1) return 0;

    POBroker&lt;POBObj&gt; pob("TEST.DAT");

    pob.register_create_function(typeid(ABC).name(), ABC::create);

    unsigned long oi = atol(argv[1]);

    if(pob.findObj(oi)) {
        POBObj* pobj;
        ABC* pabc;
        try {
           if(pob.deleteObj(oi, pobj)) {
               pabc = (ABC*)pobj;
               cout &lt;&lt; "delete object:" &lt;&lt; endl;
               cout &lt;&lt; pabc-&gt;size() &lt;&lt; endl;
               cout &lt;&lt; pabc-&gt;price() &lt;&lt; endl;
               cout &lt;&lt; pabc-&gt;desp() &lt;&lt; endl;
               cout &lt;&lt; pabc-&gt;name() &lt;&lt; endl;
               pob.POB_DEL_REF(pobj);
           }
        } catch(POBException* e) {
           cout &lt;&lt; *e &lt;&lt; endl;
        }
    }
    else cout &lt;&lt; "Not found" &lt;&lt; endl;
 
    return 0;
}
</pre></body></html>

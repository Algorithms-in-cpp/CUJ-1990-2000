


<HTML><HEAD>

<TITLE>June 1998/Inter-Object Messaging Using a SwitchBoard/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 1: The SwitchBoard class</A></h4>


<pre>
 // forward declares
class SubscriberHookup;

class SwitchBoard
{
  friend class SubscriberHookup;

private:
  // handle to singleton instance
  static SwitchBoard* _self;
  // array of subscribing object hookups
  // (NULL terminated)
  SubscriberHookup**  _hookups; 
  int  _thookups; // total number of subscriber hookups
protected:
  // singleton constructor
  SwitchBoard();

  // api implementation
  void _subscribe
          (SubscriberHookup* hookup);
  void _unsubscribe
          (SubscriberHookup* hookup);

  bool _post(const char* subscription);

public:
  // singleton access
  static SwitchBoard&amp; instance();

  // message dispatching
  static bool
  post(const char* subscription) {
    return(instance()._post(subscription));
  }
};
/* End of File */
</pre>
</body></html>

<HTML><HEAD>
<TITLE>December 1991/Object-Oriented Programming/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5 Functions to Read Records for Class <I>binaryfile</I></A></h4>
<pre>//  (See <a href="list3.htm">Listing 3</A> for the class definition)

//  =============================================
//  Function for class binaryfile to read sequentially
//      forwards and backwards through the file, or to
//      read the first or last record in the file
//
int binaryfile::fileread (enum READMODE r) {
   return fileread (r == FirstRecord ? 1L :
         (r == NextRecord ? recnbr + 1L :
           (r == PreviousRecord ? recnbr - 1L :
              /*LastRecord*/ getcount())));
}

//  =============================================
//  Function for class binaryfile to read a specific record
//
int binaryfile::fileread (long number) {
   if (number &gt; count &amp;&amp; share == WriteShared) {
      countrecords(); // recount number of records in file
   }
   if (number &lt;= 0L || number &gt; count) return 0; // out of bounds
   recnbr = number;
   if (share == WriteShared
      &amp;&amp; (mode == Update || mode == AnyWrite)
      &amp;&amp; lockrecord (number))
      return -10; // error trap for lock failure
   lseek (handle, ((recnbr - 1) * length) + header, SEEK_SET);
   return read (handle, record, length);
}
// End of File
</pre>
</BODY>
</HTML>

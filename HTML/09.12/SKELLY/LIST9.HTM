<HTML><HEAD>
<TITLE>December 1991/Creating C++-Like "Objects" In C/Listing 9</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 9</A></h4>
<pre>/* OBJ.C <I>-</I> implement private data storage
 *           for each object */

/* note we no longer need to include obj.h */

#include &lt;stdio.h&gt;
#define GETCOLOR 0
#define SETCOLOR 1

#define YELLOW 14
#define BLUE 9
#define RED 12

/* duplication of typedef struct circle */
typedef struct circle
   {
   void *pprivate;

   /* action pack is now accessed with
    * a pointer to a pointer to a function
    * returning int
    */
   int (**pcact)();
   } CIRCLE;

main()
   {
   CIRCLE c1, c2; /* declare two circles */
   int color;

   /* call the constructor for each circle */
   constructor(&amp;c1, YELLOW);
   constructor(&amp;c2, RED);

   /* use the act pack to get color */
   color = (*c1.pcact[GETCOLOR])(&amp;c1);
   printf("Color of c1 is %d\n", color);

   color = (*c2.pcact[GETCOLOR])(&amp;c2);
   printf("Color of c2 is %d\n", color);

   (*c1.pcact[SETCOLOR])(&amp;c1, BLUE);
   printf("Setting color of c1 to BLUE\n");

   color = (*c1.pcact[GETCOLOR])(&amp;c1);
   printf("Color of c1 is now %d\n", color);

   (*c2.pcact[SETCOLOR])(&amp;c2, YELLOW);
   printf("Setting color of c2 to YELLOW\n");

   color = (*c2.pcact[GETCOLOR])(&amp;c2);
   printf("Color of c2 is now %d\n", color);

   destructor(&amp;c1); /* free circle storage */
   destructor(&amp;c2);
   }
/* End of File */


/* SAMPLE OUTPUT FROM LISTING 9 */
Color of c1 is 14
Color of c2 is 12
Setting color of c1 to BLUE
Color of c1 is now 9
Setting color of c2 to YELLOW
Color of c2 is 14
*/
</pre>
</BODY>
</HTML>

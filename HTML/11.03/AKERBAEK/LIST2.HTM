<HTML><HEAD>
<TITLE>March 1993/C++, Coroutines, and Simulation/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2 <I>The base-class coroutine implementation</I></A></h4>
<pre>// COR.CPP
#include "cor.hpp"
#include ...

extern void ctxtswc(void);
coroutine *MAINC=new coroutine();
coroutine *PREVIOUS,*CURRENT=MAINC;

coroutine::coroutine() {
       word *sp,*stkBase;
       stkSize= 2 * sizeof(word);
       stkBase=(word *) farmalloc(stkSize);
       stkSegment=FP_SEG(stkBase);
       stkOffset=FP_OFF(stkBase);
       sp=stkBase + 2;
       *--sp=(word) startProcess;}

coroutine::~coroutine() {
       delete(MK_FP(stkSegment,stkOffset));}

void coroutine::superMain(void) {
       main();
       resume(MAINC);
       FATAL("terminated coroutine resumed");}

void startProcess(void) {
       CURRENT-&gt;superMain();}

void resume(coroutine* rc)
{       word sp,*stkBase;
       if ((CURRENT != NULL) &amp;&amp; (rc != CURRENT) &amp;&amp; (rc != NULL)) {
          sp=_SP;
          CURRENT-&gt;stkSize= _stklen - sp + 4;
          stkBase = (word*)farmalloc(CURRENT-&gt;stkSize);
          CURRENT-&gt;stkSegment=FP_SEG(stkBase);
          CURRENT-&gt;stkOffset=FP_OFF(stkBase);
          PREVIOUS=CURRENT;
          CURRENT=rc;
          ctxtswc();
          delete(MK_FP(CURRENT-&gt;stkSegment, CURRENT-&gt;stkOffset));
       }
}

void detach(void) {
       resume(MAINC);}

// End of File
</pre>
</BODY>
</HTML>

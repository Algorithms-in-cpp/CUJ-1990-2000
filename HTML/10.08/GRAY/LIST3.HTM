<HTML><HEAD>
<TITLE>August 1992/Interpreting Touchscreen Touches/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 (ShowTch.c)</A></h4>
<pre>/* ---------------------ShowTch.c-------------------*
 *                                                  *
 * Module:     ShowTch.c                            *
 * Purpose:    To provide a demonstration about how *
 *             to use function GetTouch().          *
 * Author:     W. Harvey Gray                       *
 * Compiler:   Microsoft 5.0                        *
 *                                                  *
 * Functions:  (extern)                             *
 *             main                                 *
 *                                                  *
 * Variables:  There are no external variables used *
 *             or defined by this module.           *
 *                                                  *
 * Copyright 1992, W. Harvey Gray. May be used      *
 *   freely, if authorship and publication are      *
 *   acknowledged.                                  *
 *                                                  *
 *--------------------------------------------------*/

#include &lt;bios.h&gt;
#include &lt;conio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

#include "dvrfunc.h"
#include "GetTouch.h"

/*--------------------------------------------------*
 *                static prototypes                 *
 *--------------------------------------------------*/

static void print_touch( void );
static void touch_loop( void );

/*------------------------------------------------*
 *     extern function main()                     *
 *------------------------------------------------*/

int main( int argc, char **argv ) {

/*------------------------------------------------*
 * Purpose:                                       *
 *                                                *
 *   Demonstrates a simple routine that reads a   *
 * complete touchscreen touch and prints its      *
 * statistics.                                    *
 *                                                *
 *------------------------------------------------*/

   struct infodata *pinfo;
   
   puts( "ShowTch V1.0" );
   puts( "A test program for function GetTouch." );
   
   if ( ! finddriver() ) {  /* Check for ELODEV. */
   
      puts( "\nELODEV not installed." );
      exit( 1 );
   }
   /*--------------------------------------------*
    * Check for correct device driver version.   *
    *--------------------------------------------*/
   
   pinfo : malloc( sizeof( struct infodata ) );
   driverinfo( pinfo );
   
   if ( ( pinfo-&gt;driverversionmajor * 10 +
         pinfo-&gt;driverversionminor ) &lt; 14 ) {
   
      puts( "\nELODEV not &gt;= version 1.4" );
      exit( 2 );
   }
   free( pinfo );
   
   /*--------------------------------------------*
    * Startup the touchscreen device driver.     *
    *--------------------------------------------*/
   
   setmode( BUFFERED | UNTOUCH | STREAM );
   opentouch();
   enabletouch();
   initdelay();
   
   /*--------------------------------------------*
    *   Set the button radius to be 4% of the    *
    * diagonal dimension of the touchscreen.     *
    *--------------------------------------------*/
   
   InitializeTouch();
   SetButtonRadius( 4096/25 );
   
   /*--------------------------------------------*
    *   Continue reading touches until the key-  *
    * board is hit.                              *
    *--------------------------------------------*/
   
   while ( ! _bios keybrd( _KEYBRD_READY ) )
      touch_loop();
                     /* Flush keyboard buffer. */
   
   while ( _bios_keybrd( _KEYBRD_READY ) )
      getch();
   
   closetouch();
   exit( 0 );
}

/*-------------------------------------------------*
 *     static function print_touch()               *
 *-------------------------------------------------*/

static void print_touch( void ) {

/*-------------------------------------------------*
 * Purpose:                                        *
 *                                                 *
 *   Print the touch statistics.                   *
 *                                                 *
 *-------------------------------------------------*/

   struct touchit *pti;
   
   pti = TouchInfo();
   printf( "\nTouch pts = %d;", pti-&gt;n );
   printf( "\n (X,Y)cen = (");
   printf( "%5d,", pti-&gt;xcen );
   printf( "%5d);", pti-&gt;ycen );
   printf( "\n Push button = %s.",
      ( (pti-&gt;button) ? "True" : "False" ) );
   
   return;
}

/*-------------------------------------------------*
 *     static function touch_loop()                *
 *-------------------------------------------------*/

static void touch_loop( void ) {

/*-------------------------------------------------*
 * Purpose:                                        *
 *                                                 *
 *   Read an entire touch and print its statistics *
 * when an untouch point is received.              *
 *                                                 *
 *-------------------------------------------------*/
   
   boolean button;
   boolean touched;
   
   struct touchxy *ptouch;
   
   /*----------------------------------------------*
    *   Service one complete touch.                *
    *----------------------------------------------*/
   
   touched = FALSE;
   do {
   
      if (( ptouch = GetTouch( &amp;button )) !=
             (struct touchxy *) NULL ) {
         
         touched = TRUE;  /* Touch point recv'd */
         
         if ( ptouch-&gt;ut ) {   /* Is a untouch? */
         
            print_touch();
            printf(" (Press any key to stop.)" );
            break;     /* Finished with touch. */
         }
      }
   }
   while ( touched );
   
   return;
}
/* End of file. */
</pre>
</BODY>
</HTML>

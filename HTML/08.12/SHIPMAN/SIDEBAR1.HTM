<HTML><head><TITLE>December 1990/Debugging With Two Monitors/Sidebar</TITLE></head><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h3 align="center"><FONT FACE="Garamond" COLOR="#000080">Utilities For A Second Monitor</FONT></H3><hr>
<BLOCKQUOTE>
A monochrome monitor and mono video card are among the least expensive hardware options you can add to your computer. On the other hand, desktop space is precious, and a second monitor takes a lot of space. Cost aside, the usefulness of the second monitor must outweigh the usefulness of the space the monitor takes, or the monitor will wind up back in its shipping box.<P>
Functions like <I>mono</I> and <I>mprintf</I>, discussed in the accompanying article, require a mono monitor. If you come to depend on <I>mono</I> and <I>mprintf</I> for your C language debugging, then you'll see the need for the second monitor. But how much of your time on the computer is spent programming? And how much of that programming time is spent working in C language? If you spend 80 percent of your computer time programming, and 60 percent of that is in C, then more than half your computer time is spent on other things. What is the second monitor for, then?<P>
I have found a couple of utility programs that help to answer this question. One is a memory resident utility called <I>Ctrlalt</I>. The other is a device driver that lets me treat the second monitor as just another device. Both of these utilities are perfect for the two-monitor environment, whether you're using C or not.<P>
Barry Simon and Richard Wilson have developed and released <I>Ctrlalt</I>. The developers encourage the sharing of this program. It is a memory resident utility that takes only 7K of memory, yet offers a host of features. It allows you to copy the display on the active monitor to the inactive screen. (I use this feature all the time, keeping a copy of Turbo-C's relevant help screen handy as I work on my latest error.) It allows you to switch between monitors, or to blank the inactive unit. It also lets you copy part or all of either monitor to the printer. <I>Ctrlalt</I> does a great deal more than this; I've just enumerated some dual-monitor features that I'm familiar with.<P>
Tom Bering has modified Michael Geary's <I>ox.sys</I> program to produce two DOS device drivers. Either or both of these small files are installed by the <I>config. sys</I> file. If the <I>Mono-drv</I> file is installed, then output can be redirected to the mono monitor. For example, from within Turbo-C I use <I>^KW</I> to write a marked block of text to a file. Ordinarily, I send it to a file called <I>temp</I> but I have the option to write to <I>mdrv</I> instead, copying the marked block to the monochrome display. This works from DOS as well, of course.<P>
Both of these utilities have uses that go far beyond just working in C. Utilities like these help to justify both the desk space and the cost of a second monitor. They help to unify the system by making the second monitor more active. They can make a second monitor so useful that single-monitor systems will seem inadequate for your needs.<P>
If you can't find these utilities elsewhere, they are available from Public Brand Software, a shareware distributor. <I>Ctrlalt</I> is on their disk number UW7.0. The video device drivers are on disk number UH6.0. There is a nominal charge for each disk, plus shipping. Public Brand's voice phone number is 1-800-426-3475.<P>
</BLOCKQUOTE>
</BODY></HTML>

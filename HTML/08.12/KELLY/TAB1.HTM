<HTML><head><TITLE>December 1990/Buffering Mouse Events/Table 1</TITLE></head><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4><A name="0278_016A">Table 1 Microsoft Mouse Driver Interface Functions Used In Queue Example<A name="0278_016A"></h4><P>
<pre>Detect presence of mouse driver:
<I>   INT 33H Function 00H</I>
      On Entry: <I>AX </I>= <I>0000H</I>
      Returns:
        if  (AX == FFFFH)
            BX == number of mouse buttons
        if  (AX == 0000H)
            No MicroSoft compatible mouse driver
            in system

<I>Note: This function is also used to reset the mouse driver to</I>
<I>its default state after hiding the mouse cursor (use before</I>
<I>your application exits).</I>

Display mouse cursor:
<I>   Int 33H, function 01H</I>
      On Entry: <I>AX </I>=<I> 0001H</I>
      Returns:  nothing

Hide mouse cursor:
<I>   Int 33h, function 02H</I>
      On Entry: <I>AX </I>= <I>0002H</I>
      Returns:  Nothing

Register mouse <I>EVENT</I> handler:
<I>   Int 33H, function 0CH</I>
   On Entry: <I>AX = 000CH</I>
<I>   CX  </I>=<I> EVENT </I>mask (see Mouse Event
          Mask below)
<I>   DX  </I>= offset portion of <I>EVENT </I>handler address
<I>   ES  </I>= segment portion of <I>EVENT </I>handler address
   Returns:  Nothing

Mouse Event Mask:
   a <I>1</I> in bit position implies:
      0   =   mouse cursor movement
      1   =   left button press
      2   =   right button press
      3   =   left button release
      4   =   right button release
      5 - 15: unused

<I>Note: If bit zero is set, the handler will be called frequently</I>
<I>during mouse movement, so the queue should be</I>
<I>considerably larger than if handling button activity only.</I></pre>
</BODY></HTML>

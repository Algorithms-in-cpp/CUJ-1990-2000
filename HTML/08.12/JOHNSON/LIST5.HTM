<HTML><head><TITLE>December 1990/Writing MS-DOS Device Drivers/Listing 5</TITLE></head><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4><A name="0276_0175"><A name="0276_0175">Listing 5 (key.c) Routines for Manipulating the Key Reassignment Buffers<A name="0276_0175"></h4><P>
<pre>#include  "char.h"
/*
 * k_seek()
 *
 * k_ seek() finds a buffer based on the global variable
 * 'keycheck'. the first match returns a pointer to the
 * replacement string; the variable 'len' is also set to
 * point to the length field. If no match, then it returns
 * a null pointer
 */

char    *k_seek()
   {
   for (kp = &amp;kbuffer[ 0 ], k = 0; k &lt; NKEYS; k++, kp++)
       {
       if (kp-&gt;keystroke == keycheck)
          {
          len = &amp;(kp-&gt;length);
          ptr = kp-&gt;buffer;
          return ptr;
          }
      }
   return ((char *) 0);
   }

/*
 * k_alloc()
 *
 * k_alloc() searches for an unallocated key buffer.
 * It does so by searching for a zero keystroke field.
 * Simple.
 */

char   *k_alloc()
   {
   keycheck = 0;
   return k_seek();
   }
</pre>
</BODY></HTML>

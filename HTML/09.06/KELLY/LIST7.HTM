<HTML><HEAD>
<TITLE>June 1991/A Universal C++ Data Type/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7 (th_int.cpp)</A></h4>
<pre>//
//  class IntThing  --  an integer thing derived from
//              class Thing.
//
//  Version 1.01  --  2/25/91
//
//  Michael Kelly --  Author
//
#include &lt;stdio.h&gt;
#include "th_int.hpp"

void IntThing::print()
{
    printf("%d\n", (int)*this);
}

IntThing::operator ==(Thing &amp;some_thing)
{
    return (type() == some_thing.type() ) ?
      ( *((int *)ptr() )==*((int *)some_thing.ptr()) ) : 0;
}

IntThing::operator !=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((int *)ptr()) != *((int *)some_thing.ptr()) ): 0;
}

IntThing::operator &lt; (Thing &amp;some_thing)
{
    return (type() == some_thing.type() ) ?
      ( *((int *)ptr()) &lt;  *((int *)some_thing.ptr()) ): 0;
}

IntThing::operator &lt;=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((int *)ptr()) &lt;= *((int *)some_thing.ptr()) ): 0;
}

IntThing::operator &gt; (Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((int *)ptr()) &gt; *((int *)some_thing.ptr()) ) : 0;
}

IntThing::operator &gt; = (Thing &amp;some_thing)
{
    return ( type() == some_thing.type()) ?
      ( *((int *)ptr() &gt;= *((int *)some_thing.ptr()) ) : 0;
}

// End of File
</pre>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>June 1991/A Universal C++ Data Type/Listing 11</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 11 (th_long.cpp)</A></h4>
<pre>//
//  class LongThing-- a long thing derived from
//              class Thing.
//
//  Version 1.01  -- 2/25/91
//
//  Michael Kelly -- Author
//
#include &lt;stdio.h&gt;
#include "th_long.hpp"

void LongThing::print()
{
    printf("%ld\n", (long)*this);
}

LongThing::operator ==(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((long *)ptr()) == *((long *)some_thing.ptr()) ) : 0;
}

LongThing::operator !=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((long *)ptr()) != *((long *)some_thing.ptr()) ) : 0;
}

LongThing::operator &lt; (Thing &amp;some_thing)
{
    return (type() == some_thing.type() ) ?
      ( *((long *)ptr()) &lt;  *((long *)some_thing.ptr()) ) : 0;
}

Longthing::operator &lt;=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((long *)ptr()) &lt;= *((long *)some_thing.ptr()) ) : 0;
}

LongThing::operator &gt; (Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((long *)ptr()) &gt;  *((long *)some_thing.ptr()) ) : 0;
}

LongThing::operator &gt;=(Thing &amp;some_thing)
{
    return ( type() == some thing.type() ) ?
      ( *((long *)ptr()) &gt;="*((long *)some_thing.ptr()) ) : 0;
}

// End of File
</pre>
</BODY>
</HTML>

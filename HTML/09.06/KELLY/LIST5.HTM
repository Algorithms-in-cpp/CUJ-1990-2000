<HTML><HEAD>
<TITLE>June 1991/A Universal C++ Data Type/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5 (th_doubl.cpp)</A></h4>
<pre>//
//  class DoubleThing   --   a double thing derived from
//             class Thing.
//
//  Version 1.01  --  2/25/91
//
//  Michael Kelly --  Author
//
#include &lt;stdio.h&gt;
#include "th_doubl.hpp"

void DoubleThing::print()
{
    printf("%f\n", (double)*this);
}

DoubleThing::operator ==(Thing &amp;some_thing)
{
    return ( type() == some thing.type() ) ?
      ( *((double *)ptr()) == *((double *)some_thing.ptr()) ) : 0;
}

DoubleThing::operator !=(Thing &amp;some_thing)
{
    return !( *this == some_thing );
}

DoubleThing::operator &lt; (Thing &amp;some_thing)
{
    return ( type() == some_thing_type() ) ?
      ( *((double *)ptr()) &lt;  *((double *)some_thing.ptr()) ) : 0;
}

DoubleThing::operator &lt;=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((double *)ptr()) &lt;= *((double *)some_thing.ptr()) ) : 0;
}

DoubleThing::operator &gt; (Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((double *)ptr()) &gt;  *((double *)some_thing.ptr()) ) : 0;
}

DoubleThing::operator &gt;=(Thing &amp;some_thing)
{
    return ( type() == some_thing.type() ) ?
      ( *((double *)ptr()) &gt;= *((double *)some_thing.ptr()) ) : 0;
}
// End of File
</pre>
</BODY>
</HTML>

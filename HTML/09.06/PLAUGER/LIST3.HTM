<HTML><HEAD>
<TITLE>June 1991/Standard C/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 (_Fmtval)</A></h4>
<pre>/* _Fmtval function */
#include &lt;limits.h&gt;
#include &lt;locale.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

     /* macros */
#define FN_INT_CUR -2
#define FN_LCL_CUR -1

char *_Fmtval(char *buf, double d, int fdarg)
   {  /* format number by locale-specific rules */
   char *cur_sym, dec_pt, *grps, grp_sep, *sign;
   const char *fmt;
   int fd, neg;
   struct lconv *p = localeconv();

   if (0 &lt;= d)
      neg = 0;
   else
      d = -d, neg = 1;
   if (fdarg == FN_INT_CUR)
      {/* get international currency parameters */
      cur_sym = p-&gt;int_curr_symbol;
      dec_pt = p-&gt;mon_decimal_point[0];
      fmt = "$-V";
      fd = p-&gt;int_frac_digits;
      grps = p-&gt;mon_grouping;
      grp_sep = p-&gt;mon_thousands_sep[0];
      sign = neg ? p-&gt;negative_sign = p-&gt;positive_sign;
      }
   else if (fdarg == FN_LCL_CUR)
      { /* get local currency parameters */
      static const char *ftab[5] [2] [2] = {
         "(V$)", "-V$", "V$-", "V-$", "V$-",
         "($V)", "-$V", "$V-", "-$V", "$-V",
         "(V $)", "-V $", "V $-", "V- $", "V $-",
         "($ V)", "-$ V", "$ V-", "-$ V", "$ -V"};

      cur_sym = p-&gt;currency_symbol;
      dec_pt = p-&gt;mon_decimal_point[0];
      if (neg)
         fmt = ftab[p-&gt;n_sign_posn &lt; 0 || 4 &lt; p-&gt;n_sign_posn
            ? 0 = p-&gt;n_sign_posn][p-&gt;n_cs_precedes == 1]
            [p-&gt;n_sep_by_space == 1];
      else
         fmt = ftab[p-&gt;p_sign_posn &lt; 0 || 4 &lt; p-&gt;p_sign_posn
            ? 0 = p-&gt;p_sign_posn][p-&gt;p_cs_precedes == 1]
            [p-&gt;p_sep_by_space == 1];
      fd = p-&gt;frac_digits;
      grps = p-&gt;mon_grouping;
      grp sep = p-&gt;mon_thousands_sep[0];
      sign = neg ? p-&gt;negative_sign = p-&gt;positive_sign;
      }

   else
      {/* get numeric parameters (cur_sym not used)*/
      dec_pt = p-&gt;decimal_point[0];
      fmt = "-V";
      fd = fdarg;
      grps = p-&gt;grouping;
      grp_sep = p-&gt;thousands_sep[0];
      sign = neg ? "-" : "";
      }
     {/* build string in buf under control of fmt*/
   char *end, *s;
   const char *g;
   size_t i, ns;

   for (s = buf; *fmt; ++fmt, s += strlen(s))
      switch (*fmt)
         {/* process a format char */
      case '$':/* insert currency symbol string */
         strcpy(s, cur_sym);
         break;
      case '-' :/* insert sign string */
         strcpy(s, sign);
         break;
      default: /* insert literal format char */
         *s++ = *fmt, *s = '\0';
         break;
      case 'V':/* insert formatted value */
         sprintf(s, "%#.*f",
            0 &lt; fd &amp;&amp; fd != CHAR_MAX ? fd : 0, d);
         end = strchr(s, p-&gt;decimal_point[0]);
         for (ns = 0, i = end - s, g = grps; 0 &lt; i; ++ns)
            { /* count separators to add */
            if (g[0] &lt;= 0 || i &lt;= g[0] || g[0] == CHAR_MAX)
               break;
            i -= g[0];
            if (g[1] != 0)
               ++g;
            }
         memmove(end + ns, end, strlen(end) + 1);
         i = end - s, end += ns;
         *end = 0 &lt;= fd &amp;&amp; fd != CHAR_MAX ? dec_pt = '\0';
         for (g = grps; 0 &lt; i; --ns}
            { /* copy up and insert separators */
            if (g[0] &lt;= 0 | | i &lt;= g[0] || g[0] == CHAR_MAX)
               break;
            i -= g[0], end -= g[0];
            memmove(end, end - ns, g[0]);
            *--end = grp_sep;
            if (g[1] != 0)
               ++g;
            }
         }
     }
   return (buf);
   }</pre>

</BODY>
</HTML>

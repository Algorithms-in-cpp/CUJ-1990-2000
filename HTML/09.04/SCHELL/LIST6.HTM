<HTML><HEAD>
<TITLE>April 1991/Some Small C++ Classes/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6 (byte.hpp)</A></h4>
<pre>/*************************************************************/
/*         Byte classes.   Copyright by Joe Schell 1989.     */
/*************************************************************/

#ifndef CLASS_byte
#define CLASS_byte
#include  &lt;limits.h&gt;         // Maximum values UCHAR_MAX and UINT_MAX.
#include  &lt;stdlib.h&gt;         // prototype exit() and EXIT_FAILURE.
#include  &lt;iostream.h&gt;
#include  &lt;form.h&gt;
/*--------------------------------------------------------------------*/
/* byte                Handle a byte.                                 */
/*--------------------------------------------------------------------*/
class byte
   {
public:
   byte()          { c = 0; }
   byte(int &amp;i)    { c = value(i); }
   operator int() const { return c; }
   byte operator=(int &amp;i)  { c = value(i); return *this; }
   byte operator++()   { c++; return *this; }
   byte operator--()  { c--; return *this; }
   char *make_string() { return form("%2.2X", int(c));}

private:
   unsigned char c;             // A byte.
   unsigned char value(int &amp;i)
      {
      if (i &gt; UCHAR_MAX)
         {
         cerr &lt;&lt; "\nByte class: Illegal value-" &lt;&lt; i &lt;&lt; "\n";
         exit(EXIT_FAILURE);
         }
      return (unsigned char)i;
      }
  };  // End of byte class.
/*---------------------------------------------------------------------*/
/* word            Handle a word                                       */
/*---------------------------------------------------------------------*/
class word
   {
public:
   word()          { i = 0; }
   word(long &amp;x)   { i = value(x); }
   operator long() const { return (long)i; }
   word operator++()   { i++; return *this; }
   word operator--()  { i--; return *this; }
   char *make_string() { return form("%4.4X", i); }
private:
   unsigned int i;     // An int.
   unsigned int value(long &amp;x)
      {
      if (x &gt; UINT_MAX)
         {
         cerr &lt;&lt; "\nWord class: Illegal value-" &lt;&lt; x &lt;&lt; "\n";
         exit(EXIT_FAILURE);
         }
      return (unsigned int)x;
      }
  }; // End of word class.

#if sizeof(unsigned char) != sizeof(byte)
   #error Byte class cannot be used as pointer to memory.
#endif
#if sizeof(unsigned int) != sizeof(word)
   #error Word class cannot be used as pointer to memory.
#endif

#endif    // #ifndef CLASS_byte
</pre>
</BODY>
</HTML>

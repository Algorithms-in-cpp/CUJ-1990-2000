<HTML><HEAD>
<TITLE>July 1998/A Binary Search Tree with Iterators/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3: Abstract iterator header</A></h4>
<pre>
#ifndef __ABSTRACT_ITERATOR_H
#define __ABSTRACT_ITERATOR_H
// abstract iterator class definition

// headers
#include &lt;stdlib.h&gt;
#include &lt;iostream.h&gt;

// local headers
#include "returns.h"
#include "debug.h"

// abstract iterator class
template &lt;class DataType&gt;
class AbstractIterator {
public:
    // constructors and destructor
    virtual ~AbstractIterator() { }

    // reset iterator to start
    virtual void reset() = 0;

    // check if at end of list
    virtual int done() const = 0;

    // return data 
    virtual DataType operator()() = 0;

    // advance iterator to next link
    virtual int operator++(int) = 0;

    // not shown: conditionally compiled
    // function resetByValue
};
/* End of File */</pre>
</BODY>
</HTML>

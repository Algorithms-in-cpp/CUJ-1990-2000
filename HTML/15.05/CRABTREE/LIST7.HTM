



<HTML><HEAD>

<TITLE>May 1997/A Reusable Directory Walk Class/Listing 7</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 7:	Loads STL vector with full pathnames</h4>

<pre>
#include &lt;iostream&gt;
#include &lt;stdexcept&gt;
#include &lt;vector&gt;
#include "DirWalk.h"

class PowerWalk : public DirWalk {
#if defined(_MSC_VER)
 vector&lt;string, allocator&lt;string&gt; &gt; Files_;
#else
 vector&lt;string&gt; Files_;
#endif
public:
  inline PowerWalk() throw() :
      DirWalk(TRUE,FALSE) {}
  inline virtual void FoundFile() {
      char FullPathBuf[_MAX_PATH];
      LPTSTR dummy;
      if(GetFullPathName(Filename(),
                         _MAX_PATH,
                         FullPathBuf,
                         &amp;dummy))

        Files_.push_back(string(FullPathBuf));
      else
        Files_.push_back(string(Filename()));
  }
  inline void PrintFiles() throw() {
#if defined(_MSC_VER)
      vector&lt;string, allocator&lt;string&gt; &gt;
        ::iterator i;
#else
      vector&lt;string&gt;::iterator i;
#endif
      for(i=Files_.begin();i!=Files_.end();i++)
        cout &lt;&lt; (*i).c_str() &lt;&lt; endl;
 }
};

int main() {
 PowerWalk pw;
 try {
  pw.Walk();
  pw.PrintFiles();
 } catch(exception&amp; e) {
  cout &lt;&lt; e.what() &lt;&lt; endl;
  return 1;
 } catch(...) {
  return 1;
 }
 return 0;
}
//End of File
</pre>
</body></html>

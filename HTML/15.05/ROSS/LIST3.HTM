



<HTML><HEAD>

<TITLE>May 1997/Sockets: Down and Dirty Programming for the Web/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 3:	Function openSock</h4>

<pre>
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netdb.h&gt;

int openSock(char *hostName, int httpPort)
{
  int skt;
  struct sockaddr_in sktin;
  struct hostent *host;

  /* allocate a socket */
  if ((skt = socket(PF_INET, SOCK_STREAM, 0)) &lt; 0)
  { fprintf(stderr, "*Error - can't create socket\n");
    exit(1);
  }
  memset(&amp;sktin, 0, sizeof(sktin));
  sktin.sin_family = AF_INET;
  
  /* set port number for http */
  sktin.sin_port = htons(httpPort);

  /* map host name to ip address */
  if (host = gethostbyname(hostName))
    memcpy(&amp;sktin.sin_addr, host-&gt;h_addr, host-&gt;h_length);
  else if ((sktin.sin_addr.s_addr = inet_addr(hostName))
           &lt; 0) /* dotted dec */
  { fprintf(stderr,
            "*Error - can't get host entry for %s\n", hostName);
    exit(1);
  }

  /* connect the socket */
  if (connect(skt, &amp;sktin, sizeof(sktin)) &lt; 0)
  { fprintf(stderr,
            "*Error - can't connect to %s:%d\n", hostName, httpPort);
    exit(1);
  }
  
  return(skt);
}
/* End of File */
</pre>
</body></html>

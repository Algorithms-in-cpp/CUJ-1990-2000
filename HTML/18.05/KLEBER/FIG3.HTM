<HTML><HEAD>
<TITLE>May 2000/Thread-Safe Access to Collections/Figure 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 3: The collection class</A></h4>
<pre>
class MyCollection;
typedef LockAuto&lt;MyCollection&gt; 
   CollectionAutoLock;

class MyCollection : private ThreadSafe
{
public:

    MyCollection()
        : ThreadSafe()
    {
    }

    ~ MyCollection()
    {
    }

    int Count() const
    {
        assert(IsLocked());
        return m_data.size();
    }

    MyItem&amp; At(const int i)
    {
        assert(IsLocked());
        return m_data[i];
    }

private:

    std::vector&lt;MyItem&gt; m_data;

    // Copy and assignment are not
    // supported
    MyCollection(const MyCollection&amp; rhs);
    MyCollection&amp; 
    operator= (const MyCollection&amp; rhs);

    friend CollectionAutoLock;
};
</pre></body></html>

<HTML><HEAD><TITLE>July 1990/Object-Oriented Programming In C/Listing 8</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4><A name="0177_00E5"><A name="0177_00E5">Listing 8<A name="0177_00E5"></h4><P>
<pre>/************************************************************
  Testlist.c - Program to test the list object using a phone
  list as an example.
************************************************************/
#include "phlist2.h"

static PHONE_ENTRY test_data[] = {
{"Able","Ben","456-7890"},{"Smith","John","456-0987"},
{"Kirk","Jim","622-1701"},{"Picard","Jon L.","622-1701"},
{"Jones","Cyrano","874-2253"}
};

static PHONE_ENTRY jane = {"Smith","Jane","123/456-0987"};

main()
{
   PHONE_LIST *pe;
   int x;
   
   pe = new_phone_list();
   for (x = 0; x &lt; 5; ++x)
       pe-&gt;add_member(pe,&amp;test_data[x]);
   printf("\nTesting Phone List:\n");
   pe-&gt;top(pe);
   
   while( ! pe-&gt;at_end(pe) ) {
      pe-&gt;display(pe); pe-&gt;next(pe);
   }
   printf("\n Finding - Kirk \n");
   pe-&gt;top(pe);
   if (pe-&gt;find(pe,"Kirk") == TRUE)
      pe-&gt;display(pe);
   printf("\n Trying to find McCoy \n");
   if (pe-&gt;find(pe,"McCoy") == FALSE)
      printf("\nMcCoy not found\n");
   printf("Current Member is :\n");
   pe-&gt;display(pe);
   printf("Replace John Smith with Jane\n");
   pe-&gt;top(pe);
   if (pe-&gt;find(pe,"Smith") == TRUE) {
   pe-&gt;replace_member(pe,&amp;jane);
   }
   else {
      printf("Not Found (Strike a Key)\n"); getch();
   }
   printf("\nRedisplaying phone list:\n");
   pe-&gt;top(pe);
   while( ! pe-&gt;at_end(pe) ) {
      pe-&gt;display(pe); pe-&gt;next(pe);
   }
   pe-&gt;end(pe);
   printf("Total members = %ld\n",pe-&gt;total_members(pe));
   printf("Current member = %ld\n",pe-&gt;tell(pe));
}</pre>
</BODY>
</HTML>

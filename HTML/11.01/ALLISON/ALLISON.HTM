

<HTML>
<HEAD>

<TITLE>January 1993/Code Capsules</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjan.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">Code Capsules<A name="0038_0019"><A name="0038_0019"></font></h2><P>
<h3 align="center"><A name="0038_0000"><A name="0038_0000">Time and Date Processing in C</h3><P>
<h3 align="center"><font color="#800000">Chuck Allison</font></h3><hr><blockquote><P>
<P><i><A name="0038_0000"><A name="0038_0000">Chuck Allison is a software architect for the Family History Department of the Church of Jesus Christ of Latter Day Saints Church<I></I> <I></I>Headquarters in Salt Lake City. He has a B.S. and M.S. in mathematics, has been programming since 1975, and has been teaching and<I></I> <I></I>developing in C since 1984. His current interest is object-oriented technology and education. He is a member of X3J16, the ANSI C++<I></I> <I></I>Standards Committee. Chuck can be reached on the Internet at allison@decus.org, or at (801)240-4510.</i></P><P>
Most operating systems have some way of keeping track of the current date and time. ANSI C makes this information available in various formats through the library functions defined in <I>time.h.</I> The <I>time</I> function returns a value of type <I>time_t</I> (usually a <I>long</I>), which is an implementation-dependent encoding of the current date and time. You in turn pass this value to other functions which decode and format it.<P>
The program in <A href="list1.htm">Listing 1</a>
uses the functions <I>time</I>, <I>localtime</I> and <I>strftime</I> to print the current date and time in various formats. The <I>localtime</I> function breaks the encoded time down into<P>
<pre>struct tm
{
   int tm_sec;     /* (0 - 61) */
   int tm_min;     /* (0 - 59) */
   int tm_hour;    /* (0 - 23) */
   int tm_mday;    /* (1 - 31) */
   int tm_mon;     /* (0 - 11) */
   int tm_year;    /* past 1900 */
   int tm_wday;    /* (0 - 6) */
   int tm_yday;    /* (0 - 365) */
   int tm_isdst;   /* daylight savings flag */
};</pre>
<I>local time</I> overwrites a static structure each time you call it, and returns its address (therefore only one such structure is available at a time in a program without making an explicit copy). The <I>ctime</I> function returns a pointer to a static string which contains the full time and date in a standard format (including a terminating newline). <I>strftime</I> formats a string according to user specifications (e.g., %<I>A</I> represents the name of the day of the week). See <A href="tab1.htm">Table 1</a>
for the complete list of format descriptors.<P>
<h4><FONT COLOR="#000080"><A name="0038_001A">Time/Date Arithmetic<A name="0038_001A"></FONT></h4></P>
You can do time/date arithmetic by changing the values in a <I>tm</I> structure. The program in <A href="list2.htm">Listing 2</a>
shows how to compute a date a given number of days in the future, as well as the elapsed execution time in seconds. Note the optional alternate syntax for the <I>time</I> function (the <I>time_t</I> parameter is passed by reference instead of returned as a value). The <I>mktime</I> function alters a <I>tm</I> structure so that the date and time values are within the proper ranges, after which the day-of-week (<I>tm_wday</I>) and day-of-year (<I>tm_yday</I>) fields are updated accordingly. <I>mktime</I> brings the date and time values in the <I>tm</I> structure into their proper ranges, and updates the day of week (<I>tm-wday</I>) and day of year (<I>tm-yday</I>) values accordingly. This occurs when a date falls outside the range that your implementation supports. My MS-DOS-based compiler, for example, cannot encode dates before January 1, 1970, but VAXC can process dates as early as the mid-1800s. The <I>asctime</I> function returns the standard string for the time represented in <I>tm</I> parameter (so <I>ctime (&amp;tval)</I> is equivalent to as<I>ctime (localtime(&amp;tval))</I>. The function <I>difftime</I> returns the difference in seconds between two <I>time_t</I> encodings as a <I>double</I>.<P>
If you need to process dates outside your system's range or calculate the interval between two dates in units other than seconds, you need to roll your own date encoding. The application in <A href="list3.htm">Listing 3</a>, <a href="list4.htm">Listing 4</a>, and
<A href="list5.htm">Listing 5</a>
shows a technique for determining the number of years, months and days between two dates, using a simple month-day-year structure. It subtracts one date from another, much as you might have done in elementary school (i.e., it subtracts the days first, borrowing from the month's place if necessary, and so on). Note that leap years are taken into account. For brevity, the <I>date_interval</I> function assumes that the dates are valid and that the first date entered precedes the second. Following the lead of the functions in <I>time.h</I>, It returns a pointer to a static <I>Date</I> structure which holds the answer.<P>
<h4><FONT COLOR="#000080"><A name="0038_001B">File Time/Date Stamps<A name="0038_001B"></FONT></h4></P>
Most operating systems maintain a time/date stamp for files. At the very least, you can find out when a file was last modified. (The common <I>make</I> facility uses this information to determine if a file needs to be recompiled, or if an application needs to be relinked). Since file systems vary across platforms, there can be no universal function to retrieve a file's time/date stamp, so the ANSI standard doesn't define one. However, most popular operating systems (including MS-DOS and VAX/VMS) provide the UNIX function <I>stat</I>, which returns pertinent file information, including the time last modified expressed as a <I>time_t</I>. The program in <A href="list6.htm">Listing 6</a>
uses <I>stat</I> and <I>difftime</I> to see if the file <I>time1.c</I> is newer than (i.e., was modified more recently than) <I>time2.c</I>.<P>
If you need to update the time/date stamp of a file to the current time, simply overwrite the first byte of a file with itself. Although the contents haven't changed, your file system will think it has, and will update the time/date stamp accordingly. (Know your file system! Under VAX/VMS, you get a newer version of the file, while the older version is retained). This is sometimes called "touching" a file. The implementation of <I>touch</I> in <A href="list7.htm">Listing 7</a>
creates the file if it doesn't already exist. Note that the file is opened in "binary" mode (indicated by the character <I>b</I> in the open mode string &#151; I'll discuss file processing in detail in a future capsule).<P>

<h4><a href="../../../source/1993/jan93/allison.zip">Get Article Source Code</a></h4>

</BLOCKQUOTE>
</BODY>
</HTML>

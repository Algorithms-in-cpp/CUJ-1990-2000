<HTML><HEAD>
<TITLE>January 1993/Code Capsules/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4 <B></B>date_int.c &#151; <B><I></B>computes time interval between two dates</I></A></h4>
<pre>/* date_int.c: Compute duration between two dates */

#include "date.h"

#define isleap(y) \
 ((y)%4 == 0 &amp;&amp; (y)%100 != 0 || (y)%400 == 0)

static int Dtab [2][13] =
{
  {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
  {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
};

Date *date_interval(const Date *d1, const Date *d2)
{
   static Date result;
   int months, days, years, prev_month;

   /* Compute the interval - assume d1 precedes d2 */
   years = d2-&gt;year - d1-&gt;year;
   months = d2-&gt;month - d1-&gt;month;
   days = d2-&gt;day - d1-&gt;day;

   /* Do obvious corrections (days before months!)
    *
    * This is a loop in case the previous month is
    * February, and days &lt; -28.
    */
   prev_month = d2-&gt;month - 1;
   while (days &lt; 0)
   {
      /* Borrow from the previous month */
      if (prev_month == 0)
         prev_month = 12;
      --months;
      days += Dtab[isleap(d2-&gt;year)][prev_month--];
   }

   if (months &lt; 0)
   {
      /* Borrow from the previous year */
      --years;
      months += 12;
   }

   /* Prepare output */
   result.month = months;
   result.day = days;
   result.year = years;
   return &amp;result;
}
/* End of File */
</pre>
</BODY>
</HTML>




<HTML><HEAD>

<TITLE>March 1998/Creating a Virtual Listbox with MAPI/Listing 4</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 4: On every access, the LRU algorithm ages each page except for the ``hit'' page, which is made the youngest. UpdateCache then knows which page is oldest if a page must be evicted</A></h4>


<pre>
void CPageCache :: AgeCache(int iHit)
{
  for (int i = 0; i &lt; CACHE_SIZE; i++)
    if (m_iCachedPages[i][PT_IDX] == iHit).
      // make younger
      m_iCachedPages[i][AGE] = 0;
    else
      m_iCachedPages[i][AGE]++;
}

void CPageCache :: UpdateCache(int iNewPageIdx)
{
  int iOld = 0;

  for (int i = 0; i &lt; CACHE_SIZE; i++)
  {
    // if there's room in cache,grab first space
    if (m_iCachedPages[i][PT_IDX] &lt; 0)
    {
      iOld = i;
      break;
    }
    // search for oldest page
    if (m_iCachedPages[i][AGE] &gt; m_iCachedPages[iOld][AGE])
      iOld = i;
  }

  if (m_iCachedPages[iOld][PT_IDX] &gt;= 0)
    PageOut(m_iCachedPages[iOld][PT_IDX]);  

  m_iCachedPages[iOld][PT_IDX] = iNewPageIdx;
  m_iCachedPages[iOld][AGE]  = 0;
}
//End of File
</pre>
</body></html>








<HTML>
     
     <HEAD>
          <TITLE>January 1997/C/C++Sources</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BODY BGCOLOR="#FFFFFF">
          <H2><A href="../tocjan.htm"><IMG src="../../toc.gif" ALT="Back to TOC" WIDTH="54" HEIGHT="54"></A>
          <FONT COLOR="#FF0000">Columns</FONT></H2>
          
          <HR>
          
          <H2 ALIGN="CENTER"><FONT COLOR="#800000">C/C++Sources</FONT></H2>
          
          <H3 ALIGN="CENTER"><FONT COLOR="#800000">Victor R. Volkman</FONT></H3>
          
          <H3 ALIGN="CENTER"><FONT COLOR="#800000">Cross-Platform Resources on
          the Web</FONT></H3>
          <BLOCKQUOTE>
          <P>Supporting an application on more than one host? Compiling for a
               minimalist embedded system? You need all the help the web can
               supply.</P></BLOCKQUOTE>
          <HR>
          <BLOCKQUOTE>
               
               <H4><FONT COLOR="#000080">Introduction</FONT></H4>
               
               <p>As editor of C/C++ Sources, my charter
                    is to seek out the best tools and source code available to
                    you on the Internet. From now on, I'll be focusing on two
                    different themes in each installment. In each case, I will
                    bring you the most relevant pages available in several
                    categories:</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkman1.gif">
                    Web pages which document a library or tool and include hot
                    links to its C/C++ source code</p>
               
               <p><IMG HEIGHT="20" WIDTH="16" src="volkman2.gif">
                    Detailed documentation concerning an important API or
                    protocol</p>
               
               <p><IMG HEIGHT="22" WIDTH="17" src="volkman3.gif">
                    Web pages which organize, categorize, or rank the best
                    freeware and shareware libraries and tools for use with
                    C/C++</p>
               
               <H4><FONT COLOR="#000080">Focus on
               Cross-Platform Development</FONT></H4>
               
               <p>Ask any developer who has delivered
                    the same application on two significantly different
                    platforms (e.g. Windows NT and UNIX) and they will tell you
                    that maintaining a common set (or at least subset) of source
                    code is crucial to both maintenance and development.
                    Although C and C++ are built around solidly defined and
                    portable runtime libraries, these libraries fall short of
                    meeting real-world interface requirements such as GUI,
                    windowing, bitmaps, and client/server communication. The
                    choices for cross-platform developers are stark and
                    uninviting: develop your own compatibility layers (a vast
                    and endless job) or stake the future of your company on a
                    third-party library vendor. In several years of
                    cross-platform development experience on MS-DOS, Windows,
                    UNIX, and IBM mainframes I've seen the best and worst of both
                    approaches.</p>
               
               <p>In this focus segment, I'll give you a
                    few pointers to get you started in evaluating both freeware
                    and commercial compatibility libraries and tools. For those
                    of you who have yet to embark on a cross-platform project, I
                    recommend Steven Mikes whitepaper entitled "Are you
                    REALLY Ready for Cross-Platform Development?":</p>
               
               <p><IMG HEIGHT="21" WIDTH="16" src="volkman4.gif">
                    http://landru.unx.com/DD/solutions/docs/aug95/aug95.mikes.shtml</p>
               
               <p>The R2M Software company maintains the
                    "Cross Platform Development Internet Resources"
                    pointers page, which is a small subset of their mammoth "Internet
                    Resources for Windows Developers Index." The
                    cross-platform page bridges both freeware and commercial
                    libraries, including several that I'll be mentioning later in
                    this column: wxWindows, V, WINE, YACL, and more:</p>
               
               <p><IMG HEIGHT="22" WIDTH="18" src="volkman5.gif">
                    http://www.r2m.com/windev/cross-platform.html</p>
               
               <p>(You can read more about wxWindows, V,
                    and YACL in Jamie Guinans article, "Platform-Independent
                    GUI Toolkits," elsewhere in this issue.)</p>
               
               <p>Eric Bennett has created "The
                    Cross-Platform Page: Index," which is an invaluable
                    resource for locating multimedia players on all platforms.
                    Bennett includes links to audio, graphics, video/movie, and
                    compression tools. Need an MPEG player for UNIX? A .MOD
                    audio player for your Apple IIgs? A "tar"
                    extractor for your Macintosh? This page includes links to
                    download many of these programs (some of which have source
                    availability, all of which are freeware or shareware).</p>
               
               <p><IMG HEIGHT="21" WIDTH="18" src="volkman6.gif">
                    http://VTGinc.com/ebennett/xplat/xplat.html</p>
               
               <H4><FONT COLOR="#000080">Cross-Platform Freeware and Shareware</FONT></H4>
               
               <p>Julian Smart runs the "wxWindows
                    Home Page," which organizes the documentation and FTP
                    links for this platform-independent C++ GUI library. The
                    wxWindows library has no restrictions on its use in
                    commercial products. Applications built with wxWindows can
                    run on Motif, Open Look, Windows 3.1, and Windows NT. On the
                    PC it supports Microsoft VC++, Borland C++ 3.1/4.0, and
                    Symantec C++. On UNIX platforms you need XView 3.x or Motif
                    1.2.x and GNU G++ (or compatible compiler). An active and
                    helpful mailing list helps support wxWindows; send e-mail to wxwin-users-request@aiai.ed.ac.uk to
                    subscribe. First, read the FAQ and other information:</p>
               
               <p><IMG HEIGHT="19" WIDTH="19" src="volkman7.gif">
                    http://www.aiai.ed.ac.uk/~jacs/wxwin.html</p>
               
               <p>Dr. Bruce E. Wampler has created "V,"
                    a portable C++ GUI Framework intended to support a wide
                    variety of applications on different graphical interface
                    platforms. Applications developed using V will have the look
                    and feel of the native platform, yet will be portable across
                    platforms. V supports most standard GUI objects, including
                    windows with menus, status bars, tool bars, and a drawing
                    canvas; modal and modeless dialogs with the most common
                    controls; and portable printing support. Basic support is
                    available now for X Windows and versions for Windows 95 and
                    NT should be available by the time you read this. An OpenGL
                    add-on is currently in beta testing.</p>
               
               <p><IMG HEIGHT="19" WIDTH="19" src="volkman8.gif">
                    http://www.cs.unm.edu/~wampler/</p>
               
               <p>Dag Asheim maintains the "WINE
                    Project" page, a resource linking documentation and
                    code for this freeware MS-Windows API emulation library.
                    Wine is an emulator that allows MS-Windows applications to
                    run on Intel-based UNIX systems (currently NetBSD, FreeBSD,
                    SCO OpenServer, Unixware, and Linux) running X11. As a
                    library it will allow the use of the Windows API for
                    Unix/X11. Wines license is similar to BSD Unixs. Wine is
                    similar in goals to SunSofts Wabi product, and to Willows
                    Softwares TWIN XPDK product. Wine is still alpha code, and
                    as such may work to varying degrees of success on your
                    system.</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkman9.gif">
                    http://www.linpro.no/wine/</p>
               
               <p>M.A. Sridhar publishes the "Yet
                    Another Class Library (YACL)" resource page supporting
                    this cross-platform library. YACL is a C++ class library
                    that offers high-level abstractions for common programming
                    problems. Its design goal is twofold: to be
                    application-centric and to take advantage of C++ facilities
                    (e.g. operator overloading and templates) wherever possible.
                    YACL implements both scalar (string, integer, date, etc.)
                    and container (sequence, set, tree, etc.) core classes. All
                    of these classes support passivation (i.e. stream-friendly
                    I/O methods). The GUI classes are based on a variation of
                    the model view controller (MVC) paradigm. The YACL
                    application framework supports the widest variety of
                    compilers and OSes I've ever seen in a freeware library,
                    including Windows 3.1, Windows NT, OS/2 2.x and 3.0, SGI,
                    SUN, Ultrix, Linux, RS/6000, and HP-UX.</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma10.gif">
                    http://www.cs.sc.edu/~sridhar/yacl.html</p>
               
               <H4><FONT COLOR="#000080">Cross-Platform Commercial Software</FONT></H4>
               
               <p>The mission-critical nature of
                    cross-platform projects often requires access to a highly
                    responsive software support team and implementation on a
                    wide range of platforms. Commercial cross-platform products
                    are the best choice to fill this niche, even though their
                    prices can be steep. Heres a sampling of links to commercial
                    product websites, which will give you an idea of their
                    platform specialities at the very least. No vendor has been
                    intentionally omitted.</p>
               
               <p>http://www.willows.com</p>
               
               <p>http://www.visix.com</p>
               
               <p>http://www.xvt.com</p>
               
               <p>http://www.vedge.com</p>
               
               <p>http://www.bristol.com</p>
               
               <p>http://www.unify.com</p>
               
               <p>http://www.synervision.com/dvtool.htm</p>
               
               <p>http://www.blackwhite.com/products/cpt.html</p>
               
               <H4><FONT COLOR="#000080">Focus on Real-Time/Embedded Systems</FONT></H4>
               
               <p>Embedded systems are everywhere;
                    arguably, they are just as prevalent as desktop systems,
                    though they dont get as much attention and glamour in the
                    press. The consulting firm of Embedded Systems Ltd.
                    (Coventry, UK) suggests that our familiarity with desktop
                    computer systems may lead us to incorrectly assume that the
                    majority of microcomputer chips manufactured end up in
                    desktop systems. Most microcomputers are  actually used
                    within embedded systems that is, systems that perform some
                    other function. Examples include computers within
                    automobiles, microwave ovens, VCRs, elevators, answering
                    machines, and much more.</p>
               
               <p>The nature of embedded systems
                    development is such that development and debugging
                    facilities on the target system may be minimal or
                    non-existent. Therefore, cross-assemblers, cross-compilers,
                    and emulators are the tools of the trade for the embedded
                    systems developer.</p>
               
               <p>Embedded Systems Ltd. provides a
                    freeware assembler for Motorolas new 68HC12 family of
                    microcontrollers. They describe this assembler as follows:</p>
               
               <p>This is still under development, but
                    the current version could be useful for evaluation purposes,
                    and there doesnt seem to be much free/cheap support out
                    there. Its designed to run under MS-DOS but could be ported
                    to Windows 3.x if there's enough interest. Download it and
                    try it out. All we ask is that you e-mail us a report
                    detailing any bugs that you find and any improvements that
                    you feel would be useful.</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma11.gif">
                    http://www.embedded-systems.ltd.uk/software/index.htm</p>
               
               <p>Douglas Beatties "MA65" 6502
                    cross-assemblers produce native 6052 code and are available
                    for both MS-DOS and CP/M-Z80 environments. This is a
                    full-featured macro assembler featuring macro nesting up to
                    25 levels, long labels, conditional assembly, and C-style
                    arithmetic operators. MA65 can generate object code in
                    Motorola S-records, binary image, or Intel HEX records.
                    Available reports include symbol table, cross-reference,
                    cycle  count, and classic op-code listing.</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma12.gif">
                    http://www.whidbey.net/~beattidp/comput/x65tools/</p>
               
               <p>Dave Dunfield (Nepean, Ontario,
                    Canada) supports an entire suite of "small" C
                    compiler tools from the MICRO-C development system. This
                    suite includes the MICRO-C C compiler itself for MS-DOS,
                    many sample C programs, and a demonstration version of
                    MICRO-C for embedded systems.</p>
               
               <p>MICRO-C is a tiny compiler which can
                    run with less than 32k RAM and yet it remains highly
                    independent of CPU and OS. Specifically, MICRO-C provides
                    separate support for 68HC08, 6809, 68HC11, 68HC16, 8051/52,
                    8080/8085, 80x86, and 8096 CPUs. Dunfields suite also
                    includes a fully functional MICRO-C compiler executable
                    built for the MS-DOS 80x86 environment. This version
                    generates code in .ASM format so Microsoft MASM, Borland
                    TASM, or equivalent are required (not included). MICRO-C is
                    available on SIMTEL and mirrors (see "C/C++ Mailbag"
                    later in this column).</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma13.gif">
                    ftp://oak.oakland.edu/pub/simtelnet/msdos/c/mc302emb.zip</p>
               
               <p>Dunfield also provides some free
                    utilities which may be of interest to embedded systems
                    developers. His "Functions for DOS-less Embedded PC
                    applications" archive is designed to help you write
                    code for PC hardware that runs without an operating system.
                    Some of the subsystems included are:</p>
               <UL><LI> MKBOOT: installs a custom boot
                         loader to execute a program directly from floppy disk
                         (no COMMAND.COM, etc.) </FONT></LI>
                    <LI> MDCFS: C source for a "Minimal
                         DOS Compatible File System," including functions
                         that allow you to read and write to DOS-format disks
                         without DOS </FONT></LI>
                    <LI> WINDOW: a very small ASM and C
                         library for text-based windowing </FONT></LI>
                    <LI> JOYSTICK: reads the digital and
                         analog inputs of the PCs game port </FONT></LI>
               </UL>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma14.gif">
                    ftp://oak.oakland.edu/pub/simtelnet/msdos/crossasm/embedpc.zip</p>
               
               <p>SIMTEL contains far more
                    cross-assembly tools than I could possibly list in this
                    column. Suffice it to say that SIMTEL supports each of the
                    following microprocessors with at least one freeware or
                    shareware package:</p>
               <UL><LI> Motorola: 68HC705, 68HC11,
                         68000, M6800, M6801, M6802, M6803, M6805, M6809 </FONT></LI>
                    <LI> Intel: 8031, 8048, 8049, 8050,
                         8051, 8085, 8748, 8749, 8751 </FONT></LI>
                    <LI> RCA: 1802, 1804, 1805, 1806
                         </FONT></LI>
                    <LI> Zilog: Z-80 </FONT></LI>
                    <LI> MOS Technology: 6502, 6510,
                         65C02 </FONT></LI>
               </UL>
               
               <p>Check the index for the latest list of
                    what's available:</p>
               
               <p><IMG HEIGHT="19" WIDTH="18" src="volkma15.gif">
                    ftp://oak.oakland.edu/pub/simtelnet/msdos/crossasm/00_index.txt</p>
               
               <p>In that same directory, youll find
                    xasm220.zip, a set of 12 cross assemblers for 65xx, 68xx,
                    80xx CPUs.</p>
               
               <p><IMG HEIGHT="20" WIDTH="16" src="volkma16.gif"></p>
               
               <H4><FONT COLOR="#000080">A C++ Tutorial</FONT></H4>
               
               <p>The "C++ Tutorials" page by
                    Glen McCluskey &amp; Associates provides a fresh perspective
                    on the C++ language in a highly organized topic tree. With
                    the help of this page, beginning C++ programmers can ease
                    into the language through "C++ as a Better C."
                    Developers with more experience will appreciate
                    clarifications of ANSI/ISO changes. For example, the essay
                    on "Extern Inline Functions" brought me up to date
                    on an area that had undergone a lot of change since I first
                    learned about it.</p>
               
               <p>http://rmi.net/~glenm/tutor.html</p>
               
                 </BLOCKQUOTE>
<P><I>Victor R. Volkman received a BS in Computer Science from Michigan Technological University. He has been a frequent contributor to the C/C++ Users Journal since 1987. He is the author of the book Windows Programming with Shareware Tools. He can be reached at the HAL 9000 BBS (313)663-4173, URL http://www.HAL9K.com/home.htm, or email to sysop@hal9k.com.</FONT></I></P>
     </BODY>
</HTML>

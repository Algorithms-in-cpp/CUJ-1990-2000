



<HTML><HEAD>

<TITLE>January 1997/A Template Implementation of Skip Lists/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<p><B>Listing 1:  Classes SLPosition and SkipList</B></p>

<pre>

#include &lt;stdlib.h&gt;
#include &lt;assert.h&gt;
const int SLMAX_LEVEL = 15;

template &lt;class DATA, class KEY&gt;
class Skiplist;   // forward declaration for friend statement

template &lt;class DATA, class KEY&gt;
class SLPosition
{
    DATA *data;
    KEY  key;
    SLPosition&lt;DATA,KEY&gt; **forward;
public:
     SLPosition( int level );
     SLPosition( int level, DATA *cdata, const KEY &amp;ckey );
    ~SLPosition()
    {
         // note that we don't delete data as we can't tell who else
        // might have a pointer to it
        delete [] forward;
    }
    friend class Skiplist&lt;DATA,KEY&gt;;
};

template &lt;class DATA, class KEY&gt;
class Skiplist
{
    SLPosition&lt;DATA,KEY&gt; head;
    int level;  // the number of lists in the skiplist
    int rand_level();
public:
    Skiplist();
    void insert( DATA *data, const KEY &amp;key );
    DATA * remove( const KEY &amp;key );
    DATA * find( const KEY &amp;key );
};
/* End of File */
</pre>
</body></html>

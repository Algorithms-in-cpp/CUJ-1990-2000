

<HTML>
<HEAD>

<TITLE>March 1994/CUG New Releases</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocmar.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">CUG New Releases<A name="00A6_0049"><A name="00A6_0049"></font></h2><P>
<h3 align="center"><A name="00A6_0000"><A name="00A6_0000">IOCCC, ASXXXX, MINED, TDE Update, and a Bug Fix</h3><P>
<h3 align="center"><font color="#800000">Victor R. Volkman</font></h3><hr><blockquote><P>
<P><i><A name="00A6_0000"><A name="00A6_0000">Victor R. Volkman received a BS in Computer Science from Michigan Technological University. He has been a frequent contributor to The C Users Journal since 1987. He is currently employed as Senior Analyst at H. C.I.A. of Ann Arbor, Michigan. He can be reached by dial-in at the HAL 9000 BBS (313) 663-4173 or by Usenet mail to sysop@hal9k.com.</i></P><P>
<h4><FONT COLOR="#000080"><A name="00A6_004A">CUG Library Volume IV<A name="00A6_004A"></FONT></h4></P>
CUG Library proudly announces volume IV of its directory of user-supported C source code. This latest effort thoroughly catalogs CUG Library volume numbers #300 through #349. Volume IV includes both exhaustive reviews of selected volumes plus capsule summaries of all volumes. In all, this amounts to more than 250 cross-referenced and indexed pages of information. Volume IV can be yours for $10 or order the set of volumes I through IV for just $28 total. As always, see the order blank in the center portion of this issue.<P>
<h4><FONT COLOR="#000080"><A name="00A6_004B">Bug Fix for GNUPlot, CUG #334<A name="00A6_004B"></FONT></h4></P>
Arild Olsen &lt;<I>d_olsen_o@kari.uio.no</I>&gt; writes:<P>
"I just received the disk, and the HPLJII-driver does not function, as stated by R.T. Stevens in his review (CUJ, June 93). Maybe this is due to an incompatibility between HP LaserJet II and III; I have a LJ III. When sending a bitmap to the printer, the program specifies TIFF-format. This is not correct since the bitmap is plain.<P>
To solve this, edit the <I>HPLJIItext</I> function in the HPLJII driver. The string "<I>\033*b2m%dW</I>" should be changed to "<I>\033*b0m%dW</I>".<P>
<h4><FONT COLOR="#000080"><A name="00A6_004C">New Acquisitions and Updates<A name="00A6_004C"></FONT></h4></P>
This month we present three additions to the CUG Library, as well as an update to a recently featured volume.<P>
<UL><li>International Obfuscated C Code Contest (CUG #397)</li>
<li>ASxxxx Cross Assembler - Part 3 (CUG #398): MC 68HC08 CPU support</li>
<li>MINED Editor: (CUG #399)</li>
<li>Thomson-Davis Editor (CUG #386 update): multi-window text/binary file editor &#151; new version 3.2A</li></UL>
<h4><FONT COLOR="#000080"><A name="00A6_004D">International Obfuscated C Code Contest 1984-1993: CUG #397<A name="00A6_004D"></FONT></h4></P>
Landon Noll (Sunnyvale, CA) submits a decade of source code from the International Obfuscated C Code Contest (IOCCC). This contest has long been a favorite of many <I>CUJ</I> readers. The entire IOCCC archive from 1984-1993 is now available as a two-diskette set from the CUG Library. Obfuscation implies purposefully obscuring and confusing a situation. Why obfuscate C code? The official IOCCC states its objectives as follows:<P>
<UL><li>To show the importance of programming style, in an ironic way.</li>
<li>To <I>stress</I> C compilers by feeding them unusual code.</li>
<li>To illustrate some of the subtleties of the C language.</li>
<li>To provide a safe forum for poor C code.</li></UL>
Recently, Bob van der Poel reviewed Don Libes' book entitled <I>Obfuscated C and Other Mysteries</I> (see <I>CUJ</I>, October 1993, pp. 131-132). The diskette for this book includes IOCCC entries from 1984-1991. Libes has produced special reports about the IOCCC several times in <I>CUJ</I>. Please see the following back issues for more detail:<P>
Libes, Don. "Don't Put This on Your Resume," <I>CUJ</I>, May 1991, p. 89.<P>
Libes, Don. "The Far Side of C," <I>CUJ</I>, May 1990, p. 125.<P>
Libes, Don. "The International Obfuscated C Code Contest," <I>CUJ</I>, July 1989, p. 93.<P>
The CUG Library volume #397 contains the full IOCCC archive including two additional years not included in the Libes' book.<P>
In addition to dozens and dozens of obfuscated C programs, the archive includes complete rules and guidelines so you can submit your own entries into next year's contest. Some of the obfuscated programs are quite useful, including scaled-down versions of make, grep, and various editors.<P>
<h4><FONT COLOR="#000080"><A name="00A6_004E">ASxxxx Cross Assembler - Part 3: CUG 398<A name="00A6_004E"></FONT></h4></P>
Cross assemblers continue to play an important role in the CUG Library. A cross assembler reads assembly language source code for a non-native CPU and writes object code that can be linked and downloaded to the target machine for execution. Embedded systems developers are the most frequent users of cross assemblers. This month, Alan R. Baldwin (Kent State University, Ohio), adds his third cross assembler to the CUG Library's repetoire. ASxxxx Part 3 provides a complete Motorola 68HC08 development system. ASxxxx Part 3 version 1.50 (released 8/9/93) is immediately available as CUG volume #398.<P>
The CUG distribution of ASxxx Part 3 includes MS-DOS executables for the ASxxxx Cross Assembler and Linker. However, if you want to recompile the Cross Assembler or Linker, you'll also need ASxxxx Part 1 (CUG #292). ASxxx Part 2 contains cross assembler source files for the 6816 CPU. The ASxxxx family of cross assemblers can be built on DEC machines running DECUS C in the TSX+ environment or PDOS C v5.4b under RT-11. ASxxxx has been built with Borland C++ v3.1 under MS-DOS and includes a project (.PRJ) file. Although only these implementations have been specifically tested, Baldwin claims many other K&amp;R C compilers may work as well.<P>
ASxxxx Part 3 includes a comprehensive 80-page manual covering functionality provided by all three existing ASxxxx cross assemblers and linkers. The documentation lays out the exact specifications of syntax for symbols, labels, assembler directives, and expressions in detail. The manual includes appendices with instruction set highlights and supported syntax for Motorola 6800, 6801, 6804, 6805, 68HC08, 6809, 6811 6816, Intel 8080 and 8085, and Zilog Z80 and HD64180 CPUs.<P>
The ASxxxx assembler falls short of full macro implementation, but does include a host of important features such as: if/then/else, <I>#include</I> files, radix support from binary to hexadecimal, and a full complement of C-language operators for expressions. The ASxxxx linker goes beyond conventional loaders by resolving intermodule symbols, combining code into segments, relocating absolute symbols and base addresses, and producing either Intel HEX or Motorola S19 output files.<P>
<h4><FONT COLOR="#000080"><A name="00A6_004F">MINED Editor: CUG #399<A name="00A6_004F"></FONT></h4></P>
MINED, by Thomas Wolff (Freie Universitt Berlin, Institut fr Informatik, Germany), is a modeless full-screen text editor. MINED was originally written for MINIX and now works with most UNIX platforms as well as MS-DOS, and DEC VAX-11/VMS. MINED works best at editing small files (50K or less) and can edit many files simultaneously. Unlike other editors which have separate command modes and input modes, MINED uses a modeless design for ease of use. It also includes powerful regular expression operations for both searching and replacing text. MINED Version 3 (released 08/04/93) is immediately available as CUG volume #399.<P>
<h4><FONT COLOR="#000080"><A name="00A6_0050">Thompson-Davis Editor Update: CUG #386<A name="00A6_0050"></FONT></h4></P>
The Thomson-Davis Editor, as provided by Frank Davis (Tifton, GA), is a multi-file/multi-window binary and text file editor written for IBM PCs and close compatibles. Thomson-Davis Editor (TDE) works well with batch files, binary files, text files, and various computer language source code files. TDE can handle any size of file and any number of windows that fit in conventional DOS memory.<P>
Davis reports the following enhancements since TDE was last released to the CUG Library:<P>
<UL><li>Pop-up pull-down command menu = &lt;CTRL&gt;+\</li>
<li>More Language support, thanks to Byrial Jensen, &lt;<I>byrial@daimi.aau.dk</I>&gt;</li>
<li>TDE ported to Linux (POSIX, SVR4, BSD4.3+?, FIPS 151-1, etc.)</li>
<li>A bug (a blunder, actually) got fixed in the 3.1 config utility.</li>
<li>Linux FAQs and HOWTOs</li>
<li>New regular expression meta characters: &lt; = Empty string at beginning of word; &gt; = Empty string at end of word</li></UL>
<h4><FONT COLOR="#000080"><A name="00A6_0051">Non-English Language Support<A name="00A6_0051"></FONT></h4></P>
Byrial Jensen contributed several functions to TDE that are useful with non-English languages. Using these functions, DOS filenames can contain extended ASCII characters. As a result, the <I>dirlist</I> function in TDE (which sorts filenames according to the sort order array) can be customized to your favorite alphabet. Byrial also contributed two new macro functions that look at the Caps Lock key: <I>IfCapsLock</I> and <I>IfNotCapLock</I>. Other changes supporting non-English usage are as follows: predefined regular expression macros may be redefined; all editor prompts have been gathered into <I>prompts.h;</I> response letters have been gathered into <I>letters.h;</I> and the window letters can be changed to follow a non-English alphabet.<P>
<h4><FONT COLOR="#000080"><A name="00A6_0052">Improved Regular Expression Handling<A name="00A6_0052"></FONT></h4></P>
Davis writes: "I use the regular expression search much more often than I first anticipated. A couple of features missing in the original implementation are the beginning-of-word and end-of-word metacharacters. These metacharacters really come in handy for culling prefixes and suffixes from the search. Here's our new regular expression table: [Please refer to <A href="tab1.htm">Table 1</a>]
"<P>
TDE version 3.2a (Released 11/15/93) immediately replaces version 3.0 and is available as CUG Library volume #386.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

<HTML><HEAD>
<TITLE>March 1994/Weight Reduction Techniques in C++/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <I>A linked list for the memory pool</A></I></h4>
<pre>#include "mempool.h"
#include &lt;fstream.h&gt;
#include &lt;string.h&gt;

class Link {
  char *data;
  Link *next;
  static MemoryPool pool;
public:
  friend class List;
  friend class Iterator;
  Link(const char *_data,
    Link *_next)
  {
    next =_next;
    data = strcpy(new
      char[strlen(_data)+1],
      _data);
  }
  ~Link()
  {
    delete data;
  }
  void *
    operator new(size_t)
  {
    return pool.malloc();
  }
  void
    operator delete(void *ptr)
  {
    pool.free(ptr);
  }
};

MemoryPool
Link::pool(sizeof(Link));

class List {
  Link head;
public:
  friend class Iterator;
  List ();
  -List();
  void add(char *data);
};

class Iterator {
  Link *link;
public:
  Iterator(List &amp;_list)
  {
    link = _list.head.next;
  }
  char *Next()
  {
    char *ret = link ?
      link-&gt;data : NULL;
    link = link-&gt;next;
    return ret;
  }
};

List::List()
  : head("",NULL)
{
  ;
}

List::~List()
{
  while(head.next)
  {
    Link *temp =
      head.next-&gt;next;
    delete head.next;
    head.next = temp;
  }
}

void List::add(char *data)
{
  head.next = new
    Link(data,head.next);
}

main(int, char **argv)
{
static char buff[1024];
  List list;
  ifstream in(argv[1]);
  while(in.getline(buff,
    sizeof(buff)))
    list.add(buff);
  Iterator it(list);
  char *ptr;
  while((ptr = it.Next()) !=
    NULL)
    cout &lt;&lt; ptr &lt;&lt; endl;
}

// End of File</pre>

</BODY>
</HTML>

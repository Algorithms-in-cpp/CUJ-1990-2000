<HTML><HEAD>
<TITLE>March 1994/Weight Reduction Techniques in C++/Figure 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Figure 3<I> Inlining virtual functions</A></I></h4>
<pre>class Base {
public:
  virtual void print()
    { printf("Base"); }
};

class Derived1 : public Base {
public:
  virtual void print()
    {
// Base::print() can be inlined
      Base::print();
      printf("Derived1");
    }
};

class Derived2 : public Base {
public:
  virtual void print()
    {
// Base::print() can be inlined
      Base::print();
      printf("Derived2");
   }
};

void function(Base *bp)
{
// Doesn't know whether
// to call Derived1::print()
// or Derived2::print(),
// won't inline:
  bp-&gt;print();

// Forced to call Base::print(),
// can inline:
  bp-&gt;Base::print();
  Derived1 d1o;
// Forced to call
// Derived1::print(), can
// inline:
  d1o.print();
}

// End of File</pre>
</BODY>
</HTML>

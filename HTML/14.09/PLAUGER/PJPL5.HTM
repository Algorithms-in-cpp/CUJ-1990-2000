



<HTML><HEAD>

<TITLE>September 1996/Standard C/C++/Listing 5</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 5:	Transforming Template Functions</h4>

<pre>

// TEMPLATE FUNCTION for_each
template&lt;class InIt, class Fun&gt; inline
    Fun for_each(InIt first, InIt last, Fun op)
    {for (; first != last; ++first)
        op(*first);
    return (op); }

// TEMPLATE FUNCTION generate
template&lt;class FwdIt, class Fun&gt; inline
    void generateFFwdIt first, FwdIt last, Fun fun)
    {for (; first != last; ++first)
        *first = fun(); }

// TEMPLATE FUNCTION generate_n
template&lt;class OutIt, class Diff, class Fun&gt; inline
    void generate_n(OutIt first, Diff n, Fun fun)
    {for (; 0 &lt; n; --n, ++first)
        *first = fun(); }

// TEMPLATE FUNCTION transform WITH UNARY OP
template&lt;class InIt, class OutIt, class Unop&gt; inline
    OutIt transform(InIt first, InIt last, OutIt x, Unop unop)
    {for (; first != last; ++first, ++x)
        *x = unop(*first);
    return (x); }

// TEMPLATE FUNCTION transform WITH BINARY OP
template&lt;class InIt1, class InIt2, class OutIt, class Bop&gt; inline
    OutIt transform(InIt1 first1, InIt1 last1, InIt2 first2,
        OutIt x, Bop op)
    {for (; first1 != last1; ++first1, ++first2, ++x)
        *x = op(*first1, *first2);
    return (x); }
//End of File
</pre>
</body></html>



<HTML>
<HEAD>

<TITLE>January 1995/CUG New Releases</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tocjan.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Columns</FONT></H2>

<hr><h2 align="center"><font color="#800000">CUG New Releases<A name="0030_0017"><A name="0030_0017"></font></h2><P>
<h3 align="center"><A name="0030_0000"><A name="0030_0000">MICRO-C, MIMEQP, BSPline, and More</h3><P>
<h3 align="center"><font color="#800000">Victor R. Volkman</font></h3><hr><blockquote><P>
<P><i><A name="0030_0000"><A name="0030_0000">Victor R. Volkman received a BS in Computer Science from Michigan Technological University. He has been a frequent contributor to C/C++ Users Journal since 1987. He is currently employed as Senior Analyst at H.C.I.A. of Ann Arbor, Michigan. He can be reached by dial-in at the HAL 9000 BBS (313) 663-4173 or by Usenet mail to sysop@hal9k.com.</i></P><P>
<h4><FONT COLOR="#000080"><A name="0030_0018">New Acquisitions<B><A name="0030_0018"></B></FONT></h4></P>
MICRO-C (CUG #422): MICRO-C C compiler for the PC, over 70 example programs for use with MICRO-C, and demonstration compiler for embedded systems with simulators.<P>
RECIO, MIMEQP, ACCTPOST, RDCF, and BSPLINE (CUG #423): a bevy of tools from authors from around the U.S., including:<P>
<UL><li>Stream-style record I/O</li>
<li>MIME binary encode/decode for email</li>
<li>General ledger posting w/32-bit arithmetic library for MS-DOS</li>
<li>Re-entrant DOS-Compatible File System for embedded systems</li>
<li>Classic BSPLINE rendering algorithm</li></UL>
<h4><FONT COLOR="#000080"><A name="0030_0019">CUG #422: MICRO-C C Compiler<A name="0030_0019"></FONT></h4></P>
Dave Dunfield (Nepean, Ontario, Canada) submits an entire suite of tools from the MICRO-C C compiler development system. This submission includes the MICRO-C C compiler itself (for MS-DOS), more than 70 useful sample programs with full C source, and a demonstration version of MICRO-C for embedded systems. MICRO-C is a tiny compiler which can run in less than 32Kb of RAM, yet is highly independent of CPU and OS. Other distributions of this compiler will run on 68HC08, 6809, 68HC11, 68HC16, 8051/52, 8080/8085, and 8096 CPUs. The CUG Library distribution includes a fully functional MICRO-C compiler executable, built for the MS-DOS 80x86 environment. This version generates code in .ASM format, so Microsoft MASM, Borland TASM, or equivalent are required (not included). MICRO-C version 3.02 (as released on 03/22/94) is immediately available as CUG#422 in a set of four diskettes.<P>
MICRO-C provides much more functionality than Small-C and its many derivatives. Specifically, MICRO-C supports all C statements, operators, and preprocessor directives as well as inline assembly code. MICRO-C includes data types for <I>int, char, unsigned, struct, union,</I> pointers, and typecasting. In other words, MICRO-C gives you everything possible except for <I>typedef, long, double, float, enum,</I> and bit fields. The runtime library does include a <I>long</I> arithmetic package with arbitrary precision up to 256 bits.<P>
Even if you're not especially interested in the MICRO-C compiler, the you may wish to take advantage of the collection of more than 70 sample programs. Although there are simply too many to catalog here, I've listed two dozen of the most interesting:<P>
<pre>CCREF     &#151; C source cross referencing program
COMEXT    &#151; Extract comments from C sources
OBSCURE   &#151; Make C program unreadable (but it still
            compiles)
PCC       &#151; Pretty Printer for C (source formatter
CALC      &#151; A TSR programmers (HEX/DECIMAL
            calculator
CMOS      &#151; Read/Write/Verify CMOS RAM from/to/with
            disk file
CSET      &#151; TSR map of IBM PC character set
DIFF      &#151; Displays differences between text files
GREP      &#151; Like UNIX "GREP" search utility
HEM       &#151; Hardware Exception Monitor TSR to trap
            unexpected interrupts
LZC       &#151; Laser commander TSR to control
            HP-compatible printers
MEMSAVE   &#151; Saves memory image to file
MTERM     &#151; Tiny (10K!) TSR ANSI terminal with
            XMODEM
SHOWEXE   &#151; Displays information about an .EXE file
TFB       &#151; TSR File Browser
VALIDATE  &#151; PD version of McAfee's <I>validate.</I> Verify file
            with two CRCs
LAPTALK   &#151; A terminal program with script interpreter
XMODEM    &#151; External file transfer program
MICROCAD  &#151; Mouse-based drawing program
FE        &#151; Font Editor
ASM86     &#151; 8086 assembler
BASIC     &#151; A simple BASIC interpreter
DIS85     &#151; 8085 Cross Disassembler
TTT3D     &#151; 3 dimensional tic-tac-toe</pre>
All files in the MICRO-C archives are for personal use only. Any commercial use of information or programs contained in these archives requires written permission from Dunfield Development Systems. You can obtain source code for the MICRO-C compiler by purchasing a license for $100 from Dunfield Development Systems.<P>
<h4><FONT COLOR="#000080"><A name="0030_001A">CUG #423: RECIO, MIMEQP, ACCTPOST, RDCF, and BSPLINE<A name="0030_001A"></FONT></h4></P>
The CUG Library has always accommodated C/C++ archives both big and small. This month, I've compiled an anthology of five small but outstanding source archives. William Pierpoint (Camarillo, CA) submits his comprehensive library for streamstyle record I/O. Karl Hahn (Sarasota, FL) contributes MIME binary encode/decode routines for use with e-mail tools. Philip Erdelsky (San Diego, CA) releases source for general ledger posting with 32-bit math library, and a reentrant, DOS-Compatible File System for embedded systems. Last, Keith Vertanen (Pine Springs, MN) sends his brief but succinct implementation of the BSPLINE rendering algorithm. Again, all five archives are immediately available on a single diskette as CUG volume #423.<P>
<h4><FONT COLOR="#000080"><A name="0030_001B">CUG #423A: RECIO &#151; Record Input Made Easy<A name="0030_001B"></FONT></h4></P>
The RECIO library contains more than 50 functions and macros enabling file input in which each line becomes a data record, with each record subdivided into fields. Fields may be either character delimited or column delimited. RECIO's learning curve is not steep, since many functions are based on analogous counterparts in <I>stdio</I><I>.</I> RECIO is freeware and is protected by the GNU Public License. Version 2.00 (as released 04/16/94) appears along with several unrelated archives on CUG volume #423.<P>
Since virtually every program has to do input or output, C programmers are very familiar with the <I>stdio</I> library. Many functions in the <I>recio</I> library are analogous to those in the <I>stdio</I> library, as shown by the following table:<P>
<B>Analogous</B><I> stdio/recio </I><B>components</B><P>
<pre><B><I>     stdio             recio</I></B>
<B>----------------------------</B>
<I>FILE        REC</I>
<I>FOPEN_MAX   ROPEN_MAX</I>
<I>stdin       recin</I>
<I>fopen       ropen</I>
<I>fclose      rclose</I>
<I>fgets       rgetrec</I>
<I>fscanf      rgeti, rgetd, rgets, ...</I>
<I>clearerr    rclearerr</I>
<I>feof        reof</I>
<I>ferror      rerror</I></pre>
RECIO includes a makefile only for Borland Turbo C, although it should work with other platforms as well.<P>
<h4><FONT COLOR="#000080"><A name="0030_001C">CUG #423B: MIMEQP &#151; A Better Encode/Decode For E-mail<A name="0030_001C"></FONT></h4></P>
MIMEQP inputs files that are mostly ASCII, but contain some non-ASCII characters, and encodes them so that the output file is all ASCII. The characters that were ASCII remain so, so the encoded file is human-readable. The encoding algorithm also limits line lengths to 72 characters. MIMEQP is useful for sending files containing non-ASCII characters through mail servers. MIMEQP (or MIME Quoted-Printable) is defined in RFC 1341. MIMEQP (as released on 05/22/93) appears along with several unrelated archives on CUG volume #423.<P>
MIME is an acronym for Multipurpose Internet Mail Extensions. It builds on the older standard by defining additional fields for mail message headers. These headers describe new types of content and organization for messages.<P>
MIME allows mail messages to contain the following:<P>
<UL><li>Multiple objects in a single message</li>
<li>Text of unlimited line length or overall length</li>
<li>Character sets other than ASCII</li>
<li>Multi-font messages</li>
<li>Binary or application-specific files</li>
<li>Images; Audio, Video, and multi-media messages</li></UL>
MIMEQP encoding replaces all control characters except '\n' and '\t,' all occurrences of '=', and all characters whose ASCII code is greater than 127 with =XX, where XX is the hex value of the ASCII code. The CUG library distribution includes a substantial overview of the MIME standard by Mark Grand, along with an MS-DOS executable.<P>
<h4><FONT COLOR="#000080"><A name="0030_001D">CUG #423C: ACCTPOST General Ledger Utility<B><A name="0030_001D"></B></FONT></h4></P>
The Plain Vanilla Posting Program II is a simple program that takes over three tedious accounting tasks: posting from the general journal to the general ledger, drawing a trial balance, and putting account balances into a report. The Plain Vanilla Posting Program II is written for the <I>compact</I> memory model (<I>near</I> function, <I>far</I> data) in Turbo C 2.0 for MS-DOS. The author claims some source portability to UNIX variants as well. The Plain Vanilla Posting Program II (as released on 09/01/90) is included with unrelated source archives on CUG volume #423.<P>
The only non-portable part of the program appears in <I>ARITHMET.C</I>, which contains embedded assembly language code. This allows ACCTPOST to catch arithmetic overflows, which would be disastrous for an accounting application if undetected. Otherwise, ACCTPOST is just a simple 32-bit arithmetic package, with only five operations: addition, negation, multiplication, division by 10, and remainder computation for a 32-bit number divided by 10. The last two operations cannot produce overflows and could have written in standard C. Porting to a machine with native 32-bit arithmetic should be simple.<P>
Although the Plain Vanilla Posting Program II is copyrighted, it carries only one restriction: you may not sell the program or any program derived from it. You may give it away or charge a reasonable fee for media duplication, but may not charge anything for the software itself.<P>
<h4><FONT COLOR="#000080"><A name="0030_001E">CUG #423D: Re-entrant DOS-compatible File System<A name="0030_001E"></FONT></h4></P>
RDCF is a reentrant and ROMable DOS-compatible file system, designed for use with floppy diskettes and hard disk partitions that do not exceed 32 MB in size. This distribution also includes a simple disk-caching package designed for use with RDCF, which may also be used separately. The distribution includes an MS-DOS utility called FILES, written primarily to test RDCF, in both source and executable form. FILES performs a number of operations on DOS files, including some that cannot be performed from the DOS command line. For example, FILES' DIR command shows the remains of deleted files. This distribution includes complete C source code and documentation for FILES, including a fairly detailed description of the DOS file system.<P>
RDCF is copyrighted, but it is freeware. You may copy it and pass it on freely, as long as you pass on the entire, unmodified package, with its copyright notices intact. You may not resell it, although you may charge a reasonable fee for diskette duplication, shipping, and handling.<P>
<h4><FONT COLOR="#000080"><A name="0030_001F">CUG #423E: Classic BSPLINE Rendering Algorithm<A name="0030_001F"></FONT></h4></P>
A spline is a mathematical construct from numerical analysis which is used to fit a curve to an arbitrary set of points. It has obvious uses in statistics and computer graphics rendering. For a description of spline theory and algorithm implementation, see <I>Elementary Numerical Analysis</I> by Kendall Atkinson (1985, Wiley &amp; Sons). BSPLINE performs polynomial interpolation and returns an array of coefficents to describe a spline. BSPLINE was written in C++ for the Borland compiler, though it uses few, if any, features of C++. The library uses function calls from the Borland Graphics Interface to render the bspline on EGA or VGA displays. BSPLINE (as released on 03/11/94) is included with other unrelated archives on CUG volume #423.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

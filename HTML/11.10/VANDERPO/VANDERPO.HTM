

<HTML>
<HEAD>

<TITLE>October 1993/Obfuscated C and Other Mysteries</TITLE></HEAD>
<body bgcolor="#ffffff">
<H2><A HREF="../tococt.htm"><IMG SRC="../../toc.gif" ALT="{back to toc}" WIDTH="54" HEIGHT="54"></A><FONT COLOR="#FF0000">   Book Reviews</FONT></H2>

<hr><h2 align="center"><font color="#800000">Obfuscated C and Other Mysteries<A name="0301_0104"><A name="0301_0104"></font></h2><P>
<h3 align="center"><font color="#800000"><A name="0301_0000"><A name="0301_0000">Bob van der Poel</font></h3><hr><blockquote><P>
<P><i><A name="0301_0000"><A name="0301_0000">Bob van der Poel started programming when 4K and a cassette recorder were considered a hi-tech home system. He currently writes<I></I> <I></I>system software for 0S-9/68000 operating systems. You can reach him at P.O. Box 355, Porthill, ID, 83853 or electronically via <I></I> <I></I>CompuServe [76510,2203].</i></P><P>
Every once in a while I purchase a computer book which is not only useful, but is also amusing and fun to read. <I>Obfuscated C and Other Mysteries</I> is one of those books. The book covers three areas: the results of seven Obfuscated C Contests, reprints of many of the author's previously published articles (some have been updated and expanded), and several new  essays on real-world programming problems and solutions.<P>
<h4><FONT COLOR="#000080"><A name="0301_0105">Why Obfuscate C?<A name="0301_0105"></FONT></h4></P>
Despite the title, Obfuscated C is not the major theme. Eight of the book's 40 chapters cover the 1984 to 1991 Obfuscated C Code Contests &#151; this comprises only 182 of 414 pages. Each year programmers submit programs which are deliberately convoluted; winning programs are so difficult to decipher that only the most devoted programming sleuth can fathom either their operation or purpose. Don Libes has gathered together all of the winning entries and presented them in this book. Not only is all of the code presented; Libes also "decodes" most of the programs either with detailed explanations or unobfuscated versions of the code.<P>
Some may think it is wrong, or at least questionable, to deliberately include confusing code in any book. However, as Libes notes in the preface, we are all faced from time to time with the daunting task of deciphering code (even our own code, at times). By examining the contest code and its  explanation we can hone some of those deciphering skills. Besides, a lot of the code is humorous and worth a laugh &#151; well, some of us think it's funny.<P>
<h4><FONT COLOR="#000080"><A name="0301_0106">Problems and Solutions<A name="0301_0106"></FONT></h4></P>
The rest of the book deals with a wide variety of C topics. To highlight a few:<P>
<UL><li>Implementing variable-size arrays</li>
<li>Translation programs</li>
<li>Implementing sets with bit operations</li>
<li>Context-independent macros</li>
<li>Various <I>malloc</I> topics</li>
<li><I>Getopt</I> for parsing command-line arguments</li>
<li>Using <I>longjmp</I></li>
<li>Pointers to functions</li>
<li>Linked lists</li>
<li>Portability</li>
<li>Threads</li>
<li>Software timers</li>
<li>Register variables and program effeciency</li>
<li>Tcl, Tool Control Language</li></UL>
Each topic in the book is presented as a programming problem and solution. Libes, a professional programmer, presents very pragmatic solutions. He emphasizes the  importance of finding solutions which work. When commonly accepted solutions need improvement, he points this out and  offers alternatives. For example, in the chapter "Faster than <I>Malloc</I>", Libes discusses why <I>malloc</I> is expensive in terms of speed and memory. He then presents an alternate memory  allocator useful for allocating a large number of fixed-length memory blocks. This alternate allocator is excellent for creating symbol tables. In the chapter "Byte Ordering," he not only explains the origin of the terms "little-endian" and "big-endian;" he also presents a set of conversion functions.<P>
In addition to the main topics, this book contains a wealth of useful tricks and techniques. For example, in the chapter "x=x++" there is an algorithm to determine the number of bits in an integer and a technique to pass arrays by value.<P>
<h4><FONT COLOR="#000080"><A name="0301_0107">The Code<A name="0301_0107"></FONT></h4></P>
Throughout the book Libes has presented clear,  consistently formatted code which is a mixture of Standard and Classic C. He uses prototypes; however, by including a <I>proto.h</I> header, he makes it possible to compile the code with both Standard and Classic C. Knowing that his readers program on many different computer systems, sometimes with outdated compilers, Libes has attempted to use only the most portable features of C. Most of the code should compile on any  complete C implementation. When code relies on non-standard features, Libes notes this fact and suggests appropriate workarounds.<P>
My copy of <I>Obfuscated C</I> included a code disk. This 1.2Mb 5 1/4" MS-DOS disk contains two files: an archive file containing all the source code and an MS-DOS executable <I>zoo</I> utility to decompress the archive. The archive expands to over 2 Mb. The disk contains most of the code that is listed in the book; however, it does not reproduce some of the smaller code  examples. In addition to the source code listed in the book, the disk contains a number of miscellaneous files:<P>
<UL><li>A simulation program written by the author to study the "Entropy of Self-Avoiding Surfaces" using Oct-tree Data structures.</li>
<li>Snake: yet another snake game.</li>
<li>Steve Summit's list of "Frequently Asked Questions" from Usenet.</li>
<li>Stan Brown's list of "Identifiers to Avoid;" documents all Standard C identifiers.</li></UL>
Readers without access to a complete UNIX system may be frustrated by some of the documentation files, since they can only be printed with full-blown <I>troff</I> formatters. It would have been nice if Libes had included pre-formatted documentation files on the disk. Also, a 1.44 3 1/2" diskette would be useful for readers without a 1.2 Mb drive. Permission is granted in the book to use the code on the disk in your own programs; however, he requests that you acknowledge his authorship.<P>
<h4><FONT COLOR="#000080"><A name="0301_0108">Layout, Organization, and Style<A name="0301_0108"></FONT></h4></P>
The book layout and organization is logical and concise. The topics are presented in order of increasing complexity. Most chapters are self-contained and do not rely on previous chapters. The index appears to be complete and well thought out.<P>
<I>Obfuscated C and Other Mysteries</I> is not designed to be an introductory text, nor is it a reference book. It is a collection of interesting and useful code, with explanations, for intermediate to advanced programmers. It is also a nice book to browse through. Each casual reading illuminates more arcane tricks and useful techniques. Overall, it is well written, easy to read, and, in the bargain, entertaining, with many nuggets of humor sprinkled throughout. If you are serious about C, or would just like to learn more about it, this would be a good book for your library.<P>
<B>Title</B>:        <I>Obfuscated C </I><br>
<I>               and Other Mysteries</I><br>
<B>Author</B>:      Don Libes<br>
<B>Publisher</B>:  John Wiley and Sons, Inc.<br>
                605 Third Avenue<br>
                New York, NY<br>
                10158-0012<br>
<B>Price</B>:        $39.95 (includes disk)<br>
<B>Pages</B>:        414<br>
<B>ISBN</B>:          0-471-57805-3<P>
</BLOCKQUOTE>
</BODY>
</HTML>

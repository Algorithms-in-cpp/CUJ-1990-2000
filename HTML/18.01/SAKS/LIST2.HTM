<HTML><HEAD>
<TITLE>January 2000/C++ Theory and Practice/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: The cross-reference table non-inline member function definitions</a></h4>
<pre>
// table.cpp

#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

#include "deep.h"
#include "table.h"
#include "sequence.h"

struct cross_reference_table::tree_node
    {
    tree_node(unsigned n);
    deep_pointer&lt;char&gt; word;
    line_number_sequence lines;
    deep_pointer&lt;tree_node&gt; left, right;
    };

inline
cross_reference_table::
tree_node::tree_node(unsigned n)
    : lines(n)
    {
    }

cross_reference_table::tree_node *
cross_reference_table::add_tree
(tree_node *t, char const *w, unsigned n)
    {
    int cmp;
    if (t == NULL)
        {
        t = new tree_node (n);
        t-&gt;word = new char [strlen(w) + 1];
        strcpy(t-&gt;word, w);
        t-&gt;left = t-&gt;right = NULL;
        }
    else if ((cmp=strcmp(w,t-&gt;word)) &lt; 0)
        t-&gt;left = add_tree(t-&gt;left, w, n);
    else if (cmp &gt; 0)
        t-&gt;right =
            add_tree(t-&gt;right, w, n);
    else
        t-&gt;lines.add(n);
    return t;
    }

void
cross_reference_table::put_tree
    (tree_node const *t)
    {
    if (t != NULL)
        {
        put_tree(t-&gt;left);
        printf("%12s:", t-&gt;word);
        t-&gt;lines.put();
        printf("\n");
        put_tree(t-&gt;right);
        }
    }
</pre></body></html>

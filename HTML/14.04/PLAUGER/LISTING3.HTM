



<HTML><HEAD>

<TITLE>April 1996/Standard C/C++/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 3: &lt;iterator&gt;, part 2</A></h4>


<pre>

        //  ITERATOR  TAGS
struct  input_iterator_tag  {};
struct  output_iterator_tag  {};
struct  forward_iterator_tag  {};
struct  bidirectional_iterator_tag  {};
struct  random_access_iterator_tag  {};

        //  TEMPLATE  FUNCTION  iterator_category
template&lt;class  T,  class  Dist&gt;  inline
    input_iterator_tag  iterator_category(
        const  input_iterator&lt;T,  Dist&gt;&amp;)
    {input_iterator_tag  x;
    return  (x);  }
inline  output_iterator_tag  iterator_category(
        const  output_iterator&amp;)
    {output_iterator_tag  x;
    return  (x);  }
template&lt;class  T,  class  Dist&gt;  inline
    forward_iterator_tag  iterator_category(
        const  forward_iterator&lt;T,  Dist&gt;&amp;)
    {forward_iterator_tag  x;
    return  (x);  }
template&lt;class  T,  class  Dist&gt;  inline
    bidirectional_iterator_tag  iterator_category(
        const  bidirectional_iterator&lt;T,  Dist&gt;&amp;)
    {bidirectional_iterator_tag  x;
    return  (x);  }
template&lt;class  T,  class  Dist&gt;  inline
    random_access_iterator_tag  iterator_category(
        const  random_access_iterator&lt;T,  Dist&gt;&amp;)
    {random_access_iterator_tag  x;
    return  (x);  }
template&lt;class  T&gt;  inline
    random_access_iterator_tag  iterator_category(const  T  *)
    {random_access_iterator_tag  x;
    return  (x);  }
//End of File
</pre>
</body></html>

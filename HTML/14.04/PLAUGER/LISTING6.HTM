



<HTML><HEAD>

<TITLE>April 1996/Standard C/C++/Listing 6</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 6: &lt;iterator&gt;, part 4</A></h4>


<pre>

        //  TEMPLATE  FUNCTION  advance
template&lt;class  InIt,  class  Dist&gt;  inline
    void  advance(InIt&amp;  p,  Dist  n)
    {_Advance(p,  n,  iterator_category(p));  }
template&lt;class  InIt,  class  Dist&gt;  inline
    void  _Advance(InIt&amp;  p,  Dist  n,  input_iterator_tag)
    {for  (;  0  &lt;  n;  --n)
        ++p;  }
template&lt;class  FwdIt,  class  Dist&gt;  inline
    void  _Advance(FwdIt&amp;  p,  Dist  n,  forward_iterator_tag)
    {for  (;  0  &lt;  n;  --n)
        ++p;  }
template&lt;class  BidIt,  class  Dist&gt;  inline
    void  _Advance(BidIt&amp;  p,  Dist  n,  bidirectional_iterator_tag)
    {for  (;  0  &lt;  n;  --n)
        ++p;
    for  (;  n  &lt;  0;  ++n)
        --p;  }
template&lt;class  RanIt,  class  Dist&gt;  inline
    void  _Advance(RanIt&amp;  p,  Dist  n,  random_access_iterator_tag)
    {p  +=  n;  }

        //  TEMPLATE  FUNCTION  distance
template&lt;class  InIt,  class  Dist&gt;  inline
    void  distance(InIt  first,  InIt  last,  Dist&amp;  n)
    {_Distance(first,  last,  n,  iterator_category(first));  }
template&lt;class  InIt,  class  Dist&gt;  inline
    void  _Distance(InIt  first,  InIt  last,  Dist&amp;  n,
        input_iterator_tag)
    {for  (;  first  !=  last;  ++first)
        ++n;  }
template&lt;class  FwdIt,  class  Dist&gt;  inline
    void  _Distance(FwdIt  first,  FwdIt  last,  Dist&amp;  n,
        forward_iterator_tag)
    {for  (;  first  !=  last;  ++first)
        ++n;  }
template&lt;class  BidIt,  class  Dist&gt;  inline
    void  _Distance(BidIt  first,  BidIt  last,  Dist&amp;  n,
        bidirectional_iterator_tag)
    {for  (;  first  !=  last;  ++first)
        ++n;  }
template&lt;class  RanIt,  class  Dist&gt;  inline
    void  _Distance(RanIt  first,  RanIt  last,  Dist&amp;  n,
        random_access_iterator_tag)
    {n  +=  last  -  first;  }
//End of File
</pre>
</body></html>

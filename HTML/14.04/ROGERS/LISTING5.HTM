



<HTML><HEAD>

<TITLE>April 1996/An Object-Oriented Expression Evaluator/Listing 5</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 5: Sample use of expression evaluator</A></h4>


<pre>

C_Like_Expression  c2("1  +  3  ==  8/2  &amp;&amp;  0");
cout  &lt;&lt;  c2.GetExp()  &lt;&lt;  "  =&gt;  "    &lt;&lt;  c2.GetValue()&lt;&lt;  endl  &lt;&lt;  endl;

Pascal_Like_Expression  p2("1  +  3  =  8/2  and  0");
cout  &lt;&lt;  p2.GetExp()  &lt;&lt;  "  =&gt;  "    &lt;&lt;  p2.GetValue()&lt;&lt;  endl  &lt;&lt;  endl;

Symbol_Table  sym;
sym.Set("v1",5);  sym.Set("v2",9);  sym.Set("v3",32);
sym.Set("Temperature",50);

C_Like_Expression  c3("Temperature*v1/v2+v3");
cout  &lt;&lt;  c3.GetExp()  &lt;&lt;  "  =&gt;  "    &lt;&lt;  c3.GetValue(sym)&lt;&lt;  endl  &lt;&lt;  endl;

C_Like_Expression  c4("1  &amp;&amp;  (1==v1  ||  !(4-1-2-1))");
cout  &lt;&lt;  c4.GetExp()  &lt;&lt;  "  =&gt;  "    &lt;&lt;  c4.GetValue(sym)&lt;&lt;  endl  &lt;&lt;  endl;

sym.Set("TRUE",1);
Pascal_Like_Expression  p4("TRUE  and  (1=v1  or  not(4-1-2-1))");
cout  &lt;&lt;  p4.GetExp()  &lt;&lt;  "  =&gt;  "    &lt;&lt;  p4.GetValue(sym)&lt;&lt;  endl  &lt;&lt;  endl;

//End of File

Output:

3.  1  +  3  ==  8/2  &amp;&amp;  0  =&gt;  0

4.  1  +  3  =  8/2  and  0  =&gt;  0

Temperature*v1/v2+v3  =&gt;  59.7778

1  &amp;&amp;  (1==v1  ||  !(4-1-2-1))  =&gt;  1

TRUE  AND  (1=v1  or  NOT(4-1-2-1))  =&gt;  1
</pre>
</body></html>

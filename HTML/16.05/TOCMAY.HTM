


<HTML><HEAD>

<TITLE>May 1998</TITLE>

</HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
  <BLOCKQUOTE><IMG src="../logo.gif" alt="CUJ Logo" WIDTH="310" HEIGHT="100">
<H3><FONT COLOR="#000080">May 1998<br>
Volume 16 Number 5</FONT></H3>

<H3><FONT COLOR="#FF0000">CROSS-PLATFORM DEVELOPMENT</FONT></H3>
<h4><A href="shahxiao/shahxiao.htm">Using
Shared Libraries across Platforms</A></h4>
<p><b>Amal Shah and Hong Xiao</b><br>
<i>Shared libraries are an important technology with an unfortunate lack of
standardization among various compilers.</i></p>
<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>
<h4><A href="cockburn/cockburn.htm">Object-Oriented
Analysis and Design, Part 1</A></h4>
<p><b>Alistair Cockburn</b><br>
<i>Object-Oriented design is easy  once you learn how to identify the right
objects.</i></p>
<h4><A href="williams/williams.htm">Detecting Memory Corruption with Dog Tags</A></h4>
<p><b>Jim Williams</b><br>
<i>A simple marker can reveal a broad class of storage overwrite problems.</i></p>
<h4><A href="ellis/ellis.htm">A Regular Expression Class Library</a>
</h4>
<p><b>Duncan Ellis and Sameer Udeshi</b><br>
<i>Regular expressions are a great way to describe patterns in text, with lots of
applications.</i></p>
<h4><A href="gould/gould.htm">Double Dispatch with an Inverted Visitor Pattern</A></h4>
<p><b>David Gould</b><br>
<i>It's hard to model a two-dimensional table with an inheritance tree, but you
can come close.</i></p>
<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>
<h4><A href="plauger/plauger.htm">Standard C/C++: The Facet money_get</A></h4>
<p><b>P. J. Plauger</b><br>
<i>If you can print monetary values, it's nice to be able to read them back in as
well. And you can, thanks to the Standard C++ library.</i></p>
<h4><A href="saks/saks.htm">C++ Theory and Practice: Partitioning with Namespaces, Part 2</A></h4>
<p><b>Dan Saks</b><br>
<i>Namespaces should help you partition programs more cleanly, once the compilers
agree on how to implement them.</i></p>
<h4><A href="schmidt/schmidt.htm">The Learning C/C++urve: Spring Cleaning</A></h4>
<p><b>Bobby Schmidt</b><br>
<i>From template metaprogramming to mea culpas to more arrays, Bobby airs a
variety of dusty topics.</i></p>
<h4><A href="becker/becker.htm">Questions &amp; Answers: Use Caution with Temporary Objects</A></h4>
<p><b>Pete Becker</b><br>
<i>All things in life are fleeting, say the philosophers. In C++, it helps to know
exactly how fleeting, however.</i></p>
<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>
<h4><A href="edforum/edforum.htm">Editor's Forum</A></h4>
<h4><A href="newprod/newprod.htm">New Products</A></h4>
<h4><A href="letters/letters.htm">We Have Mail</A></h4>
</p>
</body></html>

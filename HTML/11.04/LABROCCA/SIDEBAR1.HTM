<HTML><HEAD>
<TITLE>April 1993/Mixed Numbers in C/Sidebar</TITLE></HEAD><BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h3 align="center"><FONT FACE="Garamond" COLOR="#000080">How to Use MixCalc</FONT></h3><hr>
<BLOCKQUOTE>
MixCalc is a rational number calculator. It accepts expressions consisting of any combination of whole numbers, fractions, and mixed numbers and returns a result in the appropriate reduced form. +,-, * and / perform addition, subtraction, multiplication, and division, respectively. Parentheses change the order of operations and nest arbitrarily deep. Several expressions, separated by semicolons, may appear on one line. A carriage return ends a line. MixCalc accepts input from the command line or from a redirected file. An error in the input flushes the current line and resets MixCalc. Start MixCalc by typing <I>mixcalc</I> at the DOS prompt. To do a series of calculations from a text file called <I>examples</I>, type<P>
<pre>mixcalc &lt; examples</pre>
To save the results of your calculations to a file called <I>results</I>, type<P>
<pre>mixcalc &lt; examples &gt; results</pre>
An error causes a message to be displayed and halts the redirected session. Several lines of a MixCalc session with some comments follow.<P>
White space is optional except to separate the whole number part from the fraction part of a mixed number.<P>
<pre>&gt; 1|2*1|2
1|4
&gt;1|2 * 1|2
1|4
&gt; 2 2|3+1 5|6
4 1|2</pre>
Parentheses work just as expected.<P>
<pre>&gt; 5 7|9 + 11 2|3 * 3 1|2
46 11|18
&gt; (5 7|9 + 11 2|3) * 3 |2
61 1|18</pre>
The fraction bar is not an operator; it has meaning only within a fraction.<P>
<pre>&gt; (1/2)|3
Unknown token: |
&gt; 1/2|3
1 1|2</pre>
This is acceptable to MixCalc, but might not be what was intended. The above example is "one divided by two-thirds," NOT "one divided by two, divided by 3." One-half over three equals one-sixth:<P>
<pre>&gt; (1/2)/3
1|6</pre>
End a MixCalc session by hitting control-Z (or control-C). All of the limits of the mixed number package apply to MixCalc. Numbers near the largest prime available to MixCalc are used in some examples to force errors. Here's how two compilers dealt with them.<P>
<h4>Microsoft C/C++ 7.0</FONT></h4></P>
<pre>&gt; 1|15991 + 1|15991
2|15991
&gt; 1|16000 + 1|15991
- integer divide by 0
&gt; 1|16001 + 1|15991
- integer divide by 0</pre>
<h4>Zortech C/C++ 3.0</FONT></h4></P>
<pre>&gt; 1|15991 + 1|15991
2|15991
&gt; 1|16000 + 1|15991
1
&gt; 1|16001 + 1|15991
721426102 1879503890|-2113923584</pre>
In the first example everything stays within bounds. The numerator becomes 2x15,991 and the denominator 1,5991x15,991. Both fit in longs and have prime factors less than or equal to 15,991. The second example produces the numerator 31,991, which is a prime bigger than the biggest available to MixCalc. Note the denominator, 255,856,000, fits in a <I>long</I> and factors nicely.<P>
</BLOCKQUOTE>
</BODY>
</HTML>

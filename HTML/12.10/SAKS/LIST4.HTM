<HTML><HEAD>
<TITLE>October 1994/Stepping Up To C++/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4 <I>An abstract base class for objects in generic containers</A></I></h4>
<pre>//
// common.h - a common abstract type for objects placed in containers
//

#ifndef COMMON_H_INCLUDED
#define COMMON_H_INCLUDED

#include &lt;iostream.h&gt;

class common
   {
public:
   virtual const common &amp;
      operator=(const common &amp;c) = 0;
   virtual common *dup() const = 0;
   virtual size_t size() const = 0;
   virtual ostream &amp;write(ostream &amp;s) const = 0;
   virtual istream &amp;read(istream &amp;s) = 0;
   virtual ~common() { }
   };

inline ostream &amp;operator&lt;&lt;(ostream &amp;os, const common &amp;c)
   {
   return c.write(os);
   }

inline istream &amp;operator&gt;&gt;(istream &amp;os, common &amp;c)
   {
   return c.read(os);
   }

#endif

/* End of File */
</pre>
</BODY>
</HTML>

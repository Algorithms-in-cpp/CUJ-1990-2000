<HTML><HEAD>
<TITLE>December 1992/We Have MailBimodal Interrupt Handling Under 80286 DOS Extenders/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 <B></B>REAL_ISR.C &#151; <B><I></B>the real-mode interrupt service routine, as well as the </I><B></B>Port<B><I></B> data structure.</A></I></h4>
<pre>/*
 * REAL_ISR.C Copyright (C) 1992 Mark R. Nelson.
 *
 * This header file contains the source code for the real
 * time interrupt service routine used in the TERM286.H
 * program. It also contains the only copy of the data
 * structure used to access the UART.
 */

#include &lt;dos.h&gt;
#include &lt;conio.h&gt;
#include "phapi.h"
#include "term286.h"

/*
 * This is the data structure used by both the real and
 * protected mode interrupt service routines.
 */
struct port_data Port;

/*
 * This is the real mode ISR. It is identical to the
 * protected mode ISR, except for the increment of the
 * real mode interrupt count near the end. This routine
 * reads in the character that caused the interrupt, then
 * tries to stuff it in the buffer and update the head
 * pointer. Finally, it increments the diagnostic
 * counter, outputs an EOI to the 8259 PIC, and exits.
 */

void far interrupt real_isr()
{
   unsigned char c;
   int space_used;

   c = ( unsigned char ) inp( Port.uart_address );
   space_used = Port.head_pointer - Port.tail_pointer;
   if ( space_used &lt; 0 )
      space_used += 1024;
   if ( space_used &lt; 1023 ) {
      Port.buffer[ Port.head_pointer++ ] = c;
      Port.head_pointer &amp;= 1023;
   }
   Port.real_count++;
   (void) outp( 0x20, 0x20 );
}
/* End of File */
</pre>
</BODY>
</HTML>

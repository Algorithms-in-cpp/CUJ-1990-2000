<HTML><HEAD>
<TITLE>July 1991/Stepping Up To C++/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3 (xrt.cpp) Cross-Reference Table</A></h4>
<pre>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#include "ln_seq.h"
#include "xrt.h"

struct treenode
    {
    char *word;
    ln_seq lines;
    treenode *left, *right;
    treenode(unsigned n);
    treenode();
    };

treenode::treenode(unsigned n) : lines(n) { }

treenode::treenode()
    {
    delete word;
    delete left;
    delete right;
    }

static treenode *addtree
    (treenode *t, char *w, unsigned n)
    {
    int cond;

    if (t == 0)
        {
        t = new treenode(n);
        t-&gt;word = new char[strlen(w) + 1];
        strcpy(t-&gt;word, w);
        t-&gt;left = t-&gt;right = 0;
        }
    else if ((cond = strcmp(w, t-&gt;word)) == 0)
        t-&gt;lines.add(n);
    else if (cond &lt; 0)
        t-&gt;left = addtree(t-&gt;left, w, n);
    else
        t-&gt;right = addtree(t-&gt;right, w, n);
    return t;
    }

static void printtree(treenode *t)
    {
    if (t != 0)
        {
        printtree(t-&gt;left);
        printf("%12s: ", t-&gt;word);
        t-&gt;lines.print();
        printf("\n");
        printtree(t-&gt;right);
        }
    }

static treenode *root = 0;

void xrt_add(char *w, unsigned n)
    {
    root = addtree(root, w, n);
    }

void xrt_destroy(void)
    {
    delete root;
    }

void xrt_print(void)
    {
    printtree(root);
    }

// End of File
</pre>
</BODY>
</HTML>

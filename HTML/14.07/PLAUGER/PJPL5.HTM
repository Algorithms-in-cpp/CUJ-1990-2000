






<HTML>
     
     <HEAD>


          
          <TITLE>July 1996/Standard C/C++/Listing 5</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          
          <h4>Listing 5: &lt;memory&gt;, part 6</h4>

<PRE>

        // TEMPLATE CLASS auto_ptr
template&lt;class T&gt;
    class auto_ptr {
public:
    typedef T element_type;
    explicit auto_ptr(T *p= 0)
        : Owns(p != 0), Ptr(p) {}
///    template&lt;class U&gt;
    typedef T U;    ///
    auto_ptr(const auto_ptr&lt;U&gt;&amp; y)
        : Owns(y.Owns), Ptr((T *)y.release()) {}
///    template&lt;class U&gt;
    auto_ptr&lt;T&gt;&amp; operator=(auto_ptr&lt;U&gt;&amp; y)
        {if ((void *)this != (void *)&amp;y)
            {if (Owns)
                delete Ptr;
            Owns = y.Owns;
            Ptr = (T *)y.release(); }
        return (*this); }
    ~auto_ptr()
        {if (Owns)
            delete Ptr; }
    T&amp; operator*() const
        {return (*get()); }
    T *operator-&gt;() const
        {return (get()); }
    T *get() const
        {return (Ptr); }
    T *release() const
        {((auto_ptr&lt;T&gt; *)this)-&gt;Owns = false;
        return (Ptr); }
private:
    bool Owns;
    T *Ptr;
    };
/* End of File */
</PRE>
     </BODY>
</HTML>

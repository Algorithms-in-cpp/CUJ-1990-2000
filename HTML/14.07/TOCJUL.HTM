






<HTML>
     
     <HEAD>


          
          <TITLE>July 1996</TITLE>
     </HEAD>
     
     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          
          <H2><IMG src="../logo.gif" alt="CUJ Logo" WIDTH="310" HEIGHT="100"></H2>
          
          <BLOCKQUOTE>
               
               <H3><FONT COLOR="#000080">July 1996 <BR>
                Vol. 14, No. 07</FONT></H3>

               <H3><FONT COLOR="#FF0000">SOFTWARE TOOLS</FONT></H3>
               <H4><A href="colner/colner.htm"> HTML Programming with
                    Objects</A></H4>
               
               <P><B>Don Colner </B> <BR>
                    <I> The best way to produce structured data is often with a
                    structured program. You don't have to leave your comfortable
                    C++ world to produce code for a foreign environment.</I>
               </P>
               
               <H3><FONT COLOR="#FF0000"> FEATURES</FONT></H3>
               
               <H4><FONT COLOR="purple">Inheritability and Extensibility</FONT> (Article unavailable in electronic form)</H4>
               
               <P><B> Martin D. Carroll and Margaret A. Ellis </B> <BR>
                    <I> Reusability is a virtue in software, as every
                    programmer knows. But every programmer should also know the
                    costs involved in making software reusable, to ensure an
                    adequate return on investment.</I></P>
               
               <H4><A href="bell/bell.htm"> Nested for Statements</A></H4>
               
               <P><B>James M. Bell </B> <BR>
                    <I> If you can't capture the looping structure of an
                    algorithm in control-flow statements, then capture it in a
                    data structure</I></P>
               
               <H4><A href="heyman/heyman.htm">Better Pipes for Windows</A></H4>
               
               <P><B> Bill Heyman</B> <BR>
                    <I> Named pipes are a useful way to connect clients and
                    servers, but it helps to know the nitty gritty details of
                    using them. This article shows how to get some nice added
                    features, such as non-blocking I/O and graceful termination.</I></P>
               
               <H3><FONT COLOR="#FF0000"> COLUMNS</FONT></H3>
               
               <H4><A href="plauger/plauger.htm"> Standard C/C++: The
                    Header &lt;memory&gt;</A></H4>
               
               <P><B> P. J. Plauger</B> <BR>
                    <I> STL tries to simplify life for users by providing
                    storage management for its own containers. That makes STL
                    anything but simple for implementors. A peek at the
                    underlying machinery is instructive for everyone.</I></P>
               
               <H4><A href="saks/saks.htm"> C++ Theory and Practice:
                    Abstract Declarators, Part 2</A></H4>
               
               <P><B> Dan Saks</B> <BR>
                    <I> Building a parser presents lots of opportunities to try
                    out relatively new features of the language. Dan uses an STL
                    deque to implement unlimited lookahead.</I></P><I> </I>
               
               <H4><A href="volkman/volkman.htm"> C/C++ Sources: X and
                    Windows Code from the Web</A></H4>
               
               <P><B> Victor R. Volkman</B> <BR>
                    <I> This month Victor's journey takes him to a couple of X
                    sites, and past volumes of code to do everything from
                    calculating differential equations to playing .WAV files.</I></P>
               
               <H4><A href="schmidt/schmidt.htm"> The Learning C/C++urve:
                    C-&gt;C++ Mutations, Part 2</A></H4>
               
               <P><B> Bobby Schmidt</B><B> </B> <BR>
                    <I> An empty parameter list in a function declaration
                    doesn't mean the same thing in C++ as it does in C. Bobby
                    shows you this and some other things you'll want to know
                    when migrating code from C to C++.</I></P>
               
               <H4><A href="becker/becker.htm"> Questions &amp; Answers:
                    The Value of Code Walks</A></H4>
               
               <P><B> Pete Becker</B> <BR>
                    <I> A second pair of eyes is invaluable in detecting
                    questionable code. Test your troubleshooting talents by
                    joining Pete in a code review.</I></P>
               
               <H3><FONT COLOR="#FF0000"> DEPARTMENTS</FONT></H3>
               
               <H4><A href="edforum/edforum.htm"> Editor's Forum</A></H4>
               
               <H4><A href="newprod/newprod.htm"> New Products</A></H4>
               
               <H4> <A href="mail/mail.htm">We Have Mail</A></H4>
          </BLOCKQUOTE>
     </BODY>
</HTML>





<HTML><HEAD>

<TITLE>April 1997/Persistent Lists Using ISAM Files/Listing 2</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 2:	Template class ObjFile&lt;&gt;</h4>

<pre>
#include "isamfile.h"

// not shown: auxiliary type declarations -- mb

template &lt;class T&gt; class ObjFileIter;       // iterator class

template &lt; class ObjType &gt;
class ObjFile : public ISAMFile {

    friend class ObjFileIter&lt;ObjType&gt;;

public:

// not shown: selectors, file manipulations modifiers, index manipulation<br>// modifiers, read/write routines, and lock management routines -- mb

ISAMError GetCur(ObjType &amp; obj, boolean lock = FALSE);
protected:

/* Protected Constructors */
    ObjFile( const char * file_name, ObjFieldInfo * field_info,
             int num_fields );
    ~ObjFile();

/* Protected Methods */
    virtual int ConvertKey( ObjIndexKey &amp; obj_key,
                            ISAMFile::IndexKey &amp; isam_key );
    virtual int ConvertKey( ISAMFile::IndexKey &amp; isam_key,
                            ObjIndexKey &amp; obj_key );

    virtual boolean IsNull( const ObjType &amp; obj ) const;
    virtual void MakeNull( ObjType &amp; obj );

private:

/* Private Implementation Methods */

    CountType GetCurObjNum( AccessID file_id );
// not shown: file manipulation methods, index manipulation
// methods, read/write methods -- mb

ISAMError GetCur(Access ID file_id, ObjType &amp; obj, boolean lock = FALSE);

/* Private Utility Methods */

    virtual int ConvObjToRec( ObjType &amp; obj, char * rec,
                              ObjIndexKey * key = 0 ) = 0;
    virtual int ConvRecToObj( char * rec, ObjType &amp; obj,
                              ObjIndexKey * key = 0 ) = 0;

/* Data Members */

    ISAMFile::AccessID  fileId_;
    ObjIndexKey         curIndex_;

    ObjFieldInfo *  fieldInfo_; // convert keys to/from isamFormat
    int             numFields_;
    int             recSize_;
    char *          isamRec_;   // working buffer

/* Static Interface */

public:
    static ObjIndexKey &amp;GetPrimaryKey();
protected:
    static int SetPrimaryKey( ObjIndexKey &amp; primary_key );
private:
    static ObjIndexKey sPrimaryKey_; // if none, primaryKey.nfields == 0

};
/* End of File */
</pre>
</body></html>

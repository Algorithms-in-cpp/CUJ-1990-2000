



<HTML><HEAD>

<TITLE>April 1997/Dynamic Table Binding with MFC CRecordset Classes/Listing 3</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<h4>Listing 3:	Sample use of CColumns</h4>

<pre>

UpdateDynaRowSet (int iRows, char* szUpdate)    
{    
    CString     WorkingString;
    long        RecordCount = 0;
    CColumnInfo*    pColInfo;
   
    // NOTE: this assumes the RecordCount is set previous to
    // entry to this function

    // Move cursor back to previous row.
    for ( RecordCount=0; RecordCount &lt; iRows; RecordCount++ )
    {
        DynaRowSet-&gt;MovePrev();
        if (DynaRowSet-&gt;IsBOF())
            return FALSE;    
    }

    // Now start moving forward, Editing as we go.
    for ( RecordCount=0; RecordCount &lt; iRows; RecordCount++ )
    {
       // Is Recordset empty?
       if ( (DynaRowSet-&gt;IsEOF()) || (DynaRowSet-&gt;IsBOF()) )
       {
          LogError( "UpdateSQL(): No Rows found to Update!" );
          return FALSE;    
       }
       // Is it an updateable Recordset?
       if (!DynaRowSet-&gt;CanUpdate())
       {
          LogError( "UpdateSQL(): Recordset is not Updateable!" );
          return FALSE;    
       }    
       // Set recordset for Edit mode.
       DynaRowSet-&gt;Edit();
        
       // Get the first field of the record.
       pColInfo = (CColumnInfo*)DynaRowSet-&gt;m_ColumnList.GetAt(0);
        
       WorkingString = *(CString*) pColInfo-&gt;pData;
       *(CString*) pColInfo-&gt;pData += szUpdate + " ";

       // Dirty the field indicator so to force the Update().
       DynaRowSet-&gt;SetFieldDirty((CString*) pColInfo-&gt;pData,TRUE)
;
       // Attempt to update the row.
       if (!DynaRowSet-&gt;Update())
       {
            LogError( "UpdateSQL(): Update failed!" );
            return FALSE;    
       }
       // Move to next record.
       DynaRowSet-&gt;MoveNext();
    }
    return TRUE;   
}
//End of File
</pre>
</body></html>




<HTML><HEAD>

<TITLE>February 1998/STL Containers Based on Hash Tables/Listing 5</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 5: Searching a hashmap</A></h4>


<pre>
// Define a hash map with an integer as a key
// and a pointer to an integer as the value.
hash_map&lt;int,int,int_hash_function&gt; hashIPtrMap;

// Insert the test data into the map.
hashIPtrMap[0] = 4;
hashIPtrMap[1] = 3;
hashIPtrMap[2] = 2;
hashIPtrMap[3] = 1;
hashIPtrMap[4] = 0;

// Test the STL search functions.
// Start with the search function that requires two
// sets of iterators. One for the hash map to be
// searched and another subsequence
// that is to be sought.
hash_map&lt;int, int, int_hash_function&gt;::iterator firstIntItr;
hash_map&lt;int, int, int_hash_function&gt;::iterator lastIntItr;

firstStrItr = hashIntMap.find(3);
lastStrItr  = firstIntItr;

lastStrItr++;

strItr = search(hashStrMap.begin(), hashStrMap.end(),
    firstStrItr, lastStrItr);

if ( strItr != hashStrMap.end() )
    cout &lt;&lt; "search(): pair&lt;3,1&gt;={" &lt;&lt; strItr-&gt;first &lt;&lt; ","
         &lt;&lt; strItr-&gt;second &lt;&lt; "}" &lt;&lt; endl;
else
    cout &lt;&lt; "Search(): pair&lt;3,1&gt;={}  Function failed!!!" &lt;&lt; endl;

// Test search_n to find a given value.
strItr = search_n(hashStrMap.begin(), hashStrMap.end(),
    1, pair&lt;int,int&gt;(0,4));

if ( strItr != hashStrMap.end() )
    cout &lt;&lt; "search_n(): pair&lt;0,4&gt;={" &lt;&lt; strItr-&gt;first &lt;&lt; ","
         &lt;&lt; strItr-&gt;second &lt;&lt; "}" &lt;&lt; endl;
else
    cout &lt;&lt; "search_n(): pair&lt;0,4&gt;={}  Function failed!!!" &lt;&lt; endl;

//End of File
</pre>
</body></html>




<HTML><HEAD>

<TITLE>February 1998/STL Containers Based on Hash Tables/Listing 1</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4>
<A name="HEADING1">Listing 1: Example of a hash map</A></h4>


<pre>
// Define a hash map with an integer as a key
// and a pointer to an integer as the value.
hash_map&lt;int,int*,int_hash_function&gt; hashIPtrMap;

// Insert the test data into the map.
hashIPtrMap[0] = new int(4);
hashIPtrMap[1] = new int(3);
hashIPtrMap[2] = new int(2);
hashIPtrMap[3] = new int(1);
hashIPtrMap[4] = new int(0);

// Define an iterator and find a few of the values.
// hash_map&lt;int,int*,int_hash_function&gt;::iterator iptrItr;

if ( (iptrItr = hashIPtrMap.find(2)) != hashIPtrMap.end() )
    cout &lt;&lt; "hashIPtrMap[2]=" &lt;&lt; *(iptrItr-&gt;second) &lt;&lt; endl;
else
    cout &lt;&lt; "hashIPtrMap[2] not found!!" &lt;&lt; endl;

if ( (iptrItr = hashIPtrMap.find(9)) != hashIPtrMap.end() )
    cout &lt;&lt; "hashIPtrMap[9]=" &lt;&lt; *(iptrItr-&gt;second) &lt;&lt; endl;
else
    cout &lt;&lt; "hashIPtrMap[9] not found!!" &lt;&lt; endl;

// Iterate over all elements in the map and delete the memory
for ( iptrItr = hashIPtrMap.begin();
    iptrItr != hashIPtrMap.end(); iptrItr++ )
    delete iptrItr-&gt;second;
//End of File
</pre>
</body></html>

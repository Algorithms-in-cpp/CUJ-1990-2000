<HTML><HEAD>
<TITLE>October 1991/A Generic Search Routine/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2 (type_check.c)</A></h4>
<pre>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "common.h"

FUNC type_check(struct field_definition *definitions,
              struct record *tran_start,
              int transaction_size,
              char *user_keyword,
              char *user_value)
{

  int i;                         /* loop control */
  BOOL found=OFF;                /* switch if key was matched */

  int integer;                   /* integer value */
  float floater;                 /* float value */
  char *string;                  /* string pointer*/

  /*
    Loop through the tran_start array to match the
    key and obtain subject location.
  */

  for (i=0; strcmp(definitions[i].keyword, "last"); i++) {

       if ( !strcmp(definitions[i].keyword, user_keyword))
              break;

  }

  if ( !strcmp(definitions[i].keyword, "last") ) {
       printf ("Error: keyword '%s' not legal.\n", user_keyword);
       return FAIL;
  }

  /*
     Switch on the type of the subject. For each type,
     convert the user_value to the proper type and set
     the proper pointer. Then call the lookup routine.
  */

  switch (definitions[i].type) {

    case INT:
       integer = atoi(user_value);
       if ( (lookup (INT, definitions[i].position_ptr,
              tran_start, transaction_size,
              (void *) &amp;integer) ) == FAIL) {
              printf ("No match\n");
       }
       break;

    case FLOAT:
       floater = atof(user_value);
       if ( (lookup (FLOAT, definitions[i].position_ptr,
              tran_start, transaction_size,
              (void*) &amp;floater) ) == FAIL) {
              printf ("No match\n");
       }
       break;

    case STRING:
       string = user_value;
       if ( (lookup (STRING, definitions[i].position_ptr,
              tran_start, transaction_size,
              (void *) string) ) == FAIL) {
              printf ("No match\n");

       }
       break;
  }

  return SUCCEED;

}

/* End of File */
</pre>
</BODY>
</HTML>

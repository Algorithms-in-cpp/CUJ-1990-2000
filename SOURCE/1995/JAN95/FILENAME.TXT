************************* MASTER CODE ***************************************

The name of the first file in this disk's directory identifies the volume,
issue number and revision of the disk. The format of this filename is:

    !CDmvvii.rrr

where

    ! = the '!' character
    m =   C for C Users Journal, W for Windows/DOS Developer's Journal
    vv =  volume
    ii =  issue
    rrr = revision (001 for initial release, 002 for next update, etc.)

The file UPDATE.DOC contains information about any additions or
corrections to material on the disk since the original magazine
publication.

If you have obtained this code from a floppy diskette or from CompuServe, the 
headings under the column "FILENAME" represent the names of .ZIP files.  All 
files listed under the filename are archived in the .ZIP file.

If you have obtained this code from UUNET, the headings under the column 
"FILENAME" represent the names of subdirectories.  All files listed under the
"filename" are included in a subdirectory of that name.

Keywords: Jan95 C C++ Endian Portable Numeric strstream CD Standard

The code listings for the January 1995 issue of C/C++ Users Journal
include source code for Philip Erdelsky's portable byte ordering technique,
James A. Kuzdrall's code to transfer numeric values between dissimilar
architectures, and Jim Thomas's article on proposed floating-point extensions
to C.  Also included are listings from P.J. Plauger's Standard C/C++ column,
Chuck Allison's column, Code Capsules, and Ken Pugh's column, Q&A.
*************************  FILE DESCRIPTION **********************************

The following files are included in the disk:

FILENAME		AUTHOR-NAME	TITLE			       PAGE
(Zip archive/
subdirectory name)
-------------------------------------------------------------------------------
plauger 		P.J. Plauger	Standard C/C++:	The Header	10
					<strstream>

    strstbuf.h	 - listing 1, The class strstreambuf
    istrstrm.h	 - listing 2, The class istrstream
    ostrstrm.h	 - listing 3, The class ostrstream


erdelsky		Philip J. 	Portable Byte Ordering in C++	25
			Erdelsky

    endian.h	 - listing 1, Defines byte ordering classes
    endian.cpp	 - listing 2, Simple file with macro switch

kuzdrall		James A.	Transferring Numeric Values	33
			Kuzdrall	Between Computers

    inttxf.c	 - listing 1, Integer transfer functions
    longtxf.c	 - listing 2, Long transfer functions
    flttxf.c	 - listing 3, Floating-point transfer functions
    nrgen.cee	 - not listed, A program to generate a file of test
			       numbers
    nrtest.cee	 - not listed, A program to read the test number file
			       and test the transfer routines
    
thomas			Jim Thomas and	An Introduction to Floating-	49
			Jerome T.	Point C Extensions
			Coonen

    atanh.c	 - listing 1, Sample atanh function
    sdot.c	 - listing 2, Dot product function
    next.c	 - listing 3, Finding the next value
    nextaft.c	 - listing 4, The function nextafter


allison			Chuck Allison	Code Capsules: The Standard	69
					C Library, Part 1

    atox.c	 - listing 1, Converts a hex string to a number in
			      ASCII environments
    atox2.c	 - listing 2, A portable version of listing 1
    atox3.c	 - listing 3, Converts a hex string to a number via
			      sscanf
    copy1.c	 - listing 4, A function that copies a file via
			      character I/O
    copy2.c	 - listing 5, A function that copies a file via block
			      I/O
    view.c	 - listing 6, Outline of a file viewing program that
			      illustrates file positioning
    sort.c	 - listing 7, Sorts files as large as available memory
    search.c	 - listing 8, Searches a sorted array of records with
			      the bsearch function
    deal.c	 - listing 9, A card shuffling program that illustrates
			      random number and integer division
			      functions in <stdlib.h>
    readbase.c	 - listing 10, Uses strtol() to read numbers in
			       different bases
    atox4.c	 - listing 11, An even better version of atox() using
			       strtol()
    find.c	 - listing 12, Uses strstr to find substrings
    searches.c	 - listing 13, Illustrates selected search functions
    
pugh			Kenneth Pugh	Q&A: Are Marching Pointers	91
					Really Faster?

    aspeed.c	 - listing 1, A program to compare indexing vs. pointer
			      addressing for speed

******************************************************************************

If you have questions regarding to the disk, please call or write us.

-----------------------------------------------------------------------------
                           R&D Publications, Inc.
                        1601 W. 23rd St. Suite 200
                            Lawrence, KS 66046
                              (913) 841-1631
-----------------------------------------------------------------------------
    



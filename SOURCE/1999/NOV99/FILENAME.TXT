Keywords: Nov99, C, C++, Java, numerical, FIR, DSP, differentiate, type,
cast, template, generic, loop  

The code listings for the November 1999 issue of C/C++ Users Journal
include source code for Ronald Huss's Concise Method for Evaluating
Derivatives, Carlos Moreno's FIR digital filters, and Ivan Johnson's
method of using templates for efficient dynamic type checking. Also
included are listings from Chuck Allison's column, import java.*, Dan
Saks' column, C++ Theory and Practice, Bobby Schmidt's column, Uncaught
Exceptions, and Letters to the Editor.



*************************  FILE DESCRIPTION **********************************

The following files are included in the disk:

FILENAME		AUTHOR-NAME	    TITLE			       
(Zip archive/
subdirectory name)
-------------------------------------------------------------------------------
pumar                   Ronald Huss,        A Concise Method for Evaluating
                        Mark A. Pumar,      Derivatives
                        and Robert L. Rudin

    feed.h              not listed, Header file for class CFeed and non-
                                    member operations. Partially listed
                                    as Figure 1 in magazine
    feed.cpp            not listed, Implementation file for class CFeed
                                    and non-member operations. Partially
                                    listed as Figure 2 in magazine
    feedtest.cpp        Figure 3, Example usage of CFeed class

moreno                  Carlos Moreno       Constructing FIR Filters with
                                            valarray

    FIR.h                       not listed, FIR filter implementation, 
                                            partially listed as Figure 2 in
                                            magazine
    filter_types.h              not listed, structs for specifying specific
                                            filter types and their frequency
                                            responses in constructing an FIR
                                            filter, partially listed as Figure
                                            3 in magazine
    conversions.h               not listed, Supplies needed conversions between
                                            numeric types, partially listed as
                                            Figure 4 in magazine
    Signals.h                   not listed, Signal class implementation,
                                            partially listed as Figure 5 in
                                            magazine
    benchmark.c                 not listed
    benchmark.cpp               not listed
    Equalizer_demo_readme.txt   not listed  Explains how to run demo program
    Matrix.h                    not listed, Defines matrix class required
                                            to build FIR filter
    Matrix.cpp                  not listed, Implements matrix class required
                                            to build FIR filter



johnson                 Ivan J. Johnson     Templates for Efficient
                                            Dynamic Type Checking

    cast.h              Listing 1, The assert_cast function templates
    alt_cast.h          Listing 2, Template class workarounds for compiler
                                   template argument deduction and overload
                                   resolution problems
    democast.cpp        not listed, A file that tests the template-handling
                                    capabilities of your compiler. If it
                                    does not compile, you may have to
                                    use alt_cast.h

allison                 Chuck Allison       import java.*: Object-Oriented
                                            Programming in Java

    Employee.java       Figure 1, A simple Employee class
    EmployeeTest.java   Figure 2, Illustrates upcasting and dynamic binding
    DownCastTest.java   Figure 4, Illustrates instanceof and Downcasting
    ArrayListTest.java  Figure 5, Illustrates upcasting and downcasting
                                  with a collection
    AEmployee.java      Figure 7, An abstract Employee class
    HourlyEmployee.java Figure 8, The HourlyEmployee class
    EmployeeTest2.java  Figure 9, Testing the employee class hierarchy
    OverDemo.java       Figure 10, Shows both overriding and overloading
    
saks                    Dan Saks            C++ Theory and Practice:
                                            Standard C++ as a High-Level
                                            Language?

    get_token.cpp       Listing 1, A get_token function that scans
                                   indentifiers and newlines directly
                                   from standard input
    cref.cpp            Listing 2, A version of the cross-reference program
                                   using streams, strings, maps, and vectors


schmidt                 Bobby Schmidt       Uncaught Exceptions:
                                            Paper or Plastic

    test.c              Listing 1, Functions to extract a filename with
                                   accompanyting test program

letters                 (Mario?) Andrew     We Have Mail

    shutdown.c          Listing 1, A process shutdown technique that uses
                                   WaitForSingleObject


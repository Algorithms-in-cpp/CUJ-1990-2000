Keywords: Jul99, Java, C, C++, XML, ODBC, restrict, C9X, NT, logging,
tree, const

The code listings for the July 1999 issue of C/C++ Users Journal include
source code for Sebastien Andrivet's simple XML parser, Pat
Paternostro's Java skeleton code generator, Giovanni Bavestrelli's ODBC
wrappers, Arch Robison's code to check for restricted pointer support,
and David Hooker's NT event logging routine. Also included are listings
from P.J. Plauger's column, Standard C/C++, Dan Saks' column C++ Theory
and Practice, and Chuck Allison's import java.* column.

*************************  FILE DESCRIPTION **********************************

The following files are included in the disk:

FILENAME		AUTHOR-NAME	    TITLE			       
(Zip archive/
subdirectory name)
-------------------------------------------------------------------------------
andrivet                Sebastien Andrivet  A Simple XML Parser

    xmlebnf.txt         - Figure 1, Simple XML parser grammar
                                    represented in EBNF
    usexml.cpp          - Figure 2, Sample use of XML parser
    enumelem.cpp        - Figure 3, Enumerating elements and subelements

    Under directory xmlparse:

       Full source code and examples

paternos                Pat Paternostro     A Java Skeleton Code Generator

    Skeleton.java       - not listed, The java skeleton code generator
                                      java source file. Partially listed
                                      as Figure 2
    consskel.java       - Figure 3, A console skeleton created by method
                                    generateConsoleApp
    guiappskel.java     - Figure 4, A GUI/applet skeleton created by
                                    function generateAppletGUI

    Under directory skeletons:

      Pre-generated skeletons for various types of Java applets and 
      applications

bavestre                Giovanni            Wrapping the Windows
                        Bavestrelli         ODBC API


    dlgodbc.cpp         - not listed
    dlgodbc.h           - not listed, Defines the TryODBC dialog,
                                      partially listed in Figure 2
                                      as TryODBC.h (erroneously)
    odbcgio.cpp         - not listed
    odbcgio.h           - not listed
    resource.h          - not listed
    stdafx.cpp          - not listed
    stdafx.h            - not listed
    tryodbc.clw         - not listed
    tryodbc.cpp         - not listed
    tryodbc.dsp         - not listed
    tryodbc.dsw         - not listed
    tryodbc.h           - not listed
    tryodbc.mdb         - not listed
    tryodbc.rc          - not listed

    Under directory res:

       tryodbc.ico      - not listed
       tryodbc.rc2      - not listed
    
robison                 Arch D. Robison     Restricted Pointers are
                                            Coming

    restrict.c          - Listing 1, A test for compiler support of
                                     restrict
    transfor.c          - Listing 2, What possible compiler
                                     optimizations might look like if
                                     done by hand


hooker                  David Hooker        A Logging Routine for
                                            Windows NT Events

    Msg.h               - not listed
    Msg.mc              - Listing 1, A message control file, containing
                                     message templates
    Instrsrc.cpp        - Listing 2, Implementation and use of 
                                     InstallEventLogSource routine
    CopyFile.cpp        - Listing 3, Sample use of function LogEvent
    LogEvent.cpp        - Listing 4, Implementation of function LogEvent
    LogEvent.h          - not listed


saks                    Dan Saks            C++ Theory and Practice: 
                                            Thinking Even Deeper

    deep.h              - Listing 1, A class template for deeply-const
                                     pointers, with constructors,
                                     conversion operators, and ->
                                     operators
    table.h             - Listing 2, The cross-reference table class
                                     definition using a deep pointer
    table.cpp           - Listing 3, The cross-reference table non-inline
                                     member definitions using deep pointers
    deep2.h             - Listing 4, A class template for deeply-const
                                     pointers, with constructors,
                                     conversion operators, -> operators,
                                     and a non-copy assignment operator


allison             Chuck Allison           import java.*: Thinking in
                                            Objects

    EmployeeTest1.java  - Figure 1, Using a class as a data record
    EmployeeTest2.java  - Figure 2, Encapsulates data behind access
                                    methods
    EmployeeTest3.java  - Figure 3, Uses constructors for initialization
    EmployeeTest4.java  - Figure 4, Uses a static field and method
    EmployeeTest5.java  - Figure 5, Shows how to use finalize and the
                                    method System.gc
    EmployeeTest6.java  - Figure 6, Implements class relationships via
                                    handles


plauger     P.J. Plauger        Standard C/C++: A Better Red-Black Tree

    insert.cpp          - Figure 1, _Tree::insert
    _insert.cpp         - Figure 2, _Tree::_Insert
    erase.cpp           - Figure 3, _Tree::erase


Keywords: Sep99, C, C++, algorithm, search, AI, STL, iterator, MFC,
thread, console, Win32

The code listings for the September 1999 issue of C/C++ Users Journal
include source code for Dwayne Phillips' AI search algorithms, Kevin
Kostrzewa's STL-Style iterators for MFC, Kevin Manley's thread-private
heaps to improve performance, and Stan Mitchell's console app class for
Win32. Also included are listings from P.J. Plauger's column, Standard
C/C++, Chuck Allison's column, import java.*, Dan Saks' column, C++
Theory and Practice, Pete Becker's column, The Journeyman's Shop, and
code that accompanies Bill Rivers' Letter to the Editor.

*************************  FILE DESCRIPTION **********************************

The following files are included in the disk:

FILENAME		AUTHOR-NAME	    TITLE			       
(Zip archive/
subdirectory name)
-------------------------------------------------------------------------------
phillips                Dwayne Phillips     Searching for Solutions with AI

    d.c                 not listed, Complete version of Figure 5 from 
                                    magazine. A program that illustrates
                                    depth-first searching
    b.c                 not listed, Complete version of Figure 9 from 
                                    magazine. A program that illustrates
                                    breadth-first searching
    u.c                 not listed, Complete version of Figure 10 from
                                    magazine. A program that illustrates
                                    uniform-cost searching

kostrzew                Kevin Kostrzewa     STL-Style Iterators for MFC

    arriter.h           not listed, Array iterator definitions
    listiter.h          not listed, List iterator definitions
    mapiter.h           not listed, Map iterator definitions
    example1.cpp        Figure 1, Simple example of iterating over
                                  STL collections
    example2.cpp        Figure 2, Simple example of iterating over
                                  MFC collections
    example3.cpp        Figure 3, Iterating through a sample MFC list,
                                  array, and map using mfciter
    example4.cpp        Figure 4, Example of forward iterator operations
                                  using CMap iterator
    example5.cpp        Figure 5, Example of bidirectional iterator
                                  operations using CList iterator
    example6.cpp        Figure 6, Example of random acces iterator
                                  operations using CArray iterator
    example7.cpp        Figure 7, Comparing iterator based sorting
                                  using <algorithm> with regular MFC
                                  sorting on an array of ints


allison                 Chuck Allison       import java.*: Packaging
                                            Your Objects

    consumer.cpp        Listing 1, Controlling a resource in C++
    ResourceTest.java   Listing 2, Controlling a resource in Java
    

manley                  Kevin Manley        Improving Performance with
                                            Thread-Private Heaps

    main.cpp                        Listing 1, A program to measure 
                                               multithreaded performance
                                               using a single process heap
                                               vs. thread-private heaps
    ThreadPrivateHeapAllocated.h    Listing 2a, Definition of class
                                               CThreadPrivateHeapAllocated
    ThreadPrivateHeapAllocated.cpp  Listing 2b, Implementation of class
                                               CThreadPrivateHeapAllocated
    main2.cpp                       Listing 3, A program that measures
                                               multithreaded performance
                                               using thread classes and
                                               class-specific new and
                                               delete

mitchell                Stan Mitchell       Easier Console Apps in Win32

    Under subdirectory conlib:

    conapp.cpp          not listed, includes code shown in Figures 2,
                                    4, 6, 7, and 10
    conlib50.dsp
    conlib50.mak
    conlib60.dsp
    conlib60.mak
    usage.doc

    Under subdirectory conlib/include:

    conapp.h            not listed, includes code shown in Figures 1,
                                    3, 5, 8, and 9
    conlib.rc
    conres.h

    Under subdirectory conlib/lib:

    conlib.lib
    dconlib.lib
    uconlib.lib
    udconlib.lib

    Under subdirectory testapp:

    StdAfx.h
    StdAfx.cpp
    testapp60.mak
    testapp.cpp
    testapp50.dsp
    testapp.h
    testapp.rc
    resource.h
    testapp60.dsp
    testapp50.mak

    Under subdirectory testapp/release:

    testapp.exe

    Under subdirectory testapp/uniRelease

    testapp.exe

saks                    Dan Saks            C++ Theory and Practice: 
                                            Isolating Design Decisions,
                                            Part 2

    table.h             Listing 1, The cross_reference_table class and
                                   inline member function definitions
    table.cpp           Listing 2, The cross_reference_table non-inline
                                   member definitions
    sequence.h          Listing 3, A not quite finished
                                   line_number_sequence class definition
    table2.cpp          Listing 4, An unfinished table.cpp (Listing 2) that
                                   #includes sequence.h
    sequenc2.h          Listing 5, The line_number_sequence class
                                   definition
    sequenc2.cpp        Listing 6, The line_number_sequence non-inline
                                   member definitions
    table3.cpp          Listing 7, The cross_reference_table non-inline
                                   member definitions
    
becker                  Pete Becker         The Journeyman's Shop:
                                            Software Testing 101

    bbtest.cpp          Figure 1, A black box test for malloc and free

plauger                 P.J. Plauger        Standard C/C++: Why Y2K?

    time.h              Listing 1, Synopsis of <time.h>
    timeget.cpp         Listing 2, Synopsis of time_get
    timeput.cpp         Listing 3, Synopsis of time_put

rivers                  Bill Rivers         We Have Mail
    
    SimpleMath.cpp      not listed, improvment to SimpleMath.cpp from Eric
                                    Roe's article, "A Wrapper Class for
                                    Dynamically Linked Plug-Ins" (May 1999)
    DynamicLibrary.h    not listed, improvement to DynamicLibrary.h from Eric
                                    Roe's article, "A Wrapper Class for
                                    Dynamically Linked Plug-Ins" (May 1999)


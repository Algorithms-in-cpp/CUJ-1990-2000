Keywords: Apr99, C, C++, COM, CORBA, Automation, iterator, asynchronous
Unicode, const, browser, report 

The code listings for the April 1999 issue of C/C++ Users Journal
include source code for Andrei Alexandrescu's automation_vector for
adapting OLE Automation arrays to the Standard C++ vector interface,
Mark Nadelson and Colleen Woodward's report generator using an embedded
web browser, Greg Heidel's technique for making asynchronous calls in
COM, Marc Anderson's CORBA load-balancing scheme for VisiBroker, and
David Lorde's generic iterator for strings. Also included are listings
from P.J. Plauger's column, Standard C/C++, Dan Saks' column, C++ Theory
and Practice, Bobby Schmidt's column, Uncaught Exceptions, and Letters
to the Editor.

*************************  FILE DESCRIPTION **********************************

The following files are included in the disk:

FILENAME		AUTHOR-NAME	TITLE			       
(Zip archive/
subdirectory name)
-------------------------------------------------------------------------------
alexandr    Andrei Alexandrescu Adapting Automation Arrays to the Standard
                                vector Interface

    automation_vector.h   - not listed, Defines template class
                                        automation_vector
    automation_vector.cpp - not listed, Implements template class
                                        automation vector

nadelson    Mark Nadelson and   Report Generation Using an Integrated    
            Colleen Woodward    Web Browser


    Updated 4/7/1999. Added directory \res and files MortCalc.rc2 and mortcalc.ico


    webbrowser2.h       - not listed
    CLoanCalc.cpp       - not listed, Implements class CLoanCalc for
                                      sample application
    CLoanCalc.h         - not listed, Header for class CLoanCalc for
                                      sample application
    CReport.cpp         - partially listed, Implements main class CReport
                                            for generating reports
    CReport.h           - partially listed, Definition of main class
                                            CReport for generating reports
    MortCalc.aps        - not listed
    MortCalc.clw
    MortCalc.cpp        - not listed, Main source file for sample application
    MortCalc.dsp        - not listed
    MortCalc.dsw        - not listed
    StdAfx.cpp          - not listed
    StdAfx.h            - not listed
    webbrowser2.cpp     - not listed
    MortCalc.h          - not listed, Main header file for sample application
    MortCalc.mak        - not listed
    MortCalc.ncb        - not listed
    MortCalc.opt        - not listed
    MortCalc.plg        - not listed
    MortCalc.rc         - not listed, resource file for sample application
    MortCalcDlg.cpp     - partially listed, Implementation of dialog box
                                            for sample application
    MortCalcDlg.h       - not listed, Header for dialog box for sample
                          application
    MortOutput.cpp      - not listed
    ReadMe.txt          - not listed
    resource.h          - not listed

    Under subdirectory res:

    MortCalc.rc2	- not listed
    mortcalc.ico	- not listed

heidel      Greg Heidel         Using Asynchronous Calls in COM

    Under directory IOUTest:

        ERROR.CPP
        ERROR_.H
        INIT.H
        IOUSink.h
        IOUTest.dsp
        IOUTest.dsw
        IOUTest.plg
        MAIN.H
        REPLY.CPP
        REPLY.H
        replyNotify.h
        REQUEST.H
        resultIOU.cpp
        resultIOU.h
        IOUTest.ncb
        IOUTest.opt
        Request.cpp
        Main.cpp
        Error.h

    Under directory IOUTest\Release:

        vc60.idb
        IOUTest.pch
        error.obj
        main.obj
        request.obj
        resultIOU.obj
        IOUTest.exe

   Under directory ResultIOU:

        CPResultIOU.h
        DLLDATA.C
        ResultIOU.tlb
        ResultIOU.ncb
        Request.cpp
        Request.h
        Request.rgs
        REQUEST_.H
        RESOURCE.H
        Result.cpp
        refcountbase.cpp
        refcountbase.h
        Request_.cpp
        ResultIOU.rc
        ResultIOU.h
        ResultIOUps.def
        ResultIOUps.mk
        resultIOU_.h
        Event.cpp
        ResultIOU_p.c
        RESULT_.H
        StdAfx.cpp
        StdAfx.h
        ResultIOU.001
        ResultIOU.opt
        refcount.h
        refcount.cpp
        refCountPtr.h
        refCountPtr.cpp
        foo.cpp
        Event.h
        Mutex.h
        Mutex.cpp
        Result.h
        Result.rgs
        ResultIOU.aps
        ResultIOU.clw
        ResultIOU.cpp
        ResultIOU.def
        ResultIOU.dsp
        ResultIOU.dsw
        ResultIOU_i.c
        ResultIOU.idl
        ResultIOU.plg

  Under directory ResultIOU\ReleaseUMinDependency:

        ResultIOU.res
        ResultIOU.pch
        vc60.idb
        StdAfx.obj
        ResultIOU.obj
        Result.obj
        request_.obj
        Request.obj
        refcountbase.obj
        mutex.obj
        event.obj
        ResultIOU.dll
        ResultIOU.lib
        ResultIOU.exp
        regsvr32.trg

anderson    Marc Anderson       CORBA Load Balancing with VisiBroker


    Utilities.h             - not listed
    Utilities.cpp           - not listed
    stdmk                   - not listed
    server.cpp              - Figure 4, Source file for sample server
                                        application
    Makefile                - not listed
    LoadBalancing.idl       - partially listed, interface definition language
                              for load-balancing server
    CosNaming.idl
    client.cpp              - not listed, Source file for sample client
                                          application
    businessObjectImpl.h    - not listed
    businessObjectImpl.cpp  - not listed
    businessObject.idl      - not listed
    AWSServer.idl           - not listed
    AWSServer.h             - not listed
    AWSServer.cpp           - not listed
    AWSNames.h              - not listed
    AWSLoadBalancing.cpp    - partially listed, Implements
                                                load-balancing server
                                                functionality
    AWSLoadBalancing.h      - not listed, defines load-balancing server
                                          class, AWSLoadBalancing
    AWSNames.cpp            - not listed

lorde       David Lorde         A Generic Iterator for Strings

    TokenIter.h             - Listing 1, Interface and implementation for
                                         TokenIter class
    TokenFinder.h           - Listing 2, Interface and implementation for
                                         TokenFinder class
    WordIter.h              - Listing 3, Defines WordIter and interface
                                         and implementation of WordFinder
                                         class
    main.cpp                - Listing 4, Test stub for generic TokeIter class

saks        Dan Saks            C++ Theory and Practice: Thinking Deeply

    table.h             - Listing 1, cross-reference table interface
    table.cpp           - Listing 2, cross-reference table implementation
    table2.cpp          - Listing 3, cross-reference table implementation
                                     with deeply const members

schmidt     Bobby Schmidt       Uncaught Exceptions

    fparam.cpp          - Figure 1, Possible solutions to problem of
                                    passing a member function as a parameter

plauger     P.J. Plauger        Standard C/C++: Unicode Files

    uconvert1.h         - Listing 1, Simple Unicode converter
    uconvert2.h         - Listing 2, Fancier Unicode converter
    test.cpp            - Listing 3, Testing fancier converter

letters     We Have Mail

    Barnett Kurtz submitted modifications to Warren Ward's stream
    encryption code from his article "Applying Stream Encryption,"
    C/C++ Users Journal, September 1998. Kurtz's code is as follows:

    Under directory kurtz:

        ARACrypt.cpp
        ARACrypt.h
        cryptor.cpp
        cryptor.h
        MainFrm.cpp
        MainFrm.h
        ReadMe.txt
        resource.h
        StdAfx.cpp
        StdAfx.h
        TCrypto.aps
        TCrypto.clw
        TCrypto.cpp
        TCrypto.dsp
        TCrypto.dsw
        TCrypto.h
        TCrypto.ncb
        TCrypto.opt
        TCrypto.rc
        TCryptoDoc.cpp
        TCryptoDoc.h
        TCryptoView.cpp
        TCryptoView.h

    Under directory kurtz\Release:

        TCrypto.exe

    Under directory kurtz\res:

        TCrypto.ico
        TCrypto.rc2
        TCryptoDoc.ico
        Toolbar.bmp

    -----
    Joel Rees contributed proposed syntax for a "CPU-friendly" C.
    It appears under directory rees as:

        cpuc.h
